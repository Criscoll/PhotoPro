===== Week 4 =====

8/10/2020

I created a function, 'watermark.py' which lays a semi-transparent watermark over an inputted image,
which will be sourced from the postgres database. I have yet to test this function, given that this is supposed
to be part of the discovery functionality of the web app.
UPDATE:
I revised the watermark.py file this afternoon after some testing, and finally got it to behave correctly;
the 'apply_watermark' function takes in a filename of the base image as an input, and creates a semi-transparent image which serves
as the watermark which is then applied over the original image. The composite image is then saved, creating a watermarked version of
the original photograph.
I still need to find a way to integrate this functionality into the original user discovery method.

9/10/2020

I was finally able to integrate the watermark function properly into the discovery method of app.py after much difficulty. The
watermark function now takes in an image file generated from the byte data from the database sql entry, applies the watermark and returns
a bytesIO object of the resultant file. The bytesIO object is then encoded and processed as a part of the request data for the
search results at the frontend.