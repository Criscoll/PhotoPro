=======================    WEEK 3    =======================

October 1st:
I have created the postgres database on Google Cloud Platform. On this database I added and tested
the users table which contains serial ID, first name, last name, email and password.
The email is unique and the serial ID is the primary key.

I also wrote four functions in the backend utils/connect_to_database.py:
    1. create_user: creates a new user in the postgres DB
    2. login_user: checks that the email is unique and matches the given password
    3. change_password: check that the user is logged in and then changes the password to the provided
    4. forgot_password_get_change_password_link: sends email to provided email to change the user's password

October 3rd:
Added post function and discovery function, populated the database with ~300
photos. Discovery function queries photos that weren't posted by this user in batches
such as 16 to 32. I also created database_function_tests.py in the utils for testing
of the database functions. I also split connect_to_database.py into two files.
connect.py and general_user.py. Connect.py simply connects to the database and allows
for imports of the connection and cursor objects. general_user.py has the functions
relating to functions that are for everyone. So far all of these files are located
under utils/database.

=======================    WEEK 4    =======================

October 8-9th:
Last night I integrated the backend api with the frontend in react. I create the login page,
registration page, forgot password page, and change password page. These all require css updates since
they only provide the bare minimum functionality. They also need to be integrated with each other through
a routing system. I have also worked on the main wrapper to ensure that the discovery function uses our
database. Also, I added optional query terms to our database which use the comments to filter as of current.

October 11th:
Today I figured out how to and implmented photo uploading and integerated the posting
of the uploaded file and the API to the Postgres database. I also have been working on
but have yet to complete direct photo capture from the desktop and then uploading
that file.

=======================    WEEK 5    =======================
Today I added titles and prices to the photo uploading and updated the discovery functions and posting
functions as a result of such.
