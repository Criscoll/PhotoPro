{"ast":null,"code":"var _jsxFileName = \"/home/mimi/Desktop/COMP3900/capstone-project-comp3900-f11a-2mjec/photopro-app/src/components/searchbar/searchbar.jsx\";\nimport React, { useState } from \"react\";\nimport \"./searchbar.css\";\nimport axios from \"axios\";\nimport Feed from \"../feed/feed\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nfunction SearchBar(props) {\n  const [imgs, setImgs] = useState([]);\n  const [searchVal, setSearchVal] = useState(\"\"); // const fetchImages = async function (term) {\n  //   const response = await axios.get(\"http://localhost:5000/discovery\", {\n  //     params: { query: term, batch_size: 20 }, //user_id: 1\n  //   });\n  //   console.log(response.data.result);\n  //   // getLikes(response);\n  //   console.log(response);\n  //   setImgs([...imgs, response.data.result]);\n  //   console.log(imgs);\n  //   return response;\n  // };\n\n  const fetchImages = term => {\n    axios.get(\"http://localhost:5000/discovery\", {\n      params: {\n        query: term,\n        batch_size: 20\n      } //user_id: 1\n\n    }).then(res => {\n      setImgs([...imgs, ...res.data.result]);\n      console.log(res);\n      console.log(imgs);\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const images = fetchImages(searchVal); //images.then((imageResults) => {\n    //console.log(imageResults);\n    // this means no images were found\n    //if (imageResults.data.result !== false) {\n    //setImgs(imageResults.data.result);\n    //}\n    //});\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"flexContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"inputStyle\",\n    type: \"text\",\n    value: searchVal,\n    onChange: event => setSearchVal(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Feed, {\n    foundImages: imgs,\n    fetchImages: fetchImages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default SearchBar;","map":{"version":3,"sources":["/home/mimi/Desktop/COMP3900/capstone-project-comp3900-f11a-2mjec/photopro-app/src/components/searchbar/searchbar.jsx"],"names":["React","useState","axios","Feed","InfiniteScroll","SearchBar","props","imgs","setImgs","searchVal","setSearchVal","fetchImages","term","get","params","query","batch_size","then","res","data","result","console","log","handleSubmit","e","preventDefault","images","event","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,iBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;;AACA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C,CAFwB,CAGxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,QAAMU,WAAW,GAAIC,IAAD,IAAU;AAC5BV,IAAAA,KAAK,CACFW,GADH,CACO,iCADP,EAC0C;AACtCC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,KAAK,EAAEH,IAAT;AAAeI,QAAAA,UAAU,EAAE;AAA3B,OAD8B,CACG;;AADH,KAD1C,EAIGC,IAJH,CAISC,GAAD,IAAS;AACbV,MAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAU,GAAGW,GAAG,CAACC,IAAJ,CAASC,MAAtB,CAAD,CAAP;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYf,IAAZ;AACD,KARH;AASD,GAVD;;AAWA,QAAMgB,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,MAAM,GAAGf,WAAW,CAACF,SAAD,CAA1B,CAF0B,CAG1B;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAVD;;AAWA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,QAAQ,EAAEc,YAAhB;AAA8B,IAAA,SAAS,EAAC,eAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,YADZ;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,KAAK,EAAEd,SAHT;AAIE,IAAA,QAAQ,EAAGkB,KAAD,IAAWjB,YAAY,CAACiB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAJnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eASE,oBAAC,IAAD;AAAM,IAAA,WAAW,EAAEtB,IAAnB;AAAyB,IAAA,WAAW,EAAEI,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF;AAaD;;AACD,eAAeN,SAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./searchbar.css\";\nimport axios from \"axios\";\nimport Feed from \"../feed/feed\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nfunction SearchBar(props) {\n  const [imgs, setImgs] = useState([]);\n  const [searchVal, setSearchVal] = useState(\"\");\n  // const fetchImages = async function (term) {\n  //   const response = await axios.get(\"http://localhost:5000/discovery\", {\n  //     params: { query: term, batch_size: 20 }, //user_id: 1\n  //   });\n  //   console.log(response.data.result);\n  //   // getLikes(response);\n  //   console.log(response);\n  //   setImgs([...imgs, response.data.result]);\n  //   console.log(imgs);\n  //   return response;\n  // };\n  const fetchImages = (term) => {\n    axios\n      .get(\"http://localhost:5000/discovery\", {\n        params: { query: term, batch_size: 20 }, //user_id: 1\n      })\n      .then((res) => {\n        setImgs([...imgs, ...res.data.result]);\n        console.log(res);\n        console.log(imgs);\n      });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const images = fetchImages(searchVal);\n    //images.then((imageResults) => {\n    //console.log(imageResults);\n    // this means no images were found\n    //if (imageResults.data.result !== false) {\n    //setImgs(imageResults.data.result);\n    //}\n    //});\n  };\n  return (\n    <React.Fragment>\n      <form onSubmit={handleSubmit} className=\"flexContainer\">\n        <input\n          className=\"inputStyle\"\n          type=\"text\"\n          value={searchVal}\n          onChange={(event) => setSearchVal(event.target.value)}\n        />\n      </form>\n      <Feed foundImages={imgs} fetchImages={fetchImages} />\n    </React.Fragment>\n  );\n}\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}