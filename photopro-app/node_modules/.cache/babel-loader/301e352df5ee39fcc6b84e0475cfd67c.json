{"ast":null,"code":"var _jsxFileName = \"/home/cristian/Documents/projects/COMP3900_PhotoPro/capstone-project-comp3900-f11a-2mjec/photopro-app/src/pages/checkoutPage/CheckoutPage.jsx\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport './CheckoutPage.css';\nimport ToolBar from '../../components/toolbar/toolbar';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport CheckoutItem from './checkoutItem/CheckoutItem';\nimport { useHistory } from 'react-router-dom';\nimport CardName from './textfields/CardName';\nimport CardNum from './textfields/CardNum';\nimport CardMonth from './textfields/CardMonth';\nimport CardYear from './textfields/CardYear';\nimport CardCvv from './textfields/CardCvv';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: 'ch'\n    }\n  }\n}));\nexport default function CheckoutPage(props) {\n  const [shoppingCartItems, setShoppingCartItems] = useState([]);\n  const [placeOrderClicked, setPlaceOrderClicked] = useState(false);\n  const [cardNumValidated, setCardNumValidated] = useState(false);\n  const [cardNameValidated, setCardNameValidated] = useState(false);\n  const [cardMonthValidated, setCardMonthValidated] = useState(false);\n  const [cardYearValidated, setCardYearValidated] = useState(false);\n  const [cardCvvValidated, setCardCvvValidated] = useState(false);\n  const classes = useStyles();\n  const history = useHistory();\n  useEffect(() => {\n    const getUserNotPurchasedItems = () => {\n      axios({\n        method: 'GET',\n        url: 'http://localhost:5000/get_user_purchases',\n        params: {\n          save_for_later: 0,\n          purchased: 0\n        }\n      }).then(response => {\n        if (response.data.result !== false) {\n          console.log(response);\n          setShoppingCartItems(response.data.result);\n          history.replace('/');\n        }\n      });\n    };\n\n    getUserNotPurchasedItems();\n  }, []);\n  useEffect(() => {\n    const updatePurchase = img_id => {\n      axios({\n        method: 'POST',\n        url: 'http://localhost:5000/update_user_purchases_details',\n        params: {\n          save_for_later: 0,\n          purchased: 1,\n          image_id: img_id\n        }\n      }).then(response => {\n        console.log(response);\n      });\n    };\n\n    console.log('CALLED');\n\n    if (cardNumValidated && cardYearValidated && cardMonthValidated && cardNameValidated && cardCvvValidated) {\n      console.log('APPROVED');\n      shoppingCartItems.map(item => {\n        console.log(item.image_id);\n        updatePurchase(item.image_id);\n      });\n    }\n  }, [cardNumValidated, cardNameValidated, cardYearValidated, cardMonthValidated, cardCvvValidated]);\n\n  const handlePlaceOrderButton = () => {\n    setPlaceOrderClicked(!placeOrderClicked);\n  };\n\n  const handleEditButton = () => {\n    history.push('/shopping-cart');\n  };\n\n  const checkoutItemsComponents = shoppingCartItems.map(item => {\n    //console.log(item);\n    return /*#__PURE__*/React.createElement(CheckoutItem, {\n      key: item.image_id,\n      image_id: item.image_id,\n      img: item.img,\n      price: item.price,\n      title: item.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }\n    });\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ToolBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"checkout-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, \"Checkout\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"checkout-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"payment-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, \"Fill payment info:\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cart-details-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CardNum, {\n    placeOrderClicked: placeOrderClicked,\n    setCardNumValidated: setCardNumValidated,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CardName, {\n    placeOrderClicked: placeOrderClicked,\n    setCardNameValidated: setCardNameValidated,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CardMonth, {\n    placeOrderClicked: placeOrderClicked,\n    setCardMonthValidated: setCardMonthValidated,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CardYear, {\n    placeOrderClicked: placeOrderClicked,\n    setCardYearValidated: setCardYearValidated,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CardCvv, {\n    placeOrderClicked: placeOrderClicked,\n    setCardCvvValidated: setCardCvvValidated,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    onClick: handlePlaceOrderButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }, \"PLACE ORDER\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"purchase-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }, shoppingCartItems.length, ' ', shoppingCartItems.length > 1 ? 'Items' : 'Item', \":\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: handleEditButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"purchased-items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }, checkoutItemsComponents), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }, \"TOTAL TO PAY: $\", props.location.state.totalPrice)))));\n}","map":{"version":3,"sources":["/home/cristian/Documents/projects/COMP3900_PhotoPro/capstone-project-comp3900-f11a-2mjec/photopro-app/src/pages/checkoutPage/CheckoutPage.jsx"],"names":["React","useState","useEffect","useRef","ToolBar","TextField","Button","axios","CheckoutItem","useHistory","CardName","CardNum","CardMonth","CardYear","CardCvv","makeStyles","useStyles","theme","root","margin","spacing","width","CheckoutPage","props","shoppingCartItems","setShoppingCartItems","placeOrderClicked","setPlaceOrderClicked","cardNumValidated","setCardNumValidated","cardNameValidated","setCardNameValidated","cardMonthValidated","setCardMonthValidated","cardYearValidated","setCardYearValidated","cardCvvValidated","setCardCvvValidated","classes","history","getUserNotPurchasedItems","method","url","params","save_for_later","purchased","then","response","data","result","console","log","replace","updatePurchase","img_id","image_id","map","item","handlePlaceOrderButton","handleEditButton","push","checkoutItemsComponents","img","price","title","length","location","state","totalPrice"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './CheckoutPage.css';\nimport ToolBar from '../../components/toolbar/toolbar';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport CheckoutItem from './checkoutItem/CheckoutItem';\nimport { useHistory } from 'react-router-dom';\n\nimport CardName from './textfields/CardName';\nimport CardNum from './textfields/CardNum';\nimport CardMonth from './textfields/CardMonth';\nimport CardYear from './textfields/CardYear';\nimport CardCvv from './textfields/CardCvv';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: 'ch',\n    },\n  },\n}));\n\nexport default function CheckoutPage(props) {\n  const [shoppingCartItems, setShoppingCartItems] = useState([]);\n  const [placeOrderClicked, setPlaceOrderClicked] = useState(false);\n  const [cardNumValidated, setCardNumValidated] = useState(false);\n  const [cardNameValidated, setCardNameValidated] = useState(false);\n  const [cardMonthValidated, setCardMonthValidated] = useState(false);\n  const [cardYearValidated, setCardYearValidated] = useState(false);\n  const [cardCvvValidated, setCardCvvValidated] = useState(false);\n\n  const classes = useStyles();\n\n  const history = useHistory();\n\n  useEffect(() => {\n    const getUserNotPurchasedItems = () => {\n      axios({\n        method: 'GET',\n        url: 'http://localhost:5000/get_user_purchases',\n        params: {\n          save_for_later: 0,\n          purchased: 0,\n        },\n      }).then((response) => {\n        if (response.data.result !== false) {\n          console.log(response);\n          setShoppingCartItems(response.data.result);\n          history.replace('/');\n        }\n      });\n    };\n    getUserNotPurchasedItems();\n  }, []);\n\n  useEffect(() => {\n    const updatePurchase = (img_id) => {\n      axios({\n        method: 'POST',\n        url: 'http://localhost:5000/update_user_purchases_details',\n        params: {\n          save_for_later: 0,\n          purchased: 1,\n          image_id: img_id,\n        },\n      }).then((response) => {\n        console.log(response);\n      });\n    };\n\n    console.log('CALLED');\n    if (\n      cardNumValidated &&\n      cardYearValidated &&\n      cardMonthValidated &&\n      cardNameValidated &&\n      cardCvvValidated\n    ) {\n      console.log('APPROVED');\n      shoppingCartItems.map((item) => {\n        console.log(item.image_id);\n        updatePurchase(item.image_id);\n      });\n    }\n  }, [\n    cardNumValidated,\n    cardNameValidated,\n    cardYearValidated,\n    cardMonthValidated,\n    cardCvvValidated,\n  ]);\n\n  const handlePlaceOrderButton = () => {\n    setPlaceOrderClicked(!placeOrderClicked);\n  };\n\n  const handleEditButton = () => {\n    history.push('/shopping-cart');\n  };\n\n  const checkoutItemsComponents = shoppingCartItems.map((item) => {\n    //console.log(item);\n    return (\n      <CheckoutItem\n        key={item.image_id}\n        image_id={item.image_id}\n        img={item.img}\n        price={item.price}\n        title={item.title}\n      />\n    );\n  });\n\n  return (\n    <React.Fragment>\n      <ToolBar />\n      <div className=\"checkout-wrapper\">\n        <h1>Checkout</h1>\n        <div className=\"checkout-grid\">\n          <div className=\"payment-info\">\n            <h2>Fill payment info:</h2>\n            <form className={classes.root} noValidate autoComplete=\"off\">\n              <div className=\"cart-details-grid\">\n                <CardNum\n                  placeOrderClicked={placeOrderClicked}\n                  setCardNumValidated={setCardNumValidated}\n                />\n                <CardName\n                  placeOrderClicked={placeOrderClicked}\n                  setCardNameValidated={setCardNameValidated}\n                />\n                <CardMonth\n                  placeOrderClicked={placeOrderClicked}\n                  setCardMonthValidated={setCardMonthValidated}\n                />\n                <CardYear\n                  placeOrderClicked={placeOrderClicked}\n                  setCardYearValidated={setCardYearValidated}\n                />\n                <CardCvv\n                  placeOrderClicked={placeOrderClicked}\n                  setCardCvvValidated={setCardCvvValidated}\n                />\n\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  size=\"large\"\n                  onClick={handlePlaceOrderButton}\n                >\n                  PLACE ORDER\n                </Button>\n              </div>\n            </form>\n          </div>\n          <div className=\"purchase-info\">\n            <h2>\n              {shoppingCartItems.length}{' '}\n              {shoppingCartItems.length > 1 ? 'Items' : 'Item'}:\n            </h2>\n            <Button color=\"primary\" onClick={handleEditButton}>\n              Edit\n            </Button>\n            <div className=\"purchased-items\">{checkoutItemsComponents}</div>\n            <h2>TOTAL TO PAY: ${props.location.state.totalPrice}</h2>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}