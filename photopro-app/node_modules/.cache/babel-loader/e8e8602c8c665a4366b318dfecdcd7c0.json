{"ast":null,"code":"var _jsxFileName = \"/home/mimi/Desktop/COMP3900/capstone-project-comp3900-f11a-2mjec/photopro-app/src/components/comments/Comments.jsx\";\nimport React, { useState } from 'react';\nimport Comment from './comment/Comment';\nimport './Comments.css';\nimport axios from 'axios';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  margin: {\n    width: '70%',\n    marginBottom: '10px'\n  },\n  textField: {\n    width: '30ch',\n    backgroundColor: 'white'\n  }\n}));\nexport default function Comments(props) {\n  const [comment_input, set_comment_input] = useState('');\n  const classes = useStyles();\n  const comments = props.comments_list.map(comment => {\n    return /*#__PURE__*/React.createElement(Comment, {\n      key: comment.comment_id,\n      updateComments: props.updateComments,\n      updateReplies: props.updateReplies,\n      comment_info: comment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    });\n  });\n\n  const handlePostClick = e => {\n    e.preventDefault();\n    postComments(comment_input);\n  };\n\n  const sendCommentNotification = () => {\n    axios({\n      url: 'http://localhost:5000/send_notification',\n      params: {\n        uploader_id: props.uploader_id,\n        notification: 'comment',\n        image_id: props.image_id\n      }\n    }).then(response => {\n      console.log(response);\n    });\n  };\n\n  const postComments = comment_input => {\n    axios({\n      method: 'POST',\n      url: 'http://localhost:5000/post_comment_to_image',\n      params: {\n        comment: comment_input,\n        image_id: props.image_id\n      }\n    }).then(response => {\n      if (response.data.result) {\n        console.log(`comment posted successfully with ${response.data.result}`);\n        props.updateComments(props.comments_list.concat(comment_input));\n        set_comment_input('');\n        sendCommentNotification();\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, localStorage.getItem('userLoggedIn') ? /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handlePostClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.margin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    classes: {\n      root: classes.textField\n    },\n    id: \"outlined-multiline-flexible\",\n    label: \"Type a comment\",\n    multiline: true,\n    rowsMax: 4,\n    value: comment_input,\n    onChange: e => set_comment_input(e.target.value),\n    onKeyPress: e => {\n      if (e.key === 'Enter') {\n        handlePostClick(e);\n      }\n    },\n    variant: \"outlined\",\n    size: \"small\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }))) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comments-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, comments));\n}","map":{"version":3,"sources":["/home/mimi/Desktop/COMP3900/capstone-project-comp3900-f11a-2mjec/photopro-app/src/components/comments/Comments.jsx"],"names":["React","useState","Comment","axios","TextField","makeStyles","useStyles","theme","margin","width","marginBottom","textField","backgroundColor","Comments","props","comment_input","set_comment_input","classes","comments","comments_list","map","comment","comment_id","updateComments","updateReplies","handlePostClick","e","preventDefault","postComments","sendCommentNotification","url","params","uploader_id","notification","image_id","then","response","console","log","method","data","result","concat","localStorage","getItem","root","target","value","key"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Comment from './comment/Comment';\nimport './Comments.css';\nimport axios from 'axios';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    width: '70%',\n    marginBottom: '10px',\n  },\n  textField: {\n    width: '30ch',\n    backgroundColor: 'white',\n  },\n}));\n\nexport default function Comments(props) {\n  const [comment_input, set_comment_input] = useState('');\n  const classes = useStyles();\n\n  const comments = props.comments_list.map((comment) => {\n    return (\n      <Comment\n        key={comment.comment_id}\n        updateComments={props.updateComments}\n        updateReplies={props.updateReplies}\n        comment_info={comment}\n      />\n    );\n  });\n\n  const handlePostClick = (e) => {\n    e.preventDefault();\n    postComments(comment_input);\n  };\n\n  const sendCommentNotification = () => {\n    axios({\n      url: 'http://localhost:5000/send_notification',\n      params: {\n        uploader_id: props.uploader_id,\n        notification: 'comment',\n        image_id: props.image_id,\n      },\n    }).then((response) => {\n      console.log(response);\n    });\n  };\n\n  const postComments = (comment_input) => {\n    axios({\n      method: 'POST',\n      url: 'http://localhost:5000/post_comment_to_image',\n      params: { comment: comment_input, image_id: props.image_id },\n    }).then((response) => {\n      if (response.data.result) {\n        console.log(`comment posted successfully with ${response.data.result}`);\n        props.updateComments(props.comments_list.concat(comment_input));\n        set_comment_input('');\n        sendCommentNotification();\n      }\n    });\n  };\n\n  return (\n    <React.Fragment>\n      {localStorage.getItem('userLoggedIn') ? (\n        <form onSubmit={handlePostClick}>\n          <div className={classes.margin}>\n            <TextField\n              classes={{ root: classes.textField }}\n              id=\"outlined-multiline-flexible\"\n              label=\"Type a comment\"\n              multiline\n              rowsMax={4}\n              value={comment_input}\n              onChange={(e) => set_comment_input(e.target.value)}\n              onKeyPress={(e) => {\n                if (e.key === 'Enter') {\n                  handlePostClick(e);\n                }\n              }}\n              variant=\"outlined\"\n              size=\"small\"\n              fullWidth\n            />\n          </div>\n        </form>\n      ) : null}\n      <div className=\"comments-container\">{comments}</div>\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}