{"ast":null,"code":"var _jsxFileName = \"/home/cristian/Documents/projects/COMP3900_PhotoPro/capstone-project-comp3900-f11a-2mjec/photopro-app/src/components/Modals/EditPostModal/textfields/TagsField.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport TextField from '@material-ui/core/TextField';\nexport default function TagsField(props) {\n  const [text, setText] = useState(props.oldTags);\n  const [errorText, setErrorText] = useState('');\n  const [errorValue, setErrorValue] = useState(false); //   const [firstRender, setFirstRender] = useState(true);\n\n  const {\n    saveButtonClicked\n  } = props; //   useEffect(() => {\n  //     setFirstRender(false);\n  //   }, []);\n\n  console.log('old tags');\n  console.log(props.oldTags.toString());\n  useEffect(() => {\n    props.setTitleValidated([false, text]);\n  }, []);\n  useEffect(() => {\n    setText(props.oldTags);\n  }, [props.oldTags]);\n  useEffect(() => {\n    // if (firstRender === false) {\n    const result = handleTagsInput(text);\n    props.setTagsValidated([result, text]); // }\n  }, [saveButtonClicked]);\n\n  const handleTagsInput = text => {\n    if (text.length < 100) {\n      setErrorValue(false);\n      return true;\n    } else {\n      setErrorValue(true);\n      setErrorText('Too many tags');\n      return false;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"Tags\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, props.oldTags.length > 0 ? /*#__PURE__*/React.createElement(TextField, {\n    error: errorValue,\n    helperText: errorText,\n    onChange: e => {\n      setText(e.target.value);\n      handleTagsInput(e.target.value);\n    },\n    id: \"outlined-required\",\n    defaultValue: props.oldTags.toString(),\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }) : null));\n}","map":{"version":3,"sources":["/home/cristian/Documents/projects/COMP3900_PhotoPro/capstone-project-comp3900-f11a-2mjec/photopro-app/src/components/Modals/EditPostModal/textfields/TagsField.jsx"],"names":["React","useState","useEffect","TextField","TagsField","props","text","setText","oldTags","errorText","setErrorText","errorValue","setErrorValue","saveButtonClicked","console","log","toString","setTitleValidated","result","handleTagsInput","setTagsValidated","length","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACvC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAACI,KAAK,CAACG,OAAP,CAAhC;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,KAAD,CAA5C,CAHuC,CAIvC;;AAEA,QAAM;AAAEY,IAAAA;AAAF,MAAwBR,KAA9B,CANuC,CAQvC;AACA;AACA;;AAEAS,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYV,KAAK,CAACG,OAAN,CAAcQ,QAAd,EAAZ;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,KAAK,CAACY,iBAAN,CAAwB,CAAC,KAAD,EAAQX,IAAR,CAAxB;AACD,GAFQ,EAEN,EAFM,CAAT;AAIAJ,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,OAAO,CAACF,KAAK,CAACG,OAAP,CAAP;AACD,GAFQ,EAEN,CAACH,KAAK,CAACG,OAAP,CAFM,CAAT;AAIAN,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMgB,MAAM,GAAGC,eAAe,CAACb,IAAD,CAA9B;AACAD,IAAAA,KAAK,CAACe,gBAAN,CAAuB,CAACF,MAAD,EAASZ,IAAT,CAAvB,EAHc,CAId;AACD,GALQ,EAKN,CAACO,iBAAD,CALM,CAAT;;AAOA,QAAMM,eAAe,GAAIb,IAAD,IAAU;AAChC,QAAIA,IAAI,CAACe,MAAL,GAAc,GAAlB,EAAuB;AACrBT,MAAAA,aAAa,CAAC,KAAD,CAAb;AACA,aAAO,IAAP;AACD,KAHD,MAGO;AACLA,MAAAA,aAAa,CAAC,IAAD,CAAb;AACAF,MAAAA,YAAY,CAAC,eAAD,CAAZ;AACA,aAAO,KAAP;AACD;AACF,GATD;;AAWA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,KAAK,CAACG,OAAN,CAAca,MAAd,GAAuB,CAAvB,gBACC,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEV,UADT;AAEE,IAAA,UAAU,EAAEF,SAFd;AAGE,IAAA,QAAQ,EAAGa,CAAD,IAAO;AACff,MAAAA,OAAO,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACAL,MAAAA,eAAe,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf;AACD,KANH;AAOE,IAAA,EAAE,EAAC,mBAPL;AAQE,IAAA,YAAY,EAAEnB,KAAK,CAACG,OAAN,CAAcQ,QAAd,EARhB;AASE,IAAA,OAAO,EAAC,UATV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAYG,IAbN,CAFF,CADF;AAoBD","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nexport default function TagsField(props) {\n  const [text, setText] = useState(props.oldTags);\n  const [errorText, setErrorText] = useState('');\n  const [errorValue, setErrorValue] = useState(false);\n  //   const [firstRender, setFirstRender] = useState(true);\n\n  const { saveButtonClicked } = props;\n\n  //   useEffect(() => {\n  //     setFirstRender(false);\n  //   }, []);\n\n  console.log('old tags');\n  console.log(props.oldTags.toString());\n\n  useEffect(() => {\n    props.setTitleValidated([false, text]);\n  }, []);\n\n  useEffect(() => {\n    setText(props.oldTags);\n  }, [props.oldTags]);\n\n  useEffect(() => {\n    // if (firstRender === false) {\n    const result = handleTagsInput(text);\n    props.setTagsValidated([result, text]);\n    // }\n  }, [saveButtonClicked]);\n\n  const handleTagsInput = (text) => {\n    if (text.length < 100) {\n      setErrorValue(false);\n      return true;\n    } else {\n      setErrorValue(true);\n      setErrorText('Too many tags');\n      return false;\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <h3>Tags</h3>\n      <div>\n        {props.oldTags.length > 0 ? (\n          <TextField\n            error={errorValue}\n            helperText={errorText}\n            onChange={(e) => {\n              setText(e.target.value);\n              handleTagsInput(e.target.value);\n            }}\n            id=\"outlined-required\"\n            defaultValue={props.oldTags.toString()}\n            variant=\"outlined\"\n          />\n        ) : null}\n      </div>\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}