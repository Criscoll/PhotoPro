{"ast":null,"code":"var _jsxFileName = \"/home/cristian/Documents/projects/COMP3900_PhotoPro/capstone-project-comp3900-f11a-2mjec/photopro-app/src/pages/UploadPhotoPage/CapturePhotoPage.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport ReactDom from 'react-dom';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport './CapturePhotoPage.css';\nimport TitleField from './Textfields/TitleField';\nimport CaptionField from './Textfields/CaptionField';\nimport TagsField from './Textfields/TagsField';\nimport PriceField from './Textfields/PriceField';\nimport ImageUploader from 'react-images-upload';\nimport PostConfirmationModal from './PostConfirmationModal/PostConfirmationModal';\n\nasync function attemptPost(img, title, caption, price, tags) {\n  const form_data = new FormData();\n  form_data.append('image', img);\n  form_data.append('caption', caption);\n  form_data.append('title', title);\n  form_data.append('price', price);\n  form_data.append('tags', tags);\n  const response = await axios.post('http://localhost:5000/post', form_data);\n  return response;\n}\n\nexport default function CapturePhotoPage(props) {\n  const [img, setImg] = useState(null);\n  const [pictures, setPictures] = useState([]);\n  const [uploadButtonClicked, setUploadButtonClicked] = useState(false);\n  const [titleValidated, setTitleValidated] = useState(false);\n  const [captionValidated, setCaptionValidated] = useState(false);\n  const [priceValidated, setPriceValidated] = useState(false);\n  const [tagsValidated, setTagsValidated] = useState(false);\n  const [confirmationModalOpen, setConfirmationModalOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  const onDrop = (pictureFiles, pictureDataURLs) => {\n    setPictures(pictures.concat(pictureFiles));\n    setImg(pictureDataURLs[0]);\n  };\n\n  useEffect(() => {\n    console.log('called');\n\n    if (titleValidated[0] && captionValidated[0] && priceValidated[0] && tagsValidated[0] && img !== null) {\n      console.log('approved');\n      setLoading(true);\n      const response = attemptPost(img, titleValidated[1], captionValidated[1], priceValidated[1], tagsValidated[1]);\n      response.then(res => {\n        console.log(res);\n\n        if (res.data.result) {\n          setConfirmationModalOpen(true);\n        }\n\n        setLoading(false);\n      });\n    }\n  }, [titleValidated, captionValidated, priceValidated, tagsValidated]);\n\n  const formSubmit = event => {\n    setUploadButtonClicked(!uploadButtonClicked);\n  };\n\n  return ReactDom.createPortal( /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid-container-editpost\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid-item-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ImageUploader, {\n    withIcon: true,\n    buttonText: \"Choose image\",\n    onChange: onDrop,\n    imgExtension: ['.jpg', '.png', '.jpeg'],\n    maxFileSize: 5242880,\n    withPreview: true,\n    singleImage: true,\n    withLabel: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"edit-post-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TitleField, {\n    uploadButtonClicked: uploadButtonClicked,\n    setTitleValidated: setTitleValidated,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CaptionField, {\n    uploadButtonClicked: uploadButtonClicked,\n    setCaptionValidated: setCaptionValidated,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(PriceField, {\n    uploadButtonClicked: uploadButtonClicked,\n    setPriceValidated: setPriceValidated,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TagsField, {\n    uploadButtonClicked: uploadButtonClicked,\n    setTagsValidated: setTagsValidated,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, \"Tags are important to allow our system to match users with your photos. We encourage the use of tags but they are not optional. Upon submission our system will auto-tag your image to improve its search appearance but you may choose to remove these by editing your post.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"capture-form-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    onClick: formSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, \"SAVE\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    onClick: () => {\n      history.goBack();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, \"Cancel\")), /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, loading && 'Upload in progress, please wait...'))), confirmationModalOpen ? /*#__PURE__*/React.createElement(PostConfirmationModal, {\n    isOpen: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 32\n    }\n  }) : null), document.getElementById('editPostPortal'));\n}","map":{"version":3,"sources":["/home/cristian/Documents/projects/COMP3900_PhotoPro/capstone-project-comp3900-f11a-2mjec/photopro-app/src/pages/UploadPhotoPage/CapturePhotoPage.jsx"],"names":["React","useState","useEffect","ReactDom","Button","axios","useHistory","TitleField","CaptionField","TagsField","PriceField","ImageUploader","PostConfirmationModal","attemptPost","img","title","caption","price","tags","form_data","FormData","append","response","post","CapturePhotoPage","props","setImg","pictures","setPictures","uploadButtonClicked","setUploadButtonClicked","titleValidated","setTitleValidated","captionValidated","setCaptionValidated","priceValidated","setPriceValidated","tagsValidated","setTagsValidated","confirmationModalOpen","setConfirmationModalOpen","loading","setLoading","history","onDrop","pictureFiles","pictureDataURLs","concat","console","log","then","res","data","result","formSubmit","event","createPortal","goBack","textAlign","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactDom from 'react-dom';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport './CapturePhotoPage.css';\n\nimport TitleField from './Textfields/TitleField';\nimport CaptionField from './Textfields/CaptionField';\nimport TagsField from './Textfields/TagsField';\nimport PriceField from './Textfields/PriceField';\nimport ImageUploader from 'react-images-upload';\nimport PostConfirmationModal from './PostConfirmationModal/PostConfirmationModal';\n\nasync function attemptPost(img, title, caption, price, tags) {\n  const form_data = new FormData();\n  form_data.append('image', img);\n  form_data.append('caption', caption);\n  form_data.append('title', title);\n  form_data.append('price', price);\n  form_data.append('tags', tags);\n\n  const response = await axios.post('http://localhost:5000/post', form_data);\n  return response;\n}\n\nexport default function CapturePhotoPage(props) {\n  const [img, setImg] = useState(null);\n  const [pictures, setPictures] = useState([]);\n  const [uploadButtonClicked, setUploadButtonClicked] = useState(false);\n  const [titleValidated, setTitleValidated] = useState(false);\n  const [captionValidated, setCaptionValidated] = useState(false);\n  const [priceValidated, setPriceValidated] = useState(false);\n  const [tagsValidated, setTagsValidated] = useState(false);\n  const [confirmationModalOpen, setConfirmationModalOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const history = useHistory();\n\n  const onDrop = (pictureFiles, pictureDataURLs) => {\n    setPictures(pictures.concat(pictureFiles));\n    setImg(pictureDataURLs[0]);\n  };\n\n  useEffect(() => {\n    console.log('called');\n\n    if (\n      titleValidated[0] &&\n      captionValidated[0] &&\n      priceValidated[0] &&\n      tagsValidated[0] &&\n      img !== null\n    ) {\n      console.log('approved');\n      setLoading(true);\n      const response = attemptPost(\n        img,\n        titleValidated[1],\n        captionValidated[1],\n        priceValidated[1],\n        tagsValidated[1]\n      );\n\n      response.then((res) => {\n        console.log(res);\n        if (res.data.result) {\n          setConfirmationModalOpen(true);\n        }\n        setLoading(false);\n      });\n    }\n  }, [titleValidated, captionValidated, priceValidated, tagsValidated]);\n\n  const formSubmit = (event) => {\n    setUploadButtonClicked(!uploadButtonClicked);\n  };\n\n  return ReactDom.createPortal(\n    <React.Fragment>\n      <div className=\"grid-container-editpost\">\n        <div className=\"grid-item-image\">\n          <ImageUploader\n            withIcon={true}\n            buttonText=\"Choose image\"\n            onChange={onDrop}\n            imgExtension={['.jpg', '.png', '.jpeg']}\n            maxFileSize={5242880}\n            withPreview={true}\n            singleImage={true}\n            withLabel={true}\n          />\n        </div>\n        <div className=\"edit-post-details\">\n          <TitleField\n            uploadButtonClicked={uploadButtonClicked}\n            setTitleValidated={setTitleValidated}\n          />\n          <CaptionField\n            uploadButtonClicked={uploadButtonClicked}\n            setCaptionValidated={setCaptionValidated}\n          />\n          <PriceField\n            uploadButtonClicked={uploadButtonClicked}\n            setPriceValidated={setPriceValidated}\n          />\n          <TagsField\n            uploadButtonClicked={uploadButtonClicked}\n            setTagsValidated={setTagsValidated}\n          />\n          <h4>\n            Tags are important to allow our system to match users with your\n            photos. We encourage the use of tags but they are not optional. Upon\n            submission our system will auto-tag your image to improve its search\n            appearance but you may choose to remove these by editing your post.\n          </h4>\n          <div className=\"capture-form-buttons\">\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"large\"\n              onClick={formSubmit}\n            >\n              SAVE\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"large\"\n              onClick={() => {\n                history.goBack();\n              }}\n            >\n              Cancel\n            </Button>\n          </div>\n          <h2 style={{ textAlign: 'center' }}>\n            {loading && 'Upload in progress, please wait...'}\n          </h2>\n        </div>\n      </div>\n      {confirmationModalOpen ? <PostConfirmationModal isOpen={true} /> : null}\n    </React.Fragment>,\n    document.getElementById('editPostPortal')\n  );\n}\n"]},"metadata":{},"sourceType":"module"}