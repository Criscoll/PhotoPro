{"ast":null,"code":"var _jsxFileName = \"/home/mimi/Desktop/COMP3900/capstone-project-comp3900-f11a-2mjec/photopro-app/src/components/Modals/ForgotPasswordModal/ForgotPasswordModal.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport ReactDom from \"react-dom\";\nimport \"./ForgotPasswordModal\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: \"ch\"\n    }\n  }\n}));\nexport default function ForgotPassword(props) {\n  const classes = useStyles();\n  const [email, setEmail] = useState(\"\");\n  const [errorText, setErrorText] = useState(\"\");\n  const [hashValue, setHashValue] = useState(\"\");\n  const [errorValue, setErrorValue] = useState(false);\n  const history = useHistory();\n\n  function validate_email() {\n    return email.length > 0 && email.length < 50;\n  }\n\n  async function attempt_password_change(event) {\n    event.preventDefault();\n    var response = await axios.get(\"http://localhost:5000/forgot_password_get_change_password_link\", {\n      params: {\n        email: email\n      }\n    });\n    console.log(response);\n  }\n\n  const handleEmailInput = text => {\n    if (text.length > 10 && text.length < 50 && text.includes(\"@\") && text.includes(\".com\")) {\n      setErrorValue(false);\n      setErrorText(\"\");\n      return true;\n    } else {\n      setErrorText(\"Email must be entered and include an @ and .com\");\n      setErrorValue(true);\n      return false;\n    }\n  };\n\n  const forgotPasswordGetLink = () => {\n    axios({\n      method: \"POST\",\n      url: \"http://localhost:5000/forgot_password_get_change_password_link\",\n      params: {\n        email: email\n      }\n    }).then(response => {\n      console.log(response);\n\n      if (response.data.result !== false) {\n        console.log(response);\n      }\n    });\n  };\n\n  const handleSendEmailClicked = () => {\n    forgotPasswordGetLink();\n  };\n\n  if (!props.openForgotPasswordModal) {\n    return null;\n  } else {\n    return ReactDom.createPortal( /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"overlayStyles\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loginModal\",\n      onClick: e => {\n        e.stopPropagation();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, \"Forgot Password\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }, \"If you forgot your password, you can reset it here.\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, \"Please enter your email and you will receive an email with further instructions.\"), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      error: errorValue,\n      helperText: errorText,\n      onChange: e => {\n        setEmail(e.target.value);\n        handleEmailInput(e.target.value);\n      },\n      id: \"outlined-required\",\n      label: \"Required\",\n      defaultValue: props.oldTitle,\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"large\",\n      onClick: handleSendEmailClicked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, \"SEND EMAIL\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"default\",\n      size: \"large\",\n      onClick: () => {\n        props.setOpenForgotPasswordModal(false);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }, \"Cancel\")))), document.getElementById(\"toolbarPortal\"));\n  }\n}","map":{"version":3,"sources":["/home/mimi/Desktop/COMP3900/capstone-project-comp3900-f11a-2mjec/photopro-app/src/components/Modals/ForgotPasswordModal/ForgotPasswordModal.jsx"],"names":["React","useState","useEffect","ReactDom","axios","useHistory","TextField","Button","makeStyles","useStyles","theme","root","margin","spacing","width","ForgotPassword","props","classes","email","setEmail","errorText","setErrorText","hashValue","setHashValue","errorValue","setErrorValue","history","validate_email","length","attempt_password_change","event","preventDefault","response","get","params","console","log","handleEmailInput","text","includes","forgotPasswordGetLink","method","url","then","data","result","handleSendEmailClicked","openForgotPasswordModal","createPortal","e","stopPropagation","target","value","oldTitle","setOpenForgotPasswordModal","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ReactDom from \"react-dom\";\nimport \"./ForgotPasswordModal\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\n\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: \"ch\",\n    },\n  },\n}));\n\nexport default function ForgotPassword(props) {\n  const classes = useStyles();\n  const [email, setEmail] = useState(\"\");\n  const [errorText, setErrorText] = useState(\"\");\n  const [hashValue, setHashValue] = useState(\"\");\n  const [errorValue, setErrorValue] = useState(false);\n\n  const history = useHistory();\n\n  function validate_email() {\n    return email.length > 0 && email.length < 50;\n  }\n\n  async function attempt_password_change(event) {\n    event.preventDefault();\n\n    var response = await axios.get(\n      \"http://localhost:5000/forgot_password_get_change_password_link\",\n      {\n        params: { email: email },\n      }\n    );\n    console.log(response);\n  }\n\n  const handleEmailInput = (text) => {\n    if (\n      text.length > 10 &&\n      text.length < 50 &&\n      text.includes(\"@\") &&\n      text.includes(\".com\")\n    ) {\n      setErrorValue(false);\n      setErrorText(\"\");\n      return true;\n    } else {\n      setErrorText(\"Email must be entered and include an @ and .com\");\n      setErrorValue(true);\n      return false;\n    }\n  };\n\n  const forgotPasswordGetLink = () => {\n    axios({\n      method: \"POST\",\n      url: \"http://localhost:5000/forgot_password_get_change_password_link\",\n      params: {\n        email: email,\n      },\n    }).then((response) => {\n      console.log(response);\n      if (response.data.result !== false) {\n        console.log(response);\n      }\n    });\n  };\n\n  const handleSendEmailClicked = () => {\n    forgotPasswordGetLink();\n  };\n\n  if (!props.openForgotPasswordModal) {\n    return null;\n  } else {\n    return ReactDom.createPortal(\n      <React.Fragment>\n        <div className=\"overlayStyles\" />\n        <div\n          className=\"loginModal\"\n          onClick={(e) => {\n            e.stopPropagation();\n          }}\n        >\n          <h1>Forgot Password</h1>\n          <h3>If you forgot your password, you can reset it here.</h3>\n          <h3>\n            Please enter your email and you will receive an email with further\n            instructions.\n          </h3>\n          {/* <form className={classes.root} noValidate autoComplete=\"off\">\n            <div className=\"cart-details-grid\"></div> */}\n          <h2>Email</h2>\n          <div>\n            <TextField\n              required\n              error={errorValue}\n              helperText={errorText}\n              onChange={(e) => {\n                setEmail(e.target.value);\n                handleEmailInput(e.target.value);\n              }}\n              id=\"outlined-required\"\n              label=\"Required\"\n              defaultValue={props.oldTitle}\n              variant=\"outlined\"\n            />\n          </div>\n\n          <div>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"large\"\n              onClick={handleSendEmailClicked}\n            >\n              SEND EMAIL\n            </Button>\n          </div>\n          <div>\n            <Button\n              variant=\"contained\"\n              color=\"default\"\n              size=\"large\"\n              onClick={() => {\n                props.setOpenForgotPasswordModal(false);\n              }}\n            >\n              Cancel\n            </Button>\n          </div>\n          {/* </form> */}\n        </div>\n      </React.Fragment>,\n      document.getElementById(\"toolbarPortal\")\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}