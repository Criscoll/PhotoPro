{"ast":null,"code":"var _jsxFileName = \"/home/mimi/Desktop/COMP3900/capstone-project-comp3900-f11a-2mjec/photopro-app/src/components/comments/Comments.jsx\";\nimport React, { useState } from \"react\";\nimport Comment from \"./comment/Comment\";\nimport \"./Comments.css\"; //  APIS FOR COMMENTS:\n//  /get_comments_to_image: image_id, batch_size => comment_id, image_id, commenter, comment, reply_id, created_at\n//  /post_comment_to_image\n//  /post_comment_to_comment\n//  /post_delete_comment\n//  /get_comments_to_comment: comment_id, batch_size => comment_id, image_id, commenter, comment, reply_id, created_at\n\nexport default function Comments(props) {\n  const [comment_input, set_comment_input] = useState(\"\");\n  const comments = props.comments_list.map(comment => {\n    return /*#__PURE__*/React.createElement(Comment, {\n      comment_info: comment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 12\n      }\n    });\n  });\n\n  const handlePostClick = e => {\n    e.preventDefault();\n    console.log(comment_input);\n  };\n\n  const postComments = comment_input => {\n    axios({\n      method: \"GET\",\n      url: \"http://localhost:5000/post_comment_to_image\",\n      params: {\n        comment: comment_input,\n        image_id: props.image_id\n      }\n    }).then(res => {\n      if (res.data.result != false) {\n        setComments(comments.concat(res.data.result));\n      }\n\n      console.log(res);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comment-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handlePostClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"comment\",\n    id: \"comment_input\",\n    value: comment_input,\n    onChange: e => set_comment_input(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comments-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Comment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), comments));\n}","map":{"version":3,"sources":["/home/mimi/Desktop/COMP3900/capstone-project-comp3900-f11a-2mjec/photopro-app/src/components/comments/Comments.jsx"],"names":["React","useState","Comment","Comments","props","comment_input","set_comment_input","comments","comments_list","map","comment","handlePostClick","e","preventDefault","console","log","postComments","axios","method","url","params","image_id","then","res","data","result","setComments","concat","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAO,gBAAP,C,CAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACtC,QAAM,CAACC,aAAD,EAAgBC,iBAAhB,IAAqCL,QAAQ,CAAC,EAAD,CAAnD;AAEA,QAAMM,QAAQ,GAAGH,KAAK,CAACI,aAAN,CAAoBC,GAApB,CAAyBC,OAAD,IAAa;AACpD,wBAAO,oBAAC,OAAD;AAAS,MAAA,YAAY,EAAEA,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFgB,CAAjB;;AAIA,QAAMC,eAAe,GAAIC,CAAD,IAAO;AAC7BA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYV,aAAZ;AACD,GAHD;;AAKA,QAAMW,YAAY,GAAIX,aAAD,IAAmB;AACtCY,IAAAA,KAAK,CAAC;AACJC,MAAAA,MAAM,EAAE,KADJ;AAEJC,MAAAA,GAAG,EAAE,6CAFD;AAGJC,MAAAA,MAAM,EAAE;AAAEV,QAAAA,OAAO,EAAEL,aAAX;AAA0BgB,QAAAA,QAAQ,EAAEjB,KAAK,CAACiB;AAA1C;AAHJ,KAAD,CAAL,CAIGC,IAJH,CAISC,GAAD,IAAS;AACf,UAAIA,GAAG,CAACC,IAAJ,CAASC,MAAT,IAAmB,KAAvB,EAA8B;AAC5BC,QAAAA,WAAW,CAACnB,QAAQ,CAACoB,MAAT,CAAgBJ,GAAG,CAACC,IAAJ,CAASC,MAAzB,CAAD,CAAX;AACD;;AAEDX,MAAAA,OAAO,CAACC,GAAR,CAAYQ,GAAZ;AACD,KAVD;AAWD,GAZD;;AAcA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,QAAQ,EAAEZ,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,EAAE,EAAC,eAFL;AAGE,IAAA,KAAK,EAAEN,aAHT;AAIE,IAAA,QAAQ,EAAGO,CAAD,IAAON,iBAAiB,CAACM,CAAC,CAACgB,MAAF,CAASC,KAAV,CAJpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CADF,eAaE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGtB,QAFH,CAbF,CADF;AAoBD","sourcesContent":["import React, { useState } from \"react\";\nimport Comment from \"./comment/Comment\";\nimport \"./Comments.css\";\n\n//  APIS FOR COMMENTS:\n//  /get_comments_to_image: image_id, batch_size => comment_id, image_id, commenter, comment, reply_id, created_at\n//  /post_comment_to_image\n//  /post_comment_to_comment\n//  /post_delete_comment\n//  /get_comments_to_comment: comment_id, batch_size => comment_id, image_id, commenter, comment, reply_id, created_at\n\nexport default function Comments(props) {\n  const [comment_input, set_comment_input] = useState(\"\");\n\n  const comments = props.comments_list.map((comment) => {\n    return <Comment comment_info={comment} />;\n  });\n\n  const handlePostClick = (e) => {\n    e.preventDefault();\n    console.log(comment_input);\n  };\n\n  const postComments = (comment_input) => {\n    axios({\n      method: \"GET\",\n      url: \"http://localhost:5000/post_comment_to_image\",\n      params: { comment: comment_input, image_id: props.image_id },\n    }).then((res) => {\n      if (res.data.result != false) {\n        setComments(comments.concat(res.data.result));\n      }\n\n      console.log(res);\n    });\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"comment-input\">\n        <form onSubmit={handlePostClick}>\n          <div>\n            <input\n              type=\"comment\"\n              id=\"comment_input\"\n              value={comment_input}\n              onChange={(e) => set_comment_input(e.target.value)}\n            />\n          </div>\n        </form>\n      </div>\n      <div className=\"comments-container\">\n        <Comment />\n        {comments}\n      </div>\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}