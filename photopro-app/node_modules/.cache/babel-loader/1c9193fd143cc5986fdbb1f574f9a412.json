{"ast":null,"code":"var _jsxFileName = \"/home/cristian/Documents/projects/COMP3900_PhotoPro/capstone-project-comp3900-f11a-2mjec/photopro-app/src/components/feed/feed.jsx\";\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport './feed.css';\nimport axios from 'axios';\nimport ImageCard from './ImageCard/ImageCard';\nimport BookmarkModal from '../modal/BookmarkModal';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { ImageSearch } from '@material-ui/icons';\n\nconst Feed = props => {\n  const [imgs, setImgs] = useState([]);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [photoIdBookmarked, setPhotoIdBookmarked] = useState(0);\n  const [hasMore, setHasMore] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const observer = useRef();\n  const lastImageRef = useCallback(node => {\n    if (loading) return;\n    if (observer.current) observer.current.disconnect();\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting) {\n        console.log('Visible');\n      }\n    });\n    if (node) observer.current.observe(node);\n  }, [loading, hasMore]);\n  useEffect(() => {\n    setImgs([]);\n    setHasMore(false);\n    fetchImages(props.query);\n  }, [props.query]);\n\n  const fetchImages = term => {\n    setLoading(true);\n    axios({\n      method: 'GET',\n      url: 'http://localhost:5000/discovery',\n      params: {\n        query: term,\n        batch_size: 20\n      } //user_id: 1\n\n    }).then(res => {\n      console.log(res);\n\n      if (res.data.result != false) {\n        setHasMore(true);\n        setTimeout(() => {\n          setLoading(false);\n          setImgs(prevImgs => {\n            return [...prevImgs, ...res.data.result];\n          });\n        }, 500);\n      } else {\n        console.log('no more images to return');\n        setLoading(false);\n        setHasMore(false); // setImgs((prevImgs) => {\n        //   return [...prevImgs];\n        // });\n      }\n    });\n  }; // console.log(`LENGTH = ${imgs.length}`);\n  // console.log(`HASMORE = ${hasMore}`);\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, \"Found Images: \", imgs.length), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, loading && 'Loading...'), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"image-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, imgs.map((image, index) => {\n    if (image === null) {\n      return null;\n    }\n\n    if (imgs.length === index + 1) {\n      return /*#__PURE__*/React.createElement(ImageCard, {\n        ref: lastImageRef,\n        key: image.id,\n        image: image,\n        openBookmarkModal: modalIsOpen,\n        setOpenBookmarkModal: setModalIsOpen,\n        setPhotoId: setPhotoIdBookmarked,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(ImageCard, {\n        key: image.id,\n        image: image,\n        openBookmarkModal: modalIsOpen,\n        setOpenBookmarkModal: setModalIsOpen,\n        setPhotoId: setPhotoIdBookmarked,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }\n      });\n    }\n  })), /*#__PURE__*/React.createElement(BookmarkModal, {\n    openModal: modalIsOpen,\n    onCloseModal: () => setModalIsOpen(false),\n    photoId: photoIdBookmarked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Feed;","map":{"version":3,"sources":["/home/cristian/Documents/projects/COMP3900_PhotoPro/capstone-project-comp3900-f11a-2mjec/photopro-app/src/components/feed/feed.jsx"],"names":["React","useState","useEffect","useRef","useCallback","axios","ImageCard","BookmarkModal","InfiniteScroll","ImageSearch","Feed","props","imgs","setImgs","modalIsOpen","setModalIsOpen","photoIdBookmarked","setPhotoIdBookmarked","hasMore","setHasMore","loading","setLoading","observer","lastImageRef","node","current","disconnect","IntersectionObserver","entries","isIntersecting","console","log","observe","fetchImages","query","term","method","url","params","batch_size","then","res","data","result","setTimeout","prevImgs","length","map","image","index","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport './feed.css';\nimport axios from 'axios';\nimport ImageCard from './ImageCard/ImageCard';\nimport BookmarkModal from '../modal/BookmarkModal';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { ImageSearch } from '@material-ui/icons';\n\nconst Feed = (props) => {\n  const [imgs, setImgs] = useState([]);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [photoIdBookmarked, setPhotoIdBookmarked] = useState(0);\n  const [hasMore, setHasMore] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const observer = useRef();\n  const lastImageRef = useCallback(\n    (node) => {\n      if (loading) return;\n      if (observer.current) observer.current.disconnect();\n      observer.current = new IntersectionObserver((entries) => {\n        if (entries[0].isIntersecting) {\n          console.log('Visible');\n        }\n      });\n\n      if (node) observer.current.observe(node);\n    },\n    [loading, hasMore]\n  );\n\n  useEffect(() => {\n    setImgs([]);\n    setHasMore(false);\n    fetchImages(props.query);\n  }, [props.query]);\n\n  const fetchImages = (term) => {\n    setLoading(true);\n\n    axios({\n      method: 'GET',\n      url: 'http://localhost:5000/discovery',\n      params: { query: term, batch_size: 20 }, //user_id: 1\n    }).then((res) => {\n      console.log(res);\n      if (res.data.result != false) {\n        setHasMore(true);\n        setTimeout(() => {\n          setLoading(false);\n          setImgs((prevImgs) => {\n            return [...prevImgs, ...res.data.result];\n          });\n        }, 500);\n      } else {\n        console.log('no more images to return');\n        setLoading(false);\n        setHasMore(false);\n        // setImgs((prevImgs) => {\n        //   return [...prevImgs];\n        // });\n      }\n    });\n  };\n\n  // console.log(`LENGTH = ${imgs.length}`);\n  // console.log(`HASMORE = ${hasMore}`);\n\n  return (\n    <React.Fragment>\n      <h2>Found Images: {imgs.length}</h2>\n\n      <h2>{loading && 'Loading...'}</h2>\n\n      <div className=\"image-list\">\n        {imgs.map((image, index) => {\n          if (image === null) {\n            return null;\n          }\n\n          if (imgs.length === index + 1) {\n            return (\n              <ImageCard\n                ref={lastImageRef}\n                key={image.id}\n                image={image}\n                openBookmarkModal={modalIsOpen}\n                setOpenBookmarkModal={setModalIsOpen}\n                setPhotoId={setPhotoIdBookmarked}\n              />\n            );\n          } else {\n            return (\n              <ImageCard\n                key={image.id}\n                image={image}\n                openBookmarkModal={modalIsOpen}\n                setOpenBookmarkModal={setModalIsOpen}\n                setPhotoId={setPhotoIdBookmarked}\n              />\n            );\n          }\n        })}\n      </div>\n\n      <BookmarkModal\n        openModal={modalIsOpen}\n        onCloseModal={() => setModalIsOpen(false)}\n        photoId={photoIdBookmarked}\n      ></BookmarkModal>\n    </React.Fragment>\n  );\n};\n\nexport default Feed;\n"]},"metadata":{},"sourceType":"module"}