{"ast":null,"code":"var _jsxFileName = \"/home/cristian/Documents/projects/COMP3900_PhotoPro/capstone-project-comp3900-f11a-2mjec/photopro-app/src/pages/UploadPhotoPage/CapturePhotoPage.jsx\";\nimport ReactDom from 'react-dom';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport './EditPostModal.css';\nimport TitleField from './textfields/TitleField';\nimport CaptionField from './textfields/CaptionField';\nimport TagsField from './textfields/TagsField';\nimport PriceField from './textfields/PriceField';\nimport ImageUploader from 'react-images-upload';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: 'ch'\n    }\n  }\n}));\nexport default function EditPostPage(props) {\n  const [uploadButtonClicked, setUploadButtonClicked] = useState(false);\n  const [titleValidated, setTitleValidated] = useState(false);\n  const [captionValidated, setCaptionValidated] = useState(false);\n  const [priceValidated, setPriceValidated] = useState(false);\n  const [tagsValidated, setTagsValidated] = useState(false); // const { match } = props;\n\n  const history = useHistory();\n  const classes = useStyles();\n\n  const onDrop = (pictureFiles, pictureDataURLs) => {\n    this.setState({\n      pictures: this.state.pictures.concat(pictureFiles)\n    }); // console.log(pictureFiles[0]);\n    // console.log(pictureDataURLs[0]);\n\n    img = pictureDataURLs[0];\n  };\n\n  const formSubmit = event => {\n    event.preventDefault();\n    const post = attempt_login();\n    post.then(response => {\n      console.log(response);\n\n      if (response.data.result !== false) {\n        this.setState({\n          postConfirmationModalOpen: true\n        });\n      }\n    });\n  }; // function validate_title() {\n  //   return title.length > 0 && title.length < 50;\n  // }\n  // function validate_caption() {\n  //   return caption.length > 0 && caption.length < 50;\n  // }\n  // function validate_price() {\n  //   return parseInt(price) > 0 && price.length > 0;\n  // }\n  // function validate_tags() {\n  //   return tags.length > 0 && tags.length < 100;\n  // }\n  // async function edit_post(event) {\n  //   event.preventDefault();\n  //   var response = await axios.get(\"http://localhost:5000/edit_post\", {\n  //     params: {\n  //       image_id: parseInt(match.params.id),\n  //       title: title,\n  //       price: price,\n  //       caption: caption,\n  //       tags: tags,\n  //     },\n  //   });\n  //   console.log(response);\n  //   if (response.data.result) {\n  //     history.goBack();\n  //   }\n  // }\n\n\n  const handleSaveButton = () => {};\n\n  const handleCancelButton = () => {};\n\n  if (!props.openModal) {\n    return null;\n  } else {\n    return ReactDom.createPortal( /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"overlayStyles\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"editPostModal\",\n      onClick: e => {\n        e.stopPropagation();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grid-container-editpost\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grid-item-image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: `data:image/jpg;base64,${props.url}`,\n      alt: props.caption,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"form\", {\n      className: classes.root,\n      noValidate: true,\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"edit-post-details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TitleField, {\n      saveButtonClicked: saveButtonClicked,\n      setTitleValidated: setTitleValidated,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(CaptionField, {\n      saveButtonClicked: saveButtonClicked,\n      setCaptionValidated: setCaptionValidated,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TagsField, {\n      saveButtonClicked: saveButtonClicked,\n      setTagsValidated: setTagsValidated,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(PriceField, {\n      saveButtonClicked: saveButtonClicked,\n      setPriceValidated: setPriceValidated,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"large\",\n      onClick: handleSaveButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }\n    }, \"SAVE\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"large\",\n      onClick: handleCancelButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }, \"Cancel\")))))), document.getElementById('editPostPortal'));\n  }\n}","map":{"version":3,"sources":["/home/cristian/Documents/projects/COMP3900_PhotoPro/capstone-project-comp3900-f11a-2mjec/photopro-app/src/pages/UploadPhotoPage/CapturePhotoPage.jsx"],"names":["ReactDom","Button","axios","useHistory","TitleField","CaptionField","TagsField","PriceField","ImageUploader","makeStyles","useStyles","theme","root","margin","spacing","width","EditPostPage","props","uploadButtonClicked","setUploadButtonClicked","useState","titleValidated","setTitleValidated","captionValidated","setCaptionValidated","priceValidated","setPriceValidated","tagsValidated","setTagsValidated","history","classes","onDrop","pictureFiles","pictureDataURLs","setState","pictures","state","concat","img","formSubmit","event","preventDefault","post","attempt_login","then","response","console","log","data","result","postConfirmationModalOpen","handleSaveButton","handleCancelButton","openModal","createPortal","e","stopPropagation","url","caption","saveButtonClicked","document","getElementById"],"mappings":"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","sourcesContent":["import ReactDom from 'react-dom';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport './EditPostModal.css';\n\nimport TitleField from './textfields/TitleField';\nimport CaptionField from './textfields/CaptionField';\nimport TagsField from './textfields/TagsField';\nimport PriceField from './textfields/PriceField';\nimport ImageUploader from 'react-images-upload';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: 'ch',\n    },\n  },\n}));\n\nexport default function EditPostPage(props) {\n  const [uploadButtonClicked, setUploadButtonClicked] = useState(false);\n  const [titleValidated, setTitleValidated] = useState(false);\n  const [captionValidated, setCaptionValidated] = useState(false);\n  const [priceValidated, setPriceValidated] = useState(false);\n  const [tagsValidated, setTagsValidated] = useState(false);\n\n  // const { match } = props;\n  const history = useHistory();\n\n  const classes = useStyles();\n\n  const onDrop = (pictureFiles, pictureDataURLs) => {\n    this.setState({\n      pictures: this.state.pictures.concat(pictureFiles),\n    });\n    // console.log(pictureFiles[0]);\n    // console.log(pictureDataURLs[0]);\n    img = pictureDataURLs[0];\n  };\n\n  const formSubmit = (event) => {\n    event.preventDefault();\n    const post = attempt_login();\n    post.then((response) => {\n      console.log(response);\n      if (response.data.result !== false) {\n        this.setState({ postConfirmationModalOpen: true });\n      }\n    });\n  };\n\n  // function validate_title() {\n  //   return title.length > 0 && title.length < 50;\n  // }\n  // function validate_caption() {\n  //   return caption.length > 0 && caption.length < 50;\n  // }\n  // function validate_price() {\n  //   return parseInt(price) > 0 && price.length > 0;\n  // }\n  // function validate_tags() {\n  //   return tags.length > 0 && tags.length < 100;\n  // }\n\n  // async function edit_post(event) {\n  //   event.preventDefault();\n\n  //   var response = await axios.get(\"http://localhost:5000/edit_post\", {\n  //     params: {\n  //       image_id: parseInt(match.params.id),\n  //       title: title,\n  //       price: price,\n  //       caption: caption,\n  //       tags: tags,\n  //     },\n  //   });\n  //   console.log(response);\n\n  //   if (response.data.result) {\n  //     history.goBack();\n  //   }\n  // }\n\n  const handleSaveButton = () => {};\n\n  const handleCancelButton = () => {};\n\n  if (!props.openModal) {\n    return null;\n  } else {\n    return ReactDom.createPortal(\n      <React.Fragment>\n        <div className=\"overlayStyles\" />\n        <div\n          className=\"editPostModal\"\n          onClick={(e) => {\n            e.stopPropagation();\n          }}\n        >\n          <div className=\"grid-container-editpost\">\n            <div className=\"grid-item-image\">\n              <img\n                src={`data:image/jpg;base64,${props.url}`}\n                alt={props.caption}\n              />\n            </div>\n            <form className={classes.root} noValidate autoComplete=\"off\">\n              <div className=\"edit-post-details\">\n                <TitleField\n                  saveButtonClicked={saveButtonClicked}\n                  setTitleValidated={setTitleValidated}\n                />\n                <CaptionField\n                  saveButtonClicked={saveButtonClicked}\n                  setCaptionValidated={setCaptionValidated}\n                />\n                <TagsField\n                  saveButtonClicked={saveButtonClicked}\n                  setTagsValidated={setTagsValidated}\n                />\n                <PriceField\n                  saveButtonClicked={saveButtonClicked}\n                  setPriceValidated={setPriceValidated}\n                />\n\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  size=\"large\"\n                  onClick={handleSaveButton}\n                >\n                  SAVE\n                </Button>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  size=\"large\"\n                  onClick={handleCancelButton}\n                >\n                  Cancel\n                </Button>\n              </div>\n            </form>\n            {/* <form className=\"grid-item-form\" onSubmit={edit_post}>\n              <FormGroup controlId=\"title\" bsSize=\"large\">\n                <div>\n                  <FormLabel>Title</FormLabel>\n                </div>\n\n                <FormControl\n                  Type=\"title\"\n                  value={title}\n                  onChange={(e) => set_title(e.target.value)}\n                  defaultValue={\"HELLLLOOOOO\"}\n                />\n              </FormGroup>\n\n              <FormGroup controlId=\"price\" bsSize=\"large\">\n                <div>\n                  <FormLabel>Price</FormLabel>\n                </div>\n\n                <FormControl\n                  Type=\"price\"\n                  value={price}\n                  onChange={(e) => set_price(e.target.value)}\n                />\n              </FormGroup>\n\n              <FormGroup controlId=\"caption\" bsSize=\"large\">\n                <div>\n                  <FormLabel>Caption</FormLabel>\n                </div>\n\n                <FormControl\n                  Type=\"caption\"\n                  value={caption}\n                  onChange={(e) => set_caption(e.target.value)}\n                />\n              </FormGroup>\n\n              <FormGroup controlId=\"tags\" bsSize=\"large\">\n                <div>\n                  <FormLabel>tags</FormLabel>\n                </div>\n\n                <FormControl\n                  Type=\"tags\"\n                  value={tags}\n                  onChange={(e) => set_tags(e.target.value)}\n                />\n              </FormGroup>\n\n              <div>\n                <Button\n                  variant=\"primary\"\n                  disabled={\n                    !validate_caption() ||\n                    !validate_title() ||\n                    !validate_price() ||\n                    !validate_tags()\n                  }\n                  type=\"submit\"\n                >\n                  Submit\n                </Button>\n              </div>\n\n              <Button\n                onClick={() => {\n                  history.push(\"/profile\");\n                }}\n              >\n                Cancel\n              </Button>\n            </form> */}\n            {/* <div className=\"grid-item-old-values\">\n              <h1>Current title: {props.title}</h1>\n              <h1>Current Caption: {props.caption}</h1>\n              <h1>Current Price: ${props.price}</h1>\n              <h1>Current Tags: ${props.tags}</h1>\n            </div> */}\n          </div>\n        </div>\n      </React.Fragment>,\n      document.getElementById('editPostPortal')\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}