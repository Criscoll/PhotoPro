{"ast":null,"code":"var _jsxFileName = \"/home/cristian/Documents/projects/COMP3900_PhotoPro/capstone-project-comp3900-f11a-2mjec/photopro-app/src/components/userPhotos/UserPhotos.jsx\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport './UserPhotos.css';\nimport axios from 'axios';\nimport ImageCard from '../feed/ImageCard/ImageCard';\nimport BookmarkModal from '../Modals/BookmarkModal/BookmarkModal';\n\nconst UserPhotos = props => {\n  const [username, setUsername] = useState(props.userID);\n  const [profileImgs, setProfileImgs] = useState([]);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [photoIdBookmarked, setPhotoIdBookmarked] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [hasPhotos, setHasPhotos] = useState(true);\n  const {\n    userID\n  } = props;\n  const displayMyProfile = localStorage.getItem('userID') == userID ? true : false;\n  const userLoggedIn = localStorage.getItem('userLoggedIn');\n  const [lastID, setLastID] = useState(null);\n  const fetchIsCancelled = useRef(false);\n  const cancelAxiosRequest = useRef();\n  const observer = useRef();\n  const lastImageRef = useCallback(node => {\n    if (loading) return;\n    if (observer.current) observer.current.disconnect();\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && hasMore) {\n        setLoading(true);\n        fetchProfilePhotos(props.query);\n      }\n    });\n    if (node) observer.current.observe(node);\n  }, [loading, hasMore, props.query]);\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    axios({\n      url: 'http://localhost:5000/get_user_username',\n      params: {\n        user_id: userID\n      }\n    }).then(response => {\n      if (response.data.result) {\n        setUsername(response.data.result);\n      }\n    });\n  }, []);\n  useEffect(() => {\n    setTimeout(() => {\n      // temp fix to api call the clashes with another and which both modify file = \"image.jpg\"\n      fetchProfilePhotos();\n    }, 700);\n    return () => {\n      setProfileImgs([]);\n    };\n  }, [userID]);\n\n  const fetchProfilePhotos = () => {\n    setLoading(true);\n    axios({\n      method: 'GET',\n      url: 'http://localhost:5000/profile_photos',\n      params: {\n        user_id: userID,\n        batch_size: 10,\n        last_id: lastID\n      }\n    }).then(res => {\n      console.log(res);\n\n      if (res.data.result !== false) {\n        setLoading(false);\n        setProfileImgs(res.data.result);\n        setProfileImgs(prevImgs => {\n          return [...prevImgs, ...res.data.result];\n        });\n      } else {\n        setLoading(false);\n        setHasPhotos(false);\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, displayMyProfile ? /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      marginTop: '10%',\n      marginLeft: '9%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, \"Uploaded Images: \", profileImgs.length) : /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      marginTop: '10%',\n      marginLeft: '9%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, \"Uploads: \", profileImgs.length), hasPhotos ? null : /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, \"You haven't uploaded any photos!\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"image-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, profileImgs.map((image, index) => {\n    if (image === null) {\n      return null;\n    }\n\n    return /*#__PURE__*/React.createElement(ImageCard, {\n      key: image.id,\n      image: image,\n      openBookmarkModal: modalIsOpen,\n      setOpenBookmarkModal: setModalIsOpen,\n      setPhotoId: setPhotoIdBookmarked,\n      userLoggedIn: props.userLoggedIn,\n      displayMyProfile: displayMyProfile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    });\n  })), /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, loading && 'Loading...'), modalIsOpen ? /*#__PURE__*/React.createElement(BookmarkModal, {\n    openModal: modalIsOpen,\n    setOpenModal: setModalIsOpen,\n    photoId: photoIdBookmarked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }) : null);\n};\n\nexport default UserPhotos;","map":{"version":3,"sources":["/home/cristian/Documents/projects/COMP3900_PhotoPro/capstone-project-comp3900-f11a-2mjec/photopro-app/src/components/userPhotos/UserPhotos.jsx"],"names":["React","useState","useEffect","useCallback","axios","ImageCard","BookmarkModal","UserPhotos","props","username","setUsername","userID","profileImgs","setProfileImgs","modalIsOpen","setModalIsOpen","photoIdBookmarked","setPhotoIdBookmarked","loading","setLoading","hasPhotos","setHasPhotos","displayMyProfile","localStorage","getItem","userLoggedIn","lastID","setLastID","fetchIsCancelled","useRef","cancelAxiosRequest","observer","lastImageRef","node","current","disconnect","IntersectionObserver","entries","isIntersecting","hasMore","fetchProfilePhotos","query","observe","window","scrollTo","url","params","user_id","then","response","data","result","setTimeout","method","batch_size","last_id","res","console","log","prevImgs","marginTop","marginLeft","length","textAlign","map","image","index","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport './UserPhotos.css';\nimport axios from 'axios';\nimport ImageCard from '../feed/ImageCard/ImageCard';\nimport BookmarkModal from '../Modals/BookmarkModal/BookmarkModal';\n\nconst UserPhotos = (props) => {\n  const [username, setUsername] = useState(props.userID);\n  const [profileImgs, setProfileImgs] = useState([]);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [photoIdBookmarked, setPhotoIdBookmarked] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [hasPhotos, setHasPhotos] = useState(true);\n\n  const { userID } = props;\n  const displayMyProfile =\n    localStorage.getItem('userID') == userID ? true : false;\n\n  const userLoggedIn = localStorage.getItem('userLoggedIn');\n  const [lastID, setLastID] = useState(null);\n  const fetchIsCancelled = useRef(false);\n  const cancelAxiosRequest = useRef();\n  const observer = useRef();\n  const lastImageRef = useCallback(\n    (node) => {\n      if (loading) return;\n      if (observer.current) observer.current.disconnect();\n      observer.current = new IntersectionObserver((entries) => {\n        if (entries[0].isIntersecting && hasMore) {\n          setLoading(true);\n          fetchProfilePhotos(props.query);\n        }\n      });\n\n      if (node) observer.current.observe(node);\n    },\n    [loading, hasMore, props.query]\n  );\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n\n    axios({\n      url: 'http://localhost:5000/get_user_username',\n      params: { user_id: userID },\n    }).then((response) => {\n      if (response.data.result) {\n        setUsername(response.data.result);\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    setTimeout(() => {\n      // temp fix to api call the clashes with another and which both modify file = \"image.jpg\"\n      fetchProfilePhotos();\n    }, 700);\n\n    return () => {\n      setProfileImgs([]);\n    };\n  }, [userID]);\n\n  const fetchProfilePhotos = () => {\n    setLoading(true);\n\n    axios({\n      method: 'GET',\n      url: 'http://localhost:5000/profile_photos',\n      params: { user_id: userID, batch_size: 10, last_id: lastID },\n    }).then((res) => {\n      console.log(res);\n      if (res.data.result !== false) {\n        setLoading(false);\n        setProfileImgs(res.data.result);\n        setProfileImgs((prevImgs) => {\n          return [...prevImgs, ...res.data.result];\n        });\n      } else {\n        setLoading(false);\n        setHasPhotos(false);\n      }\n    });\n  };\n\n  return (\n    <React.Fragment>\n      {displayMyProfile ? (\n        <h2 style={{ marginTop: '10%', marginLeft: '9%' }}>\n          Uploaded Images: {profileImgs.length}\n        </h2>\n      ) : (\n        <h2 style={{ marginTop: '10%', marginLeft: '9%' }}>\n          Uploads: {profileImgs.length}\n        </h2>\n      )}\n      {hasPhotos ? null : (\n        <h2 style={{ textAlign: 'center' }}>\n          You haven't uploaded any photos!\n        </h2>\n      )}\n\n      <div className=\"image-grid\">\n        {profileImgs.map((image, index) => {\n          if (image === null) {\n            return null;\n          }\n\n          return (\n            <ImageCard\n              key={image.id}\n              image={image}\n              openBookmarkModal={modalIsOpen}\n              setOpenBookmarkModal={setModalIsOpen}\n              setPhotoId={setPhotoIdBookmarked}\n              userLoggedIn={props.userLoggedIn}\n              displayMyProfile={displayMyProfile}\n            />\n          );\n        })}\n      </div>\n      <h2 style={{ textAlign: 'center' }}>{loading && 'Loading...'}</h2>\n\n      {modalIsOpen ? (\n        <BookmarkModal\n          openModal={modalIsOpen}\n          setOpenModal={setModalIsOpen}\n          photoId={photoIdBookmarked}\n        ></BookmarkModal>\n      ) : null}\n    </React.Fragment>\n  );\n};\n\nexport default UserPhotos;\n"]},"metadata":{},"sourceType":"module"}