{"ast":null,"code":"var _jsxFileName = \"/home/cristian/Documents/projects/COMP3900_PhotoPro/capstone-project-comp3900-f11a-2mjec/photopro-app/src/components/comments/comment/replyComments/ReplyComments.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport './ReplyComments.css';\nimport axios from 'axios';\nimport ReplyComment from './replyComment/ReplyComment';\nexport default function ReplyComments(props) {\n  const [replies, set_replies] = useState([]);\n  const [replyUpdated, updateReplies] = useState('');\n  const {\n    newReply,\n    comment_id,\n    setShowViewReplies,\n    updateComments\n  } = props;\n  useEffect(() => {\n    const getReplies = () => {\n      axios({\n        method: 'GET',\n        url: 'http://localhost:5000/get_comments_to_comment',\n        params: {\n          comment_id: comment_id,\n          batch_size: 10\n        }\n      }).then(response => {\n        console.log(response);\n\n        if (response.data.result) {\n          set_replies(response.data.result);\n        } else {\n          console.log('NO REPLIES FOUND');\n          set_replies([]);\n          setShowViewReplies(false);\n          updateComments(comment_id);\n        }\n      });\n    };\n\n    getReplies();\n  }, [replyUpdated, newReply, comment_id, setShowViewReplies, updateComments]);\n  const replies_components = replies.map(reply => {\n    return /*#__PURE__*/React.createElement(ReplyComment, {\n      key: reply.comment_id,\n      replies_info: reply,\n      updateReplies: updateReplies,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    });\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"reply_comments\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, replies_components));\n}","map":{"version":3,"sources":["/home/cristian/Documents/projects/COMP3900_PhotoPro/capstone-project-comp3900-f11a-2mjec/photopro-app/src/components/comments/comment/replyComments/ReplyComments.jsx"],"names":["React","useState","useEffect","axios","ReplyComment","ReplyComments","props","replies","set_replies","replyUpdated","updateReplies","newReply","comment_id","setShowViewReplies","updateComments","getReplies","method","url","params","batch_size","then","response","console","log","data","result","replies_components","map","reply"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,qBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AAEA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC3C,QAAM,CAACC,OAAD,EAAUC,WAAV,IAAyBP,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAACQ,YAAD,EAAeC,aAAf,IAAgCT,QAAQ,CAAC,EAAD,CAA9C;AAEA,QAAM;AAAEU,IAAAA,QAAF;AAAYC,IAAAA,UAAZ;AAAwBC,IAAAA,kBAAxB;AAA4CC,IAAAA;AAA5C,MAA+DR,KAArE;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,UAAU,GAAG,MAAM;AACvBZ,MAAAA,KAAK,CAAC;AACJa,QAAAA,MAAM,EAAE,KADJ;AAEJC,QAAAA,GAAG,EAAE,+CAFD;AAGJC,QAAAA,MAAM,EAAE;AACNN,UAAAA,UAAU,EAAEA,UADN;AAENO,UAAAA,UAAU,EAAE;AAFN;AAHJ,OAAD,CAAL,CAOGC,IAPH,CAOSC,QAAD,IAAc;AACpBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AACA,YAAIA,QAAQ,CAACG,IAAT,CAAcC,MAAlB,EAA0B;AACxBjB,UAAAA,WAAW,CAACa,QAAQ,CAACG,IAAT,CAAcC,MAAf,CAAX;AACD,SAFD,MAEO;AACLH,UAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAf,UAAAA,WAAW,CAAC,EAAD,CAAX;AACAK,UAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACAC,UAAAA,cAAc,CAACF,UAAD,CAAd;AACD;AACF,OAjBD;AAkBD,KAnBD;;AAoBAG,IAAAA,UAAU;AACX,GAtBQ,EAsBN,CAACN,YAAD,EAAeE,QAAf,EAAyBC,UAAzB,EAAqCC,kBAArC,EAAyDC,cAAzD,CAtBM,CAAT;AAwBA,QAAMY,kBAAkB,GAAGnB,OAAO,CAACoB,GAAR,CAAaC,KAAD,IAAW;AAChD,wBACE,oBAAC,YAAD;AACE,MAAA,GAAG,EAAEA,KAAK,CAAChB,UADb;AAEE,MAAA,YAAY,EAAEgB,KAFhB;AAGE,MAAA,aAAa,EAAElB,aAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOD,GAR0B,CAA3B;AAUA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCgB,kBAAjC,CADF,CADF;AAKD","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './ReplyComments.css';\nimport axios from 'axios';\nimport ReplyComment from './replyComment/ReplyComment';\n\nexport default function ReplyComments(props) {\n  const [replies, set_replies] = useState([]);\n  const [replyUpdated, updateReplies] = useState('');\n\n  const { newReply, comment_id, setShowViewReplies, updateComments } = props;\n\n  useEffect(() => {\n    const getReplies = () => {\n      axios({\n        method: 'GET',\n        url: 'http://localhost:5000/get_comments_to_comment',\n        params: {\n          comment_id: comment_id,\n          batch_size: 10,\n        },\n      }).then((response) => {\n        console.log(response);\n        if (response.data.result) {\n          set_replies(response.data.result);\n        } else {\n          console.log('NO REPLIES FOUND');\n          set_replies([]);\n          setShowViewReplies(false);\n          updateComments(comment_id);\n        }\n      });\n    };\n    getReplies();\n  }, [replyUpdated, newReply, comment_id, setShowViewReplies, updateComments]);\n\n  const replies_components = replies.map((reply) => {\n    return (\n      <ReplyComment\n        key={reply.comment_id}\n        replies_info={reply}\n        updateReplies={updateReplies}\n      />\n    );\n  });\n\n  return (\n    <React.Fragment>\n      <div className=\"reply_comments\">{replies_components}</div>\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}