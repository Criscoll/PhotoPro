{"ast":null,"code":"var _jsxFileName = \"/home/mimi/Desktop/COMP3900/capstone-project-comp3900-f11a-2mjec/photopro-app/src/components/feed/feed.jsx\";\nimport React from \"react\";\nimport \"./feed.css\";\nimport ImageCard from \"./ImageCard/ImageCard\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nconst Feed = props => {\n  const imgs = props.foundImages.map(img => {\n    return /*#__PURE__*/React.createElement(ImageCard, {\n      key: img.id,\n      image: img,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 12\n      }\n    });\n  });\n\n  if (props.query == \"\") {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }\n    }, \"Found Images: \", props.foundImages.length), /*#__PURE__*/React.createElement(InfiniteScroll, {\n      dataLength: 0,\n      next: props.fetchImages(props.query),\n      hasMore: true,\n      loader: \"Loading!\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"image-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }\n    }, imgs)));\n  } else {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }, \"Found Images: \", props.foundImages.length), /*#__PURE__*/React.createElement(InfiniteScroll, {\n      dataLength: 0,\n      next: props.fetchImages(props.query),\n      hasMore: true,\n      loader: \"Loading!\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"image-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }, imgs)));\n  }\n};\n\nexport default Feed;","map":{"version":3,"sources":["/home/mimi/Desktop/COMP3900/capstone-project-comp3900-f11a-2mjec/photopro-app/src/components/feed/feed.jsx"],"names":["React","ImageCard","InfiniteScroll","Feed","props","imgs","foundImages","map","img","id","query","length","fetchImages"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACtB,QAAMC,IAAI,GAAGD,KAAK,CAACE,WAAN,CAAkBC,GAAlB,CAAuBC,GAAD,IAAS;AAC1C,wBAAO,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAEA,GAAG,CAACC,EAApB;AAAwB,MAAA,KAAK,EAAED,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFY,CAAb;;AAIA,MAAIJ,KAAK,CAACM,KAAN,IAAe,EAAnB,EAAuB;AACrB,wBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAmBN,KAAK,CAACE,WAAN,CAAkBK,MAArC,CADF,eAEE,oBAAC,cAAD;AACE,MAAA,UAAU,EAAE,CADd;AAEE,MAAA,IAAI,EAAEP,KAAK,CAACQ,WAAN,CAAkBR,KAAK,CAACM,KAAxB,CAFR;AAGE,MAAA,OAAO,EAAE,IAHX;AAIE,MAAA,MAAM,EAAE,UAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAME;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6BL,IAA7B,CANF,CAFF,CADF;AAaD,GAdD,MAcO;AACL,wBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAmBD,KAAK,CAACE,WAAN,CAAkBK,MAArC,CADF,eAEE,oBAAC,cAAD;AACE,MAAA,UAAU,EAAE,CADd;AAEE,MAAA,IAAI,EAAEP,KAAK,CAACQ,WAAN,CAAkBR,KAAK,CAACM,KAAxB,CAFR;AAGE,MAAA,OAAO,EAAE,IAHX;AAIE,MAAA,MAAM,EAAE,UAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAME;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6BL,IAA7B,CANF,CAFF,CADF;AAaD;AACF,CAlCD;;AAoCA,eAAeF,IAAf","sourcesContent":["import React from \"react\";\nimport \"./feed.css\";\nimport ImageCard from \"./ImageCard/ImageCard\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nconst Feed = (props) => {\n  const imgs = props.foundImages.map((img) => {\n    return <ImageCard key={img.id} image={img} />;\n  });\n\n  if (props.query == \"\") {\n    return (\n      <React.Fragment>\n        <h2>Found Images: {props.foundImages.length}</h2>\n        <InfiniteScroll\n          dataLength={0}\n          next={props.fetchImages(props.query)}\n          hasMore={true}\n          loader={\"Loading!\"}\n        >\n          <div className=\"image-list\">{imgs}</div>\n        </InfiniteScroll>\n      </React.Fragment>\n    );\n  } else {\n    return (\n      <React.Fragment>\n        <h2>Found Images: {props.foundImages.length}</h2>\n        <InfiniteScroll\n          dataLength={0}\n          next={props.fetchImages(props.query)}\n          hasMore={true}\n          loader={\"Loading!\"}\n        >\n          <div className=\"image-list\">{imgs}</div>\n        </InfiniteScroll>\n      </React.Fragment>\n    );\n  }\n};\n\nexport default Feed;\n"]},"metadata":{},"sourceType":"module"}