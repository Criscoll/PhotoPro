{"ast":null,"code":"var _jsxFileName = \"/home/cristian/Documents/projects/COMP3900_PhotoPro/capstone-project-comp3900-f11a-2mjec/photopro-app/src/components/comments/Comments.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport Comment from './comment/Comment';\nimport './Comments.css';\nimport axios from 'axios';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  margin: {\n    margin: theme.spacing(1),\n    width: '70%'\n  },\n  textField: {\n    backgroundColor: 'white',\n    border: '1px solid black',\n    width: '40ch'\n  }\n}));\nexport default function Comments(props) {\n  const [comment_input, set_comment_input] = useState('');\n  const classes = useStyles();\n  const comments = props.comments_list.map(comment => {\n    return /*#__PURE__*/React.createElement(Comment, {\n      key: comment.comment_id,\n      updateComments: props.updateComments,\n      updateReplies: props.updateReplies,\n      comment_info: comment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    });\n  });\n\n  const handlePostClick = e => {\n    e.preventDefault();\n    postComments(comment_input);\n  };\n\n  const postComments = comment_input => {\n    axios({\n      method: 'POST',\n      url: 'http://localhost:5000/post_comment_to_image',\n      params: {\n        comment: comment_input,\n        image_id: props.image_id\n      }\n    }).then(response => {\n      if (response.data.result) {\n        console.log(`comment posted successfully with ${response.data.result}`);\n        props.updateComments(props.comments_list.concat(comment_input));\n        set_comment_input('');\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comment-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handlePostClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"comment\",\n    id: \"comment_input\",\n    value: comment_input,\n    autoComplete: \"off\",\n    onChange: e => set_comment_input(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.margin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    alignItems: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(AccountCircle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    classes: {\n      root: classes.textField\n    },\n    id: \"outlined-multiline-flexible\",\n    label: \"Multiline\",\n    multiline: true,\n    rowsMax: 4,\n    value: comment_input,\n    onChange: e => set_comment_input(e.target.value),\n    variant: \"outlined\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  })))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comments-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, comments));\n}","map":{"version":3,"sources":["/home/cristian/Documents/projects/COMP3900_PhotoPro/capstone-project-comp3900-f11a-2mjec/photopro-app/src/components/comments/Comments.jsx"],"names":["React","useState","useEffect","Comment","axios","TextField","Grid","AccountCircle","makeStyles","useStyles","theme","margin","spacing","width","textField","backgroundColor","border","Comments","props","comment_input","set_comment_input","classes","comments","comments_list","map","comment","comment_id","updateComments","updateReplies","handlePostClick","e","preventDefault","postComments","method","url","params","image_id","then","response","data","result","console","log","concat","target","value","root"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Comment from './comment/Comment';\nimport './Comments.css';\nimport axios from 'axios';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n    width: '70%',\n  },\n  textField: {\n    backgroundColor: 'white',\n    border: '1px solid black',\n    width: '40ch',\n  },\n}));\n\nexport default function Comments(props) {\n  const [comment_input, set_comment_input] = useState('');\n  const classes = useStyles();\n\n  const comments = props.comments_list.map((comment) => {\n    return (\n      <Comment\n        key={comment.comment_id}\n        updateComments={props.updateComments}\n        updateReplies={props.updateReplies}\n        comment_info={comment}\n      />\n    );\n  });\n\n  const handlePostClick = (e) => {\n    e.preventDefault();\n    postComments(comment_input);\n  };\n\n  const postComments = (comment_input) => {\n    axios({\n      method: 'POST',\n      url: 'http://localhost:5000/post_comment_to_image',\n      params: { comment: comment_input, image_id: props.image_id },\n    }).then((response) => {\n      if (response.data.result) {\n        console.log(`comment posted successfully with ${response.data.result}`);\n        props.updateComments(props.comments_list.concat(comment_input));\n        set_comment_input('');\n      }\n    });\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"comment-input\">\n        <form onSubmit={handlePostClick}>\n          <div>\n            <input\n              type=\"comment\"\n              id=\"comment_input\"\n              value={comment_input}\n              autoComplete=\"off\"\n              onChange={(e) => set_comment_input(e.target.value)}\n            />\n          </div>\n          <div className={classes.margin}>\n            <Grid container spacing={1} alignItems=\"flex-end\">\n              <Grid item>\n                <AccountCircle />\n              </Grid>\n              <Grid item>\n                <TextField\n                  classes={{ root: classes.textField }}\n                  id=\"outlined-multiline-flexible\"\n                  label=\"Multiline\"\n                  multiline\n                  rowsMax={4}\n                  value={comment_input}\n                  onChange={(e) => set_comment_input(e.target.value)}\n                  variant=\"outlined\"\n                  fullWidth\n                />\n              </Grid>\n            </Grid>\n          </div>\n        </form>\n      </div>\n      <div className=\"comments-container\">{comments}</div>\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}