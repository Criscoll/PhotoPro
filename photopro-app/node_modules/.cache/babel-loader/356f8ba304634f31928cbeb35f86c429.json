{"ast":null,"code":"var _jsxFileName = \"/home/cristian/Documents/projects/COMP3900_PhotoPro/capstone-project-comp3900-f11a-2mjec/photopro-app/src/components/Modals/PostModal/PhotoModal.jsx\";\nimport ReactDom from 'react-dom';\nexport default function PhotoModal({\n  openModal,\n  setOpenModal,\n  photoId\n}, props) {\n  const [comments, setComments] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [commentUpdated, updateComments] = useState('');\n  const [bookmarkModalIsOpen, setBookmarkModalIsOpen] = useState(false);\n  const cancelAxiosRequest = useRef();\n  const {\n    imageID\n  } = props;\n  const history = useHistory();\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchTags = id => {\n      axios({\n        method: 'GET',\n        url: 'http://localhost:5000/get_tags',\n        params: {\n          image_id: id\n        },\n        cancelToken: new axios.CancelToken(c => cancelAxiosRequest.current = c)\n      }).then(res => {\n        console.log(res);\n\n        if (res.data.result !== false && mounted) {\n          console.log(res.data.result);\n          setTags(res.data.result);\n        } else if (mounted) {\n          setTags([]);\n        }\n      });\n    };\n\n    const fetchComments = id => {\n      axios({\n        method: 'GET',\n        url: 'http://localhost:5000/get_comments_to_image',\n        params: {\n          image_id: id,\n          batch_size: 20\n        },\n        cancelToken: new axios.CancelToken(c => cancelAxiosRequest.current = c)\n      }).then(res => {\n        if (res.data.result !== false && mounted) {\n          setComments(res.data.result);\n        } else if (mounted) {\n          setComments([]);\n        }\n\n        fetchTags(id);\n      });\n    };\n\n    fetchComments(imageID);\n    return () => {\n      console.log('CLEAN UP - PostInfo');\n      cancelAxiosRequest.current();\n      mounted = false;\n    };\n  }, [commentUpdated, imageID]);\n\n  const apiAddPurchase = imageID => {\n    axios({\n      method: 'POST',\n      url: 'http://localhost:5000/add_purchase',\n      params: {\n        save_for_later: 0,\n        purchased: 0,\n        image_id: String(imageID)\n      }\n    }).then(response => {\n      if (response.data.result !== false) {\n        console.log(response);\n      }\n    });\n  };\n\n  const handleBuyButton = () => {\n    apiAddPurchase(props.location.state.id);\n  };\n\n  const handleBookmarkClicked = () => {\n    setBookmarkModalIsOpen(true);\n  };\n\n  if (!openModal) {\n    return null;\n  } else {\n    return ReactDom.createPortal( /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"photo-overlay-styles\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"photo-styles\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"postWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"postInfo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      varient: \"outlined\",\n      onClick: () => {\n        history.push({\n          pathname: `/profile/${props.location.state.uploader}`,\n          state: {\n            uploaderID: props.location.state.uploader\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }\n    }, \"@\", props.location.state.uploader), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }\n    }, \"Follow\"), /*#__PURE__*/React.createElement(Likes, {\n      num_likes: props.location.state.num_likes,\n      image_id: props.location.state.id,\n      uploader_id: props.location.state.uploader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(IconButton, {\n      variant: \"contained\",\n      onClick: handleBookmarkClicked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(BookmarkIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"postImage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: `data:image/jpg;base64,${props.location.state.url}`,\n      alt: props.location.state.caption,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"recImages-nested\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"roboto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 15\n      }\n    }, \" Related Photos:\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"recImage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"recImage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"recImage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"postFeed-nested\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }, props.location.state.title), /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"roboto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }, props.location.state.caption), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"postTags\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"roboto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 15\n      }\n    }, props.location.state.caption), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 15\n      }\n    }, \"Tags:\", ' ', tags.length < 1 ? 'this post has no tags to display' : null), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flexbox-tags\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 15\n      }\n    }, tags.length > 0 ? tags.map((tag, index) => {\n      return /*#__PURE__*/React.createElement(Button, {\n        key: index,\n        variant: \"contained\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }\n      }, \"#\", tag);\n    }) : null)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"postPrice\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"roboto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 15\n      }\n    }, \"Price: $\", props.location.state.price), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      onClick: handleBuyButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 15\n      }\n    }, \"Add to Cart\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"postComments\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"roboto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 15\n      }\n    }, \"Comments:\"), /*#__PURE__*/React.createElement(Comments, {\n      image_id: props.location.state.id,\n      comments_list: comments,\n      updateComments: updateComments,\n      uploader_id: props.location.state.uploader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 15\n      }\n    })))), bookmarkModalIsOpen ? /*#__PURE__*/React.createElement(BookmarkModal, {\n      openModal: true,\n      setOpenModal: setBookmarkModalIsOpen,\n      photoId: props.location.state.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }\n    }) : null), document.getElementById('portal'));\n  }\n}","map":{"version":3,"sources":["/home/cristian/Documents/projects/COMP3900_PhotoPro/capstone-project-comp3900-f11a-2mjec/photopro-app/src/components/Modals/PostModal/PhotoModal.jsx"],"names":["ReactDom","PhotoModal","openModal","setOpenModal","photoId","props","comments","setComments","useState","tags","setTags","commentUpdated","updateComments","bookmarkModalIsOpen","setBookmarkModalIsOpen","cancelAxiosRequest","useRef","imageID","history","useHistory","useEffect","mounted","fetchTags","id","axios","method","url","params","image_id","cancelToken","CancelToken","c","current","then","res","console","log","data","result","fetchComments","batch_size","apiAddPurchase","save_for_later","purchased","String","response","handleBuyButton","location","state","handleBookmarkClicked","createPortal","push","pathname","uploader","uploaderID","num_likes","caption","title","length","map","tag","index","price","document","getElementById"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,WAArB;AAEA,eAAe,SAASC,UAAT,CACb;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,YAAb;AAA2BC,EAAAA;AAA3B,CADa,EAEbC,KAFa,EAGb;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BC,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBF,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACG,cAAD,EAAiBC,cAAjB,IAAmCJ,QAAQ,CAAC,EAAD,CAAjD;AACA,QAAM,CAACK,mBAAD,EAAsBC,sBAAtB,IAAgDN,QAAQ,CAAC,KAAD,CAA9D;AACA,QAAMO,kBAAkB,GAAGC,MAAM,EAAjC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAcZ,KAApB;AACA,QAAMa,OAAO,GAAGC,UAAU,EAA1B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIC,OAAO,GAAG,IAAd;;AAEA,UAAMC,SAAS,GAAIC,EAAD,IAAQ;AACxBC,MAAAA,KAAK,CAAC;AACJC,QAAAA,MAAM,EAAE,KADJ;AAEJC,QAAAA,GAAG,EAAE,gCAFD;AAGJC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,QAAQ,EAAEL;AAAZ,SAHJ;AAIJM,QAAAA,WAAW,EAAE,IAAIL,KAAK,CAACM,WAAV,CACVC,CAAD,IAAQhB,kBAAkB,CAACiB,OAAnB,GAA6BD,CAD1B;AAJT,OAAD,CAAL,CAOGE,IAPH,CAOSC,GAAD,IAAS;AACfC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;;AACA,YAAIA,GAAG,CAACG,IAAJ,CAASC,MAAT,KAAoB,KAApB,IAA6BjB,OAAjC,EAA0C;AACxCc,UAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,CAASC,MAArB;AACA5B,UAAAA,OAAO,CAACwB,GAAG,CAACG,IAAJ,CAASC,MAAV,CAAP;AACD,SAHD,MAGO,IAAIjB,OAAJ,EAAa;AAClBX,UAAAA,OAAO,CAAC,EAAD,CAAP;AACD;AACF,OAfD;AAgBD,KAjBD;;AAmBA,UAAM6B,aAAa,GAAIhB,EAAD,IAAQ;AAC5BC,MAAAA,KAAK,CAAC;AACJC,QAAAA,MAAM,EAAE,KADJ;AAEJC,QAAAA,GAAG,EAAE,6CAFD;AAGJC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,QAAQ,EAAEL,EAAZ;AAAgBiB,UAAAA,UAAU,EAAE;AAA5B,SAHJ;AAIJX,QAAAA,WAAW,EAAE,IAAIL,KAAK,CAACM,WAAV,CACVC,CAAD,IAAQhB,kBAAkB,CAACiB,OAAnB,GAA6BD,CAD1B;AAJT,OAAD,CAAL,CAOGE,IAPH,CAOSC,GAAD,IAAS;AACf,YAAIA,GAAG,CAACG,IAAJ,CAASC,MAAT,KAAoB,KAApB,IAA6BjB,OAAjC,EAA0C;AACxCd,UAAAA,WAAW,CAAC2B,GAAG,CAACG,IAAJ,CAASC,MAAV,CAAX;AACD,SAFD,MAEO,IAAIjB,OAAJ,EAAa;AAClBd,UAAAA,WAAW,CAAC,EAAD,CAAX;AACD;;AACDe,QAAAA,SAAS,CAACC,EAAD,CAAT;AACD,OAdD;AAeD,KAhBD;;AAiBAgB,IAAAA,aAAa,CAACtB,OAAD,CAAb;AAEA,WAAO,MAAM;AACXkB,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACArB,MAAAA,kBAAkB,CAACiB,OAAnB;AACAX,MAAAA,OAAO,GAAG,KAAV;AACD,KAJD;AAKD,GA9CQ,EA8CN,CAACV,cAAD,EAAiBM,OAAjB,CA9CM,CAAT;;AAgDA,QAAMwB,cAAc,GAAIxB,OAAD,IAAa;AAClCO,IAAAA,KAAK,CAAC;AACJC,MAAAA,MAAM,EAAE,MADJ;AAEJC,MAAAA,GAAG,EAAE,oCAFD;AAGJC,MAAAA,MAAM,EAAE;AACNe,QAAAA,cAAc,EAAE,CADV;AAENC,QAAAA,SAAS,EAAE,CAFL;AAGNf,QAAAA,QAAQ,EAAEgB,MAAM,CAAC3B,OAAD;AAHV;AAHJ,KAAD,CAAL,CAQGgB,IARH,CAQSY,QAAD,IAAc;AACpB,UAAIA,QAAQ,CAACR,IAAT,CAAcC,MAAd,KAAyB,KAA7B,EAAoC;AAClCH,QAAAA,OAAO,CAACC,GAAR,CAAYS,QAAZ;AACD;AACF,KAZD;AAaD,GAdD;;AAgBA,QAAMC,eAAe,GAAG,MAAM;AAC5BL,IAAAA,cAAc,CAACpC,KAAK,CAAC0C,QAAN,CAAeC,KAAf,CAAqBzB,EAAtB,CAAd;AACD,GAFD;;AAIA,QAAM0B,qBAAqB,GAAG,MAAM;AAClCnC,IAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACD,GAFD;;AAIA,MAAI,CAACZ,SAAL,EAAgB;AACd,WAAO,IAAP;AACD,GAFD,MAEO;AACL,WAAOF,QAAQ,CAACkD,YAAT,eACL,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAIE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAC,UADV;AAEE,MAAA,OAAO,EAAE,MAAM;AACbhC,QAAAA,OAAO,CAACiC,IAAR,CAAa;AACXC,UAAAA,QAAQ,EAAG,YAAW/C,KAAK,CAAC0C,QAAN,CAAeC,KAAf,CAAqBK,QAAS,EADzC;AAEXL,UAAAA,KAAK,EAAE;AAAEM,YAAAA,UAAU,EAAEjD,KAAK,CAAC0C,QAAN,CAAeC,KAAf,CAAqBK;AAAnC;AAFI,SAAb;AAID,OAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YASIhD,KAAK,CAAC0C,QAAN,CAAeC,KAAf,CAAqBK,QATzB,CADF,eAYE;AAAQ,MAAA,SAAS,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF,eAaE,oBAAC,KAAD;AACE,MAAA,SAAS,EAAEhD,KAAK,CAAC0C,QAAN,CAAeC,KAAf,CAAqBO,SADlC;AAEE,MAAA,QAAQ,EAAElD,KAAK,CAAC0C,QAAN,CAAeC,KAAf,CAAqBzB,EAFjC;AAGE,MAAA,WAAW,EAAElB,KAAK,CAAC0C,QAAN,CAAeC,KAAf,CAAqBK,QAHpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF,eAkBE,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,WAApB;AAAgC,MAAA,OAAO,EAAEJ,qBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAlBF,CADF,CADF,eAyBE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,GAAG,EAAG,yBAAwB5C,KAAK,CAAC0C,QAAN,CAAeC,KAAf,CAAqBtB,GAAI,EADzD;AAEE,MAAA,GAAG,EAAErB,KAAK,CAAC0C,QAAN,CAAeC,KAAf,CAAqBQ,OAF5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAKE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,eAIE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CALF,CAzBF,eAqCE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKnD,KAAK,CAAC0C,QAAN,CAAeC,KAAf,CAAqBS,KAA1B,CADF,eAEE;AAAI,MAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwBpD,KAAK,CAAC0C,QAAN,CAAeC,KAAf,CAAqBQ,OAA7C,CAFF,eAGE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwBnD,KAAK,CAAC0C,QAAN,CAAeC,KAAf,CAAqBQ,OAA7C,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACQ,GADR,EAEG/C,IAAI,CAACiD,MAAL,GAAc,CAAd,GAAkB,kCAAlB,GAAuD,IAF1D,CAFF,eAME;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGjD,IAAI,CAACiD,MAAL,GAAc,CAAd,GACGjD,IAAI,CAACkD,GAAL,CAAS,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACvB,0BACE,oBAAC,MAAD;AAAQ,QAAA,GAAG,EAAEA,KAAb;AAAoB,QAAA,OAAO,EAAC,WAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACID,GADJ,CADF;AAKD,KAND,CADH,GAQG,IATN,CANF,CAHF,eAqBE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAgCvD,KAAK,CAAC0C,QAAN,CAAeC,KAAf,CAAqBc,KAArD,CADF,eAEE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,OAAO,EAAEhB,eAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,CArBF,eA2BE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAGE,oBAAC,QAAD;AACE,MAAA,QAAQ,EAAEzC,KAAK,CAAC0C,QAAN,CAAeC,KAAf,CAAqBzB,EADjC;AAEE,MAAA,aAAa,EAAEjB,QAFjB;AAGE,MAAA,cAAc,EAAEM,cAHlB;AAIE,MAAA,WAAW,EAAEP,KAAK,CAAC0C,QAAN,CAAeC,KAAf,CAAqBK,QAJpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CA3BF,CArCF,CAJF,EAgFGxC,mBAAmB,gBAClB,oBAAC,aAAD;AACE,MAAA,SAAS,EAAE,IADb;AAEE,MAAA,YAAY,EAAEC,sBAFhB;AAGE,MAAA,OAAO,EAAET,KAAK,CAAC0C,QAAN,CAAeC,KAAf,CAAqBzB,EAHhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADkB,GAMhB,IAtFN,CADK,EA0FLwC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CA1FK,CAAP;AA4FD;AACF","sourcesContent":["import ReactDom from 'react-dom';\n\nexport default function PhotoModal(\n  { openModal, setOpenModal, photoId },\n  props\n) {\n  const [comments, setComments] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [commentUpdated, updateComments] = useState('');\n  const [bookmarkModalIsOpen, setBookmarkModalIsOpen] = useState(false);\n  const cancelAxiosRequest = useRef();\n  const { imageID } = props;\n  const history = useHistory();\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchTags = (id) => {\n      axios({\n        method: 'GET',\n        url: 'http://localhost:5000/get_tags',\n        params: { image_id: id },\n        cancelToken: new axios.CancelToken(\n          (c) => (cancelAxiosRequest.current = c)\n        ),\n      }).then((res) => {\n        console.log(res);\n        if (res.data.result !== false && mounted) {\n          console.log(res.data.result);\n          setTags(res.data.result);\n        } else if (mounted) {\n          setTags([]);\n        }\n      });\n    };\n\n    const fetchComments = (id) => {\n      axios({\n        method: 'GET',\n        url: 'http://localhost:5000/get_comments_to_image',\n        params: { image_id: id, batch_size: 20 },\n        cancelToken: new axios.CancelToken(\n          (c) => (cancelAxiosRequest.current = c)\n        ),\n      }).then((res) => {\n        if (res.data.result !== false && mounted) {\n          setComments(res.data.result);\n        } else if (mounted) {\n          setComments([]);\n        }\n        fetchTags(id);\n      });\n    };\n    fetchComments(imageID);\n\n    return () => {\n      console.log('CLEAN UP - PostInfo');\n      cancelAxiosRequest.current();\n      mounted = false;\n    };\n  }, [commentUpdated, imageID]);\n\n  const apiAddPurchase = (imageID) => {\n    axios({\n      method: 'POST',\n      url: 'http://localhost:5000/add_purchase',\n      params: {\n        save_for_later: 0,\n        purchased: 0,\n        image_id: String(imageID),\n      },\n    }).then((response) => {\n      if (response.data.result !== false) {\n        console.log(response);\n      }\n    });\n  };\n\n  const handleBuyButton = () => {\n    apiAddPurchase(props.location.state.id);\n  };\n\n  const handleBookmarkClicked = () => {\n    setBookmarkModalIsOpen(true);\n  };\n\n  if (!openModal) {\n    return null;\n  } else {\n    return ReactDom.createPortal(\n      <React.Fragment>\n        <div className=\"photo-overlay-styles\" />\n        <div className=\"photo-styles\"></div>\n\n        <div className=\"postWrapper\">\n          <div className=\"postInfo\">\n            <div className=\"username\">\n              <Button\n                varient=\"outlined\"\n                onClick={() => {\n                  history.push({\n                    pathname: `/profile/${props.location.state.uploader}`,\n                    state: { uploaderID: props.location.state.uploader },\n                  });\n                }}\n              >\n                @{props.location.state.uploader}\n              </Button>\n              <button className=\"btn\">Follow</button>\n              <Likes\n                num_likes={props.location.state.num_likes}\n                image_id={props.location.state.id}\n                uploader_id={props.location.state.uploader}\n              />\n              <IconButton variant=\"contained\" onClick={handleBookmarkClicked}>\n                <BookmarkIcon />\n              </IconButton>\n            </div>\n          </div>\n          <div className=\"postImage\">\n            <img\n              src={`data:image/jpg;base64,${props.location.state.url}`}\n              alt={props.location.state.caption}\n            />\n            <div className=\"recImages-nested\">\n              <h1 className=\"roboto\"> Related Photos:</h1>\n              <div className=\"recImage\"></div>\n              <div className=\"recImage\"></div>\n              <div className=\"recImage\"></div>\n            </div>\n          </div>\n          <div className=\"postFeed-nested\">\n            <h1>{props.location.state.title}</h1>\n            <h2 className=\"roboto\">{props.location.state.caption}</h2>\n            <div className=\"postTags\">\n              <h2 className=\"roboto\">{props.location.state.caption}</h2>\n              <h3>\n                Tags:{' '}\n                {tags.length < 1 ? 'this post has no tags to display' : null}\n              </h3>\n              <div className=\"flexbox-tags\">\n                {tags.length > 0\n                  ? tags.map((tag, index) => {\n                      return (\n                        <Button key={index} variant=\"contained\">\n                          #{tag}\n                        </Button>\n                      );\n                    })\n                  : null}\n              </div>\n            </div>\n            <div className=\"postPrice\">\n              <h2 className=\"roboto\">Price: ${props.location.state.price}</h2>\n              <Button variant=\"contained\" onClick={handleBuyButton}>\n                Add to Cart\n              </Button>\n            </div>\n            <div className=\"postComments\">\n              <h2 className=\"roboto\">Comments:</h2>\n              {/* <Comments className=\"comments\" /> */}\n              <Comments\n                image_id={props.location.state.id}\n                comments_list={comments}\n                updateComments={updateComments}\n                uploader_id={props.location.state.uploader}\n              />\n            </div>\n          </div>\n        </div>\n        {bookmarkModalIsOpen ? (\n          <BookmarkModal\n            openModal={true}\n            setOpenModal={setBookmarkModalIsOpen}\n            photoId={props.location.state.id}\n          ></BookmarkModal>\n        ) : null}\n      </React.Fragment>,\n\n      document.getElementById('portal')\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}