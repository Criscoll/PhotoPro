{"ast":null,"code":"var _jsxFileName = \"/home/cristian/Documents/projects/COMP3900_PhotoPro/capstone-project-comp3900-f11a-2mjec/photopro-app/src/components/Modals/PostModal/PostModal.jsx\";\nimport ReactDom from 'react-dom';\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport './PostModal.css';\nimport '../../../pages/PostInfo/PostInfo.css';\nimport FollowButton from '../../follow/followButton';\nimport Likes from '../../likes/Likes';\nimport Comments from '../../comments/Comments';\nimport axios from 'axios';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\nimport BookmarkModal from '../BookmarkModal/BookmarkModal';\nexport default function PostModal(props) {\n  const [username, setUsername] = useState(props.uploader);\n  const [email, setEmail] = useState('');\n  const [comments, setComments] = useState([]);\n  const [addedToCart, setAddedToCart] = useState(false);\n  const [tags, setTags] = useState([]);\n  const [commentUpdated, updateComments] = useState('');\n  const [bookmarkModalIsOpen, setBookmarkModalIsOpen] = useState(false);\n  const [relatedImages, setRelatedImages] = useState([]);\n  const [relatedImagesLoading, setRelatedImagesLoading] = useState(true);\n  const [hasRelatedImages, setHasRelatedImages] = useState(true);\n  const cancelAxiosRequest = useRef();\n  const {\n    imageID\n  } = props;\n  const history = useHistory();\n  useEffect(() => {\n    axios({\n      url: 'http://localhost:5000/get_user_username',\n      params: {\n        user_id: props.uploader\n      }\n    }).then(response => {\n      if (response.data.result) {\n        setUsername(response.data.result);\n      }\n    });\n    axios({\n      url: 'http://localhost:5000/item_is_in_cart',\n      params: {\n        image_id: imageID\n      }\n    }).then(response => {\n      if (response.data.result) {\n        setAddedToCart(true);\n      }\n    });\n    axios({\n      url: 'http://localhost:5000/get_user_email',\n      params: {\n        user_id: props.uploader\n      }\n    }).then(response => {\n      if (response.data.result) {\n        setEmail(response.data.result);\n      }\n    });\n    axios({\n      url: 'http://localhost:5000/get_related_images',\n      params: {\n        image_id: imageID\n      }\n    }).then(response => {\n      console.log('~~~~~~~~~~~~Get Related Images~~~~~~~~~~~');\n      console.log(response);\n\n      if (response.data.result) {\n        setRelatedImages(response.data.result);\n        setHasRelatedImages(true);\n      } else {\n        setHasRelatedImages(false);\n      }\n\n      setRelatedImagesLoading(false);\n    });\n  }, []);\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchTags = id => {\n      axios({\n        method: 'GET',\n        url: 'http://localhost:5000/get_tags',\n        params: {\n          image_id: id\n        },\n        cancelToken: new axios.CancelToken(c => cancelAxiosRequest.current = c)\n      }).then(res => {\n        if (res.data.result !== false && mounted) {\n          setTags(res.data.result);\n        } else if (mounted) {\n          setTags([]);\n        }\n      });\n    };\n\n    const fetchComments = id => {\n      axios({\n        method: 'GET',\n        url: 'http://localhost:5000/get_comments_to_image',\n        params: {\n          image_id: id,\n          batch_size: 20\n        },\n        cancelToken: new axios.CancelToken(c => cancelAxiosRequest.current = c)\n      }).then(res => {\n        if (res.data.result !== false && mounted) {\n          setComments(res.data.result);\n        } else if (mounted) {\n          setComments([]);\n        }\n\n        fetchTags(id);\n      });\n    };\n\n    fetchComments(imageID);\n    return () => {\n      cancelAxiosRequest.current();\n      mounted = false;\n    };\n  }, [commentUpdated, imageID]);\n\n  const apiAddPurchase = imageID => {\n    axios({\n      method: 'POST',\n      url: 'http://localhost:5000/add_purchase',\n      params: {\n        save_for_later: 0,\n        purchased: 0,\n        image_id: String(imageID)\n      }\n    }).then(response => {\n      if (response.data.result !== false) {\n        setAddedToCart(true);\n      } else {\n        setAddedToCart(false);\n      }\n    });\n  };\n\n  const apiRemovePurchase = imageID => {\n    axios({\n      method: 'POST',\n      url: 'http://localhost:5000/delete_item_from_cart',\n      params: {\n        image_id: String(imageID)\n      }\n    }).then(response => {\n      if (response.data.result !== false) {\n        setAddedToCart(false);\n      } else {\n        setAddedToCart(true);\n      }\n    });\n  };\n\n  const handleBuyButton = () => {\n    if (addedToCart) {\n      apiRemovePurchase(props.imageID);\n    } else {\n      apiAddPurchase(props.imageID);\n    }\n  };\n\n  const handleBookmarkClicked = () => {\n    setBookmarkModalIsOpen(true);\n  };\n\n  if (!props.openModal) {\n    return null;\n  } else {\n    return ReactDom.createPortal( /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"post-modal-overlay-\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"post-modal\",\n      onClick: e => {\n        e.stopPropagation();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"postWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"postInfo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 15\n      }\n    }, localStorage.getItem('userLoggedIn') ? /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 19\n      }\n    }, parseInt(localStorage.getItem('userID')) !== props.uploader ? /*#__PURE__*/React.createElement(FollowButton, {\n      uploader: props.uploader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 23\n      }\n    }) : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bookmark-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      variant: \"contained\",\n      onClick: handleBookmarkClicked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(BookmarkIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 25\n      }\n    })))) : null, /*#__PURE__*/React.createElement(Likes, {\n      setNumLikes: props.setNumLikes,\n      image_id: props.imageID,\n      uploader_id: props.uploader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"postImage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main-img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: `data:image/jpg;base64,${props.url}`,\n      alt: props.caption,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"recImages-nested\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"roboto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 19\n      }\n    }, \" Related Photos:\"), relatedImages.length > 0 ? relatedImages.map((images, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        className: \"recImage\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        onClick: () => {\n          props.setRelatedImagesClicked(images);\n        },\n        src: `data:image/jpg;base64,${images.img}`,\n        alt: images.caption,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 27\n        }\n      }), /*#__PURE__*/React.createElement(\"img\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 27\n        }\n      }));\n    }) : /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 23\n      }\n    }, !hasRelatedImages && 'No related images could be found'), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: '20vh',\n        marginRight: '20vh',\n        marginLeft: '20vh'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 23\n      }\n    })))), /*#__PURE__*/React.createElement(\"h2\", {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 15\n      }\n    }, relatedImagesLoading && 'Loading...')), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"postFeed-nested\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }\n    }, props.title), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"username-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      onClick: () => {\n        history.push({\n          pathname: `/profile/${props.uploader}`,\n          state: {\n            uploaderID: props.uploader\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 19\n      }\n    }, \"@\", username)), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"roboto\",\n      style: {\n        fontSize: '70%',\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }\n    }, \"email: \", email)), /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"roboto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 15\n      }\n    }, props.caption), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"postTags\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 17\n      }\n    }, \"Tags:\", ' ', tags.length < 1 ? 'this post has no tags to display' : null), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flexbox-tags\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 17\n      }\n    }, tags.length > 0 ? tags.map((tag, index) => {\n      return /*#__PURE__*/React.createElement(Button, {\n        key: index,\n        variant: \"contained\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 27\n        }\n      }, \"#\", tag);\n    }) : null)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"postPrice\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"roboto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 17\n      }\n    }, \"Price: $\", props.price), localStorage.getItem('userLoggedIn') ? parseInt(localStorage.getItem('userID')) !== props.uploader ? addedToCart ? /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleBuyButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 23\n      }\n    }, \"Added to Cart\") : /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      onClick: handleBuyButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 23\n      }\n    }, \"Add to Cart\") : null : null), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"postComments\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"roboto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 17\n      }\n    }, \"Comments:\"), /*#__PURE__*/React.createElement(Comments, {\n      image_id: props.imageID,\n      comments_list: comments,\n      updateComments: updateComments,\n      uploader_id: props.uploader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      onClick: () => setBookmarkModalIsOpen(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 11\n      }\n    }, bookmarkModalIsOpen ? /*#__PURE__*/React.createElement(BookmarkModal, {\n      openModal: true,\n      setOpenModal: setBookmarkModalIsOpen,\n      photoId: props.imageID,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 15\n      }\n    }) : null))), document.getElementById('postPortal'));\n  }\n}","map":{"version":3,"sources":["/home/cristian/Documents/projects/COMP3900_PhotoPro/capstone-project-comp3900-f11a-2mjec/photopro-app/src/components/Modals/PostModal/PostModal.jsx"],"names":["ReactDom","React","useState","useEffect","useRef","useHistory","FollowButton","Likes","Comments","axios","Button","IconButton","BookmarkIcon","BookmarkModal","PostModal","props","username","setUsername","uploader","email","setEmail","comments","setComments","addedToCart","setAddedToCart","tags","setTags","commentUpdated","updateComments","bookmarkModalIsOpen","setBookmarkModalIsOpen","relatedImages","setRelatedImages","relatedImagesLoading","setRelatedImagesLoading","hasRelatedImages","setHasRelatedImages","cancelAxiosRequest","imageID","history","url","params","user_id","then","response","data","result","image_id","console","log","mounted","fetchTags","id","method","cancelToken","CancelToken","c","current","res","fetchComments","batch_size","apiAddPurchase","save_for_later","purchased","String","apiRemovePurchase","handleBuyButton","handleBookmarkClicked","openModal","createPortal","e","stopPropagation","localStorage","getItem","parseInt","setNumLikes","caption","length","map","images","index","setRelatedImagesClicked","img","marginTop","marginRight","marginLeft","textAlign","title","push","pathname","state","uploaderID","fontSize","tag","price","document","getElementById"],"mappings":"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","sourcesContent":["import ReactDom from 'react-dom';\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport './PostModal.css';\nimport '../../../pages/PostInfo/PostInfo.css';\nimport FollowButton from '../../follow/followButton';\nimport Likes from '../../likes/Likes';\nimport Comments from '../../comments/Comments';\nimport axios from 'axios';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\nimport BookmarkModal from '../BookmarkModal/BookmarkModal';\n\nexport default function PostModal(props) {\n  const [username, setUsername] = useState(props.uploader);\n  const [email, setEmail] = useState('');\n  const [comments, setComments] = useState([]);\n  const [addedToCart, setAddedToCart] = useState(false);\n  const [tags, setTags] = useState([]);\n  const [commentUpdated, updateComments] = useState('');\n  const [bookmarkModalIsOpen, setBookmarkModalIsOpen] = useState(false);\n  const [relatedImages, setRelatedImages] = useState([]);\n  const [relatedImagesLoading, setRelatedImagesLoading] = useState(true);\n  const [hasRelatedImages, setHasRelatedImages] = useState(true);\n  const cancelAxiosRequest = useRef();\n  const { imageID } = props;\n  const history = useHistory();\n\n  useEffect(() => {\n    axios({\n      url: 'http://localhost:5000/get_user_username',\n      params: { user_id: props.uploader },\n    }).then((response) => {\n      if (response.data.result) {\n        setUsername(response.data.result);\n      }\n    });\n\n    axios({\n      url: 'http://localhost:5000/item_is_in_cart',\n      params: { image_id: imageID },\n    }).then((response) => {\n      if (response.data.result) {\n        setAddedToCart(true);\n      }\n    });\n\n    axios({\n      url: 'http://localhost:5000/get_user_email',\n      params: { user_id: props.uploader },\n    }).then((response) => {\n      if (response.data.result) {\n        setEmail(response.data.result);\n      }\n    });\n\n    axios({\n      url: 'http://localhost:5000/get_related_images',\n      params: { image_id: imageID },\n    }).then((response) => {\n      console.log('~~~~~~~~~~~~Get Related Images~~~~~~~~~~~');\n      console.log(response);\n      if (response.data.result) {\n        setRelatedImages(response.data.result);\n        setHasRelatedImages(true);\n      } else {\n        setHasRelatedImages(false);\n      }\n      setRelatedImagesLoading(false);\n    });\n  }, []);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchTags = (id) => {\n      axios({\n        method: 'GET',\n        url: 'http://localhost:5000/get_tags',\n        params: { image_id: id },\n        cancelToken: new axios.CancelToken(\n          (c) => (cancelAxiosRequest.current = c)\n        ),\n      }).then((res) => {\n        if (res.data.result !== false && mounted) {\n          setTags(res.data.result);\n        } else if (mounted) {\n          setTags([]);\n        }\n      });\n    };\n\n    const fetchComments = (id) => {\n      axios({\n        method: 'GET',\n        url: 'http://localhost:5000/get_comments_to_image',\n        params: { image_id: id, batch_size: 20 },\n        cancelToken: new axios.CancelToken(\n          (c) => (cancelAxiosRequest.current = c)\n        ),\n      }).then((res) => {\n        if (res.data.result !== false && mounted) {\n          setComments(res.data.result);\n        } else if (mounted) {\n          setComments([]);\n        }\n        fetchTags(id);\n      });\n    };\n    fetchComments(imageID);\n\n    return () => {\n      cancelAxiosRequest.current();\n      mounted = false;\n    };\n  }, [commentUpdated, imageID]);\n\n  const apiAddPurchase = (imageID) => {\n    axios({\n      method: 'POST',\n      url: 'http://localhost:5000/add_purchase',\n      params: {\n        save_for_later: 0,\n        purchased: 0,\n        image_id: String(imageID),\n      },\n    }).then((response) => {\n      if (response.data.result !== false) {\n        setAddedToCart(true);\n      } else {\n        setAddedToCart(false);\n      }\n    });\n  };\n\n  const apiRemovePurchase = (imageID) => {\n    axios({\n      method: 'POST',\n      url: 'http://localhost:5000/delete_item_from_cart',\n      params: {\n        image_id: String(imageID),\n      },\n    }).then((response) => {\n      if (response.data.result !== false) {\n        setAddedToCart(false);\n      } else {\n        setAddedToCart(true);\n      }\n    });\n  };\n\n  const handleBuyButton = () => {\n    if (addedToCart) {\n      apiRemovePurchase(props.imageID);\n    } else {\n      apiAddPurchase(props.imageID);\n    }\n  };\n\n  const handleBookmarkClicked = () => {\n    setBookmarkModalIsOpen(true);\n  };\n\n  if (!props.openModal) {\n    return null;\n  } else {\n    return ReactDom.createPortal(\n      <React.Fragment>\n        <div className=\"post-modal-overlay-\" />\n        <div\n          className=\"post-modal\"\n          onClick={(e) => {\n            e.stopPropagation();\n          }}\n        >\n          <div className=\"postWrapper\">\n            <div className=\"postInfo\">\n              <div className=\"username\">\n                {localStorage.getItem('userLoggedIn') ? (\n                  <React.Fragment>\n                    {parseInt(localStorage.getItem('userID')) !==\n                    props.uploader ? (\n                      <FollowButton uploader={props.uploader} />\n                    ) : null}\n                    <div className=\"bookmark-wrapper\">\n                      <IconButton\n                        variant=\"contained\"\n                        onClick={handleBookmarkClicked}\n                      >\n                        <BookmarkIcon />\n                      </IconButton>\n                    </div>\n                  </React.Fragment>\n                ) : null}\n                <Likes\n                  setNumLikes={props.setNumLikes}\n                  image_id={props.imageID}\n                  uploader_id={props.uploader}\n                />\n              </div>\n            </div>\n            <div className=\"postImage\">\n              <div className=\"main-img\">\n                <img\n                  src={`data:image/jpg;base64,${props.url}`}\n                  alt={props.caption}\n                />\n\n                <div className=\"recImages-nested\">\n                  <h1 className=\"roboto\"> Related Photos:</h1>\n\n                  {relatedImages.length > 0 ? (\n                    relatedImages.map((images, index) => {\n                      return (\n                        <div key={index} className=\"recImage\">\n                          <img\n                            onClick={() => {\n                              props.setRelatedImagesClicked(images);\n                            }}\n                            src={`data:image/jpg;base64,${images.img}`}\n                            alt={images.caption}\n                          />\n                          <img />\n                        </div>\n                      );\n                    })\n                  ) : (\n                    <React.Fragment>\n                      <h1>\n                        {!hasRelatedImages &&\n                          'No related images could be found'}\n                      </h1>\n                      <div\n                        style={{\n                          marginTop: '20vh',\n                          marginRight: '20vh',\n                          marginLeft: '20vh',\n                        }}\n                      ></div>\n                    </React.Fragment>\n                  )}\n                </div>\n              </div>\n\n              <h2 style={{ textAlign: 'center' }}>\n                {relatedImagesLoading && 'Loading...'}\n              </h2>\n            </div>\n            <div className=\"postFeed-nested\">\n              <div className=\"title\">\n                <h1>{props.title}</h1>\n                <div className=\"username-wrapper\">\n                  <Button\n                    variant=\"outlined\"\n                    onClick={() => {\n                      history.push({\n                        pathname: `/profile/${props.uploader}`,\n                        state: { uploaderID: props.uploader },\n                      });\n                    }}\n                  >\n                    @{username}\n                  </Button>\n                </div>\n                <p\n                  className=\"roboto\"\n                  style={{ fontSize: '70%', textAlign: 'center' }}\n                >\n                  email: {email}\n                </p>\n              </div>\n\n              <h2 className=\"roboto\">{props.caption}</h2>\n              <div className=\"postTags\">\n                <h3>\n                  Tags:{' '}\n                  {tags.length < 1 ? 'this post has no tags to display' : null}\n                </h3>\n                <div className=\"flexbox-tags\">\n                  {tags.length > 0\n                    ? tags.map((tag, index) => {\n                        return (\n                          <Button key={index} variant=\"contained\">\n                            #{tag}\n                          </Button>\n                        );\n                      })\n                    : null}\n                </div>\n              </div>\n              <div className=\"postPrice\">\n                <h2 className=\"roboto\">Price: ${props.price}</h2>\n                {localStorage.getItem('userLoggedIn') ? (\n                  parseInt(localStorage.getItem('userID')) !==\n                  props.uploader ? (\n                    addedToCart ? (\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={handleBuyButton}\n                      >\n                        Added to Cart\n                      </Button>\n                    ) : (\n                      <Button variant=\"contained\" onClick={handleBuyButton}>\n                        Add to Cart\n                      </Button>\n                    )\n                  ) : null\n                ) : null}\n              </div>\n              <div className=\"postComments\">\n                <h2 className=\"roboto\">Comments:</h2>\n                <Comments\n                  image_id={props.imageID}\n                  comments_list={comments}\n                  updateComments={updateComments}\n                  uploader_id={props.uploader}\n                />\n              </div>\n            </div>\n          </div>\n\n          <div onClick={() => setBookmarkModalIsOpen(false)}>\n            {bookmarkModalIsOpen ? (\n              <BookmarkModal\n                openModal={true}\n                setOpenModal={setBookmarkModalIsOpen}\n                photoId={props.imageID}\n              ></BookmarkModal>\n            ) : null}\n          </div>\n        </div>\n      </React.Fragment>,\n\n      document.getElementById('postPortal')\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}