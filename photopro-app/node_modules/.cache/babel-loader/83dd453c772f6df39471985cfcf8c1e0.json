{"ast":null,"code":"var _jsxFileName = \"/home/cristian/Documents/projects/COMP3900_PhotoPro/capstone-project-comp3900-f11a-2mjec/photopro-app/src/components/comments/comment/replyComments/ReplyComments.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport './ReplyComments.css';\nimport axios from 'axios';\nimport ReplyComment from './replyComment/ReplyComment';\nexport default function ReplyComments(props) {\n  const [replies, set_replies] = useState([]);\n  const [replyUpdated, updateReplies] = useState('');\n  useEffect(() => {\n    getReplies();\n  }, []);\n  useEffect(() => {\n    getReplies();\n  }, [replyUpdated]);\n\n  const getReplies = () => {\n    axios({\n      method: 'GET',\n      url: 'http://localhost:5000/get_comments_to_comment',\n      params: {\n        comment_id: props.comment_id,\n        batch_size: 10\n      }\n    }).then(response => {\n      if (response.data.result) {\n        console.log(response.data.result);\n        set_replies(response.data.result);\n      }\n    });\n  };\n\n  const replies_components = replies.map(reply => {\n    console.log('heree');\n    return /*#__PURE__*/React.createElement(ReplyComment, {\n      replies_info: reply,\n      updateReplies: updateReplies,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 12\n      }\n    });\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"reply_comments\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, replies_components));\n}","map":{"version":3,"sources":["/home/cristian/Documents/projects/COMP3900_PhotoPro/capstone-project-comp3900-f11a-2mjec/photopro-app/src/components/comments/comment/replyComments/ReplyComments.jsx"],"names":["React","useState","useEffect","axios","ReplyComment","ReplyComments","props","replies","set_replies","replyUpdated","updateReplies","getReplies","method","url","params","comment_id","batch_size","then","response","data","result","console","log","replies_components","map","reply"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,qBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AAEA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC3C,QAAM,CAACC,OAAD,EAAUC,WAAV,IAAyBP,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAACQ,YAAD,EAAeC,aAAf,IAAgCT,QAAQ,CAAC,EAAD,CAA9C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;AAIAT,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,UAAU;AACX,GAFQ,EAEN,CAACF,YAAD,CAFM,CAAT;;AAIA,QAAME,UAAU,GAAG,MAAM;AACvBR,IAAAA,KAAK,CAAC;AACJS,MAAAA,MAAM,EAAE,KADJ;AAEJC,MAAAA,GAAG,EAAE,+CAFD;AAGJC,MAAAA,MAAM,EAAE;AACNC,QAAAA,UAAU,EAAET,KAAK,CAACS,UADZ;AAENC,QAAAA,UAAU,EAAE;AAFN;AAHJ,KAAD,CAAL,CAOGC,IAPH,CAOSC,QAAD,IAAc;AACpB,UAAIA,QAAQ,CAACC,IAAT,CAAcC,MAAlB,EAA0B;AACxBC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACC,IAAT,CAAcC,MAA1B;AACAZ,QAAAA,WAAW,CAACU,QAAQ,CAACC,IAAT,CAAcC,MAAf,CAAX;AACD;AACF,KAZD;AAaD,GAdD;;AAgBA,QAAMG,kBAAkB,GAAGhB,OAAO,CAACiB,GAAR,CAAaC,KAAD,IAAW;AAChDJ,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,wBAAO,oBAAC,YAAD;AAAc,MAAA,YAAY,EAAEG,KAA5B;AAAmC,MAAA,aAAa,EAAEf,aAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAH0B,CAA3B;AAKA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCa,kBAAjC,CADF,CADF;AAKD","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './ReplyComments.css';\nimport axios from 'axios';\nimport ReplyComment from './replyComment/ReplyComment';\n\nexport default function ReplyComments(props) {\n  const [replies, set_replies] = useState([]);\n  const [replyUpdated, updateReplies] = useState('');\n\n  useEffect(() => {\n    getReplies();\n  }, []);\n\n  useEffect(() => {\n    getReplies();\n  }, [replyUpdated]);\n\n  const getReplies = () => {\n    axios({\n      method: 'GET',\n      url: 'http://localhost:5000/get_comments_to_comment',\n      params: {\n        comment_id: props.comment_id,\n        batch_size: 10,\n      },\n    }).then((response) => {\n      if (response.data.result) {\n        console.log(response.data.result);\n        set_replies(response.data.result);\n      }\n    });\n  };\n\n  const replies_components = replies.map((reply) => {\n    console.log('heree');\n    return <ReplyComment replies_info={reply} updateReplies={updateReplies} />;\n  });\n\n  return (\n    <React.Fragment>\n      <div className=\"reply_comments\">{replies_components}</div>\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}