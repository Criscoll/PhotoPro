{"ast":null,"code":"var _jsxFileName = \"/home/cristian/Documents/projects/COMP3900_PhotoPro/capstone-project-comp3900-f11a-2mjec/photopro-app/src/components/Modals/PostModal/PhotoModal.jsx\";\nimport ReactDom from 'react-dom';\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport './PhotoModal.css';\nimport '../../../pages/PostInfo/PostInfo.css';\nimport Likes from '../../likes/Likes';\nimport Comments from '../../comments/Comments';\nimport axios from 'axios';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\nimport BookmarkModal from '../BookmarkModal/BookmarkModal';\nexport default function PhotoModal(props) {\n  const [comments, setComments] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [commentUpdated, updateComments] = useState('');\n  const [bookmarkModalIsOpen, setBookmarkModalIsOpen] = useState(false);\n  const cancelAxiosRequest = useRef();\n  const {\n    imageID\n  } = props;\n  const history = useHistory();\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchTags = id => {\n      axios({\n        method: 'GET',\n        url: 'http://localhost:5000/get_tags',\n        params: {\n          image_id: id\n        },\n        cancelToken: new axios.CancelToken(c => cancelAxiosRequest.current = c)\n      }).then(res => {\n        console.log(res);\n\n        if (res.data.result !== false && mounted) {\n          console.log(res.data.result);\n          setTags(res.data.result);\n        } else if (mounted) {\n          setTags([]);\n        }\n      });\n    };\n\n    const fetchComments = id => {\n      axios({\n        method: 'GET',\n        url: 'http://localhost:5000/get_comments_to_image',\n        params: {\n          image_id: id,\n          batch_size: 20\n        },\n        cancelToken: new axios.CancelToken(c => cancelAxiosRequest.current = c)\n      }).then(res => {\n        if (res.data.result !== false && mounted) {\n          setComments(res.data.result);\n        } else if (mounted) {\n          setComments([]);\n        }\n\n        fetchTags(id);\n      });\n    };\n\n    fetchComments(imageID);\n    return () => {\n      console.log('CLEAN UP - PostInfo');\n      cancelAxiosRequest.current();\n      mounted = false;\n    };\n  }, [commentUpdated, imageID]);\n\n  const apiAddPurchase = imageID => {\n    axios({\n      method: 'POST',\n      url: 'http://localhost:5000/add_purchase',\n      params: {\n        save_for_later: 0,\n        purchased: 0,\n        image_id: String(imageID)\n      }\n    }).then(response => {\n      if (response.data.result !== false) {\n        console.log(response);\n      }\n    });\n  };\n\n  const handleBuyButton = () => {\n    apiAddPurchase(props.imageID);\n  };\n\n  const handleBookmarkClicked = () => {\n    setBookmarkModalIsOpen(true);\n  };\n\n  if (!props.openModal) {\n    console.log('POST MODAL NOT OPEN');\n    return null;\n  } else {\n    console.log('POST MODAL OPEN');\n    return ReactDom.createPortal( /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"photo-overlay-styles\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"photo-styles\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }, \"hello\"))), document.getElementById('postPortal'));\n  }\n}","map":{"version":3,"sources":["/home/cristian/Documents/projects/COMP3900_PhotoPro/capstone-project-comp3900-f11a-2mjec/photopro-app/src/components/Modals/PostModal/PhotoModal.jsx"],"names":["ReactDom","React","useState","useEffect","useRef","useHistory","Likes","Comments","axios","Button","IconButton","BookmarkIcon","BookmarkModal","PhotoModal","props","comments","setComments","tags","setTags","commentUpdated","updateComments","bookmarkModalIsOpen","setBookmarkModalIsOpen","cancelAxiosRequest","imageID","history","mounted","fetchTags","id","method","url","params","image_id","cancelToken","CancelToken","c","current","then","res","console","log","data","result","fetchComments","batch_size","apiAddPurchase","save_for_later","purchased","String","response","handleBuyButton","handleBookmarkClicked","openModal","createPortal","document","getElementById"],"mappings":"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","sourcesContent":["import ReactDom from 'react-dom';\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport './PhotoModal.css';\nimport '../../../pages/PostInfo/PostInfo.css';\nimport Likes from '../../likes/Likes';\nimport Comments from '../../comments/Comments';\nimport axios from 'axios';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\nimport BookmarkModal from '../BookmarkModal/BookmarkModal';\n\nexport default function PhotoModal(props) {\n  const [comments, setComments] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [commentUpdated, updateComments] = useState('');\n  const [bookmarkModalIsOpen, setBookmarkModalIsOpen] = useState(false);\n  const cancelAxiosRequest = useRef();\n  const { imageID } = props;\n  const history = useHistory();\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchTags = (id) => {\n      axios({\n        method: 'GET',\n        url: 'http://localhost:5000/get_tags',\n        params: { image_id: id },\n        cancelToken: new axios.CancelToken(\n          (c) => (cancelAxiosRequest.current = c)\n        ),\n      }).then((res) => {\n        console.log(res);\n        if (res.data.result !== false && mounted) {\n          console.log(res.data.result);\n          setTags(res.data.result);\n        } else if (mounted) {\n          setTags([]);\n        }\n      });\n    };\n\n    const fetchComments = (id) => {\n      axios({\n        method: 'GET',\n        url: 'http://localhost:5000/get_comments_to_image',\n        params: { image_id: id, batch_size: 20 },\n        cancelToken: new axios.CancelToken(\n          (c) => (cancelAxiosRequest.current = c)\n        ),\n      }).then((res) => {\n        if (res.data.result !== false && mounted) {\n          setComments(res.data.result);\n        } else if (mounted) {\n          setComments([]);\n        }\n        fetchTags(id);\n      });\n    };\n    fetchComments(imageID);\n\n    return () => {\n      console.log('CLEAN UP - PostInfo');\n      cancelAxiosRequest.current();\n      mounted = false;\n    };\n  }, [commentUpdated, imageID]);\n\n  const apiAddPurchase = (imageID) => {\n    axios({\n      method: 'POST',\n      url: 'http://localhost:5000/add_purchase',\n      params: {\n        save_for_later: 0,\n        purchased: 0,\n        image_id: String(imageID),\n      },\n    }).then((response) => {\n      if (response.data.result !== false) {\n        console.log(response);\n      }\n    });\n  };\n\n  const handleBuyButton = () => {\n    apiAddPurchase(props.imageID);\n  };\n\n  const handleBookmarkClicked = () => {\n    setBookmarkModalIsOpen(true);\n  };\n\n  if (!props.openModal) {\n    console.log('POST MODAL NOT OPEN');\n    return null;\n  } else {\n    console.log('POST MODAL OPEN');\n    return ReactDom.createPortal(\n      <React.Fragment>\n        <div className=\"photo-overlay-styles\" />\n        <div className=\"photo-styles\">\n          <h1>hello</h1>\n        </div>\n      </React.Fragment>,\n\n      document.getElementById('postPortal')\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}