{"ast":null,"code":"var _jsxFileName = \"/home/cristian/Documents/projects/COMP3900_PhotoPro/capstone-project-comp3900-f11a-2mjec/photopro-app/src/components/likes/Likes.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport './Likes.css';\nimport axios from 'axios';\nimport IconButton from '@material-ui/core/IconButton';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles({\n  root: {\n    width: '2rem',\n    height: '2rem'\n  },\n  liked: {\n    color: 'rgba(255, 255, 255, 1)',\n    backgroundColor: 'rgba(213, 48, 48, 1)'\n  },\n  unliked: {}\n});\n\nfunction Likes(props) {\n  const [num_likes, set_num_likes] = useState();\n  const [postLiked, setPostLiked] = useState(false);\n  const classes = useStyles();\n  const {\n    image_id: imageID\n  } = props;\n  let userID = localStorage.getItem('userID');\n  axios({\n    method: 'GET',\n    url: 'http://localhost:5000/get_num_likes_of_image',\n    params: {\n      image_id: imageID\n    }\n  }).then(response => {\n    console.log(response);\n\n    if (response.data.result !== false) {\n      set_num_likes(response.data.result);\n    } else {\n      set_num_likes(0);\n    }\n  });\n  useEffect(() => {\n    props.setNumLikes(num_likes);\n  }, [num_likes]);\n  useEffect(() => {\n    const checkIfLiked = () => {\n      console.log(`checking if liked for image ${imageID}`);\n      axios({\n        method: 'GET',\n        url: 'http://localhost:5000/check_if_user_liked_photo',\n        params: {\n          image_id: imageID\n        }\n      }).then(response => {\n        console.log(response);\n\n        if (response.data.result) {\n          setPostLiked(true);\n        } else {\n          setPostLiked(false);\n        }\n      });\n    };\n\n    checkIfLiked();\n  }, [userID, imageID]);\n\n  const handleLikeClicked = () => {\n    if (userID != null) {\n      if (!postLiked) {\n        post_likes();\n      } else {\n        delete_likes();\n      }\n    }\n  };\n\n  const sendLikeNotification = () => {\n    axios({\n      url: 'http://localhost:5000/send_notification',\n      params: {\n        uploader_id: props.uploader_id,\n        notification: 'like',\n        image_id: imageID\n      }\n    }).then(response => {\n      console.log(response);\n    });\n  };\n\n  const post_likes = () => {\n    const updateLikeRecommendation = () => {\n      axios({\n        method: 'GET',\n        url: 'http://localhost:5000/update_likes_recommendation',\n        params: {\n          image_id: imageID\n        }\n      }).then(res => {\n        console.log(res);\n      });\n    };\n\n    axios({\n      method: 'GET',\n      url: 'http://localhost:5000/post_like_to_image',\n      params: {\n        image_id: imageID\n      }\n    }).then(response => {\n      console.log(response);\n\n      if (response.data.result) {\n        set_num_likes(prevState => parseInt(prevState) + 1);\n        setPostLiked(true);\n        sendLikeNotification();\n        updateLikeRecommendation();\n      }\n    });\n  };\n\n  const delete_likes = () => {\n    axios({\n      method: 'POST',\n      url: 'http://localhost:5000/delete_like_from_image',\n      params: {\n        image_id: imageID\n      }\n    }).then(response => {\n      if (response.data.result) {\n        set_num_likes(prevState => parseInt(prevState) - 1);\n        setPostLiked(false);\n      }\n\n      return response.data.result;\n    });\n  };\n\n  let buttonClass;\n\n  if (postLiked) {\n    buttonClass = classes.liked;\n  } else {\n    buttonClass = classes.unliked;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"like\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    classes: {\n      root: `${classes.root} ${buttonClass}`\n    },\n    onClick: handleLikeClicked,\n    disabled: localStorage.getItem('userLoggedIn') && localStorage.getItem('userID') !== props.uploader_id ? false : true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FavoriteIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }, num_likes)));\n}\n\nexport default Likes;","map":{"version":3,"sources":["/home/cristian/Documents/projects/COMP3900_PhotoPro/capstone-project-comp3900-f11a-2mjec/photopro-app/src/components/likes/Likes.jsx"],"names":["React","useState","useEffect","axios","IconButton","FavoriteIcon","makeStyles","useStyles","root","width","height","liked","color","backgroundColor","unliked","Likes","props","num_likes","set_num_likes","postLiked","setPostLiked","classes","image_id","imageID","userID","localStorage","getItem","method","url","params","then","response","console","log","data","result","setNumLikes","checkIfLiked","handleLikeClicked","post_likes","delete_likes","sendLikeNotification","uploader_id","notification","updateLikeRecommendation","res","prevState","parseInt","buttonClass","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Likes.css';\nimport axios from 'axios';\nimport IconButton from '@material-ui/core/IconButton';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  root: {\n    width: '2rem',\n    height: '2rem',\n  },\n  liked: {\n    color: 'rgba(255, 255, 255, 1)',\n    backgroundColor: 'rgba(213, 48, 48, 1)',\n  },\n\n  unliked: {},\n});\n\nfunction Likes(props) {\n  const [num_likes, set_num_likes] = useState();\n  const [postLiked, setPostLiked] = useState(false);\n  const classes = useStyles();\n\n  const { image_id: imageID } = props;\n  let userID = localStorage.getItem('userID');\n\n  axios({\n    method: 'GET',\n    url: 'http://localhost:5000/get_num_likes_of_image',\n    params: { image_id: imageID },\n  }).then((response) => {\n    console.log(response);\n    if (response.data.result !== false) {\n      set_num_likes(response.data.result);\n    } else {\n      set_num_likes(0);\n    }\n  });\n\n  useEffect(() => {\n    props.setNumLikes(num_likes);\n  }, [num_likes]);\n\n  useEffect(() => {\n    const checkIfLiked = () => {\n      console.log(`checking if liked for image ${imageID}`);\n      axios({\n        method: 'GET',\n        url: 'http://localhost:5000/check_if_user_liked_photo',\n        params: { image_id: imageID },\n      }).then((response) => {\n        console.log(response);\n        if (response.data.result) {\n          setPostLiked(true);\n        } else {\n          setPostLiked(false);\n        }\n      });\n    };\n    checkIfLiked();\n  }, [userID, imageID]);\n\n  const handleLikeClicked = () => {\n    if (userID != null) {\n      if (!postLiked) {\n        post_likes();\n      } else {\n        delete_likes();\n      }\n    }\n  };\n\n  const sendLikeNotification = () => {\n    axios({\n      url: 'http://localhost:5000/send_notification',\n      params: {\n        uploader_id: props.uploader_id,\n        notification: 'like',\n        image_id: imageID,\n      },\n    }).then((response) => {\n      console.log(response);\n    });\n  };\n\n  const post_likes = () => {\n    const updateLikeRecommendation = () => {\n      axios({\n        method: 'GET',\n        url: 'http://localhost:5000/update_likes_recommendation',\n        params: { image_id: imageID },\n      }).then((res) => {\n        console.log(res);\n      });\n    };\n\n    axios({\n      method: 'GET',\n      url: 'http://localhost:5000/post_like_to_image',\n      params: { image_id: imageID },\n    }).then((response) => {\n      console.log(response);\n      if (response.data.result) {\n        set_num_likes((prevState) => parseInt(prevState) + 1);\n        setPostLiked(true);\n        sendLikeNotification();\n        updateLikeRecommendation();\n      }\n    });\n  };\n\n  const delete_likes = () => {\n    axios({\n      method: 'POST',\n      url: 'http://localhost:5000/delete_like_from_image',\n      params: { image_id: imageID },\n    }).then((response) => {\n      if (response.data.result) {\n        set_num_likes((prevState) => parseInt(prevState) - 1);\n        setPostLiked(false);\n      }\n      return response.data.result;\n    });\n  };\n\n  let buttonClass;\n  if (postLiked) {\n    buttonClass = classes.liked;\n  } else {\n    buttonClass = classes.unliked;\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"like\">\n        <div style={{ textAlign: 'center' }}>\n          <IconButton\n            classes={{ root: `${classes.root} ${buttonClass}` }}\n            onClick={handleLikeClicked}\n            disabled={\n              localStorage.getItem('userLoggedIn') &&\n              localStorage.getItem('userID') !== props.uploader_id\n                ? false\n                : true\n            }\n          >\n            <FavoriteIcon />\n          </IconButton>\n        </div>\n\n        <p>{num_likes}</p>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default Likes;\n"]},"metadata":{},"sourceType":"module"}