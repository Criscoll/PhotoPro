{"ast":null,"code":"var _jsxFileName = \"/home/cristian/Documents/projects/COMP3900_PhotoPro/capstone-project-comp3900-f11a-2mjec/photopro-app/src/pages/UploadPhotoPage/CapturePhotoPage.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport ReactDom from 'react-dom';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport './CapturePhotoPage.css';\nimport TitleField from './Textfields/TitleField';\nimport CaptionField from './Textfields/CaptionField';\nimport TagsField from './Textfields/TagsField';\nimport PriceField from './Textfields/PriceField';\nimport ImageUploader from 'react-images-upload';\nexport default function CapturePhotoPage(props) {\n  const [img, setImg] = useState();\n  const [pictures, setPictures] = useState([]);\n  const [uploadButtonClicked, setUploadButtonClicked] = useState(false);\n  const [titleValidated, setTitleValidated] = useState(false);\n  const [captionValidated, setCaptionValidated] = useState(false);\n  const [priceValidated, setPriceValidated] = useState(false);\n  const [tagsValidated, setTagsValidated] = useState(false);\n  const [confirmationModalOpen, setConfirmationModalOpen] = useState(false);\n  const history = useHistory();\n\n  const onDrop = (pictureFiles, pictureDataURLs) => {\n    setPictures(pictures.concat(pictureFiles));\n    setImg(pictureDataURLs[0]);\n  };\n\n  useEffect(() => {\n    const attemptPost = () => {\n      const form_data = new FormData();\n      form_data.append('image', img);\n      form_data.append('caption', captionValidated[1]);\n      form_data.append('title', titleValidated[1]);\n      form_data.append('price', priceValidated[1]);\n      form_data.append('tags', tagsValidated[1]);\n      const response = axios.post('http://localhost:5000/post', form_data);\n      console.log(response);\n      return response;\n    };\n\n    if (titleValidated[0] && captionValidated[0] && priceValidated[0] && tagsValidated[0]) {\n      const post = attemptPost();\n      post.then(response => {\n        console.log(response);\n\n        if (response.data.result !== false) {\n          setConfirmationModalOpen(true);\n        }\n      });\n    }\n  }, [titleValidated, captionValidated, priceValidated, tagsValidated]);\n\n  const formSubmit = event => {\n    setUploadButtonClicked(!uploadButtonClicked);\n  }; // function validate_title() {\n  //   return title.length > 0 && title.length < 50;\n  // }\n  // function validate_caption() {\n  //   return caption.length > 0 && caption.length < 50;\n  // }\n  // function validate_price() {\n  //   return parseInt(price) > 0 && price.length > 0;\n  // }\n  // function validate_tags() {\n  //   return tags.length > 0 && tags.length < 100;\n  // }\n\n\n  const handleCancelButton = () => {};\n\n  return ReactDom.createPortal( /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid-container-editpost\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid-item-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ImageUploader, {\n    withIcon: true,\n    buttonText: \"Choose image\",\n    onChange: onDrop,\n    imgExtension: ['.jpg', '.png'],\n    maxFileSize: 5242880,\n    withPreview: true,\n    singleImage: true,\n    withLabel: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"edit-post-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TitleField, {\n    uploadButtonClicked: uploadButtonClicked,\n    setTitleValidated: setTitleValidated,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CaptionField, {\n    uploadButtonClicked: uploadButtonClicked,\n    setCaptionValidated: setCaptionValidated,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TagsField, {\n    uploadButtonClicked: uploadButtonClicked,\n    setTagsValidated: setTagsValidated,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(PriceField, {\n    uploadButtonClicked: uploadButtonClicked,\n    setPriceValidated: setPriceValidated,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    onClick: formSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, \"SAVE\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    onClick: handleCancelButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, \"Cancel\")))), document.getElementById('editPostPortal'));\n}","map":{"version":3,"sources":["/home/cristian/Documents/projects/COMP3900_PhotoPro/capstone-project-comp3900-f11a-2mjec/photopro-app/src/pages/UploadPhotoPage/CapturePhotoPage.jsx"],"names":["React","useState","useEffect","ReactDom","Button","axios","useHistory","TitleField","CaptionField","TagsField","PriceField","ImageUploader","CapturePhotoPage","props","img","setImg","pictures","setPictures","uploadButtonClicked","setUploadButtonClicked","titleValidated","setTitleValidated","captionValidated","setCaptionValidated","priceValidated","setPriceValidated","tagsValidated","setTagsValidated","confirmationModalOpen","setConfirmationModalOpen","history","onDrop","pictureFiles","pictureDataURLs","concat","attemptPost","form_data","FormData","append","response","post","console","log","then","data","result","formSubmit","event","handleCancelButton","createPortal","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactDom from 'react-dom';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport './CapturePhotoPage.css';\n\nimport TitleField from './Textfields/TitleField';\nimport CaptionField from './Textfields/CaptionField';\nimport TagsField from './Textfields/TagsField';\nimport PriceField from './Textfields/PriceField';\nimport ImageUploader from 'react-images-upload';\n\nexport default function CapturePhotoPage(props) {\n  const [img, setImg] = useState();\n  const [pictures, setPictures] = useState([]);\n  const [uploadButtonClicked, setUploadButtonClicked] = useState(false);\n  const [titleValidated, setTitleValidated] = useState(false);\n  const [captionValidated, setCaptionValidated] = useState(false);\n  const [priceValidated, setPriceValidated] = useState(false);\n  const [tagsValidated, setTagsValidated] = useState(false);\n  const [confirmationModalOpen, setConfirmationModalOpen] = useState(false);\n\n  const history = useHistory();\n\n  const onDrop = (pictureFiles, pictureDataURLs) => {\n    setPictures(pictures.concat(pictureFiles));\n    setImg(pictureDataURLs[0]);\n  };\n\n  useEffect(() => {\n    const attemptPost = () => {\n      const form_data = new FormData();\n      form_data.append('image', img);\n      form_data.append('caption', captionValidated[1]);\n      form_data.append('title', titleValidated[1]);\n      form_data.append('price', priceValidated[1]);\n      form_data.append('tags', tagsValidated[1]);\n\n      const response = axios.post('http://localhost:5000/post', form_data);\n      console.log(response);\n      return response;\n    };\n\n    if (\n      titleValidated[0] &&\n      captionValidated[0] &&\n      priceValidated[0] &&\n      tagsValidated[0]\n    ) {\n      const post = attemptPost();\n      post.then((response) => {\n        console.log(response);\n        if (response.data.result !== false) {\n          setConfirmationModalOpen(true);\n        }\n      });\n    }\n  }, [titleValidated, captionValidated, priceValidated, tagsValidated]);\n\n  const formSubmit = (event) => {\n    setUploadButtonClicked(!uploadButtonClicked);\n  };\n\n  // function validate_title() {\n  //   return title.length > 0 && title.length < 50;\n  // }\n  // function validate_caption() {\n  //   return caption.length > 0 && caption.length < 50;\n  // }\n  // function validate_price() {\n  //   return parseInt(price) > 0 && price.length > 0;\n  // }\n  // function validate_tags() {\n  //   return tags.length > 0 && tags.length < 100;\n  // }\n\n  const handleCancelButton = () => {};\n\n  return ReactDom.createPortal(\n    <React.Fragment>\n      <div className=\"grid-container-editpost\">\n        <div className=\"grid-item-image\">\n          <ImageUploader\n            withIcon={true}\n            buttonText=\"Choose image\"\n            onChange={onDrop}\n            imgExtension={['.jpg', '.png']}\n            maxFileSize={5242880}\n            withPreview={true}\n            singleImage={true}\n            withLabel={true}\n          />\n        </div>\n        <div className=\"edit-post-details\">\n          <TitleField\n            uploadButtonClicked={uploadButtonClicked}\n            setTitleValidated={setTitleValidated}\n          />\n          <CaptionField\n            uploadButtonClicked={uploadButtonClicked}\n            setCaptionValidated={setCaptionValidated}\n          />\n          <TagsField\n            uploadButtonClicked={uploadButtonClicked}\n            setTagsValidated={setTagsValidated}\n          />\n          <PriceField\n            uploadButtonClicked={uploadButtonClicked}\n            setPriceValidated={setPriceValidated}\n          />\n\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"large\"\n            onClick={formSubmit}\n          >\n            SAVE\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"large\"\n            onClick={handleCancelButton}\n          >\n            Cancel\n          </Button>\n        </div>\n      </div>\n    </React.Fragment>,\n    document.getElementById('editPostPortal')\n  );\n}\n"]},"metadata":{},"sourceType":"module"}