{"ast":null,"code":"var _jsxFileName = \"/home/cristian/Documents/projects/COMP3900_PhotoPro/capstone-project-comp3900-f11a-2mjec/photopro-app/src/components/feed/feed.jsx\";\nimport React, { useState } from 'react';\nimport './feed.css';\nimport axios from 'axios';\nimport ImageCard from './ImageCard/ImageCard';\nimport BookmarkModal from '../modal/BookmarkModal';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { ImageSearch } from '@material-ui/icons';\n\nconst fetchImages = (term, setImgs) => {\n  axios({\n    method: 'GET',\n    url: 'http://localhost:5000/discovery',\n    params: {\n      query: term,\n      batch_size: 20\n    } //user_id: 1\n\n  }).then(res => {\n    if (res.data.result != null) {\n      setImgs(prevImgs => {\n        return [...prevImgs, ...res.data.result];\n      }); // setImgs(imgs.concat(res.data.result));\n    } else {\n      setImgs(prevImgs => {\n        return [...prevImgs];\n      });\n    }\n  });\n};\n\nconst Feed = props => {\n  const [imgs, setImgs] = useState([]);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [photoIdBookmarked, setPhotoIdBookmarked] = useState(0);\n  console.log(`LENGTH = ${imgs.length}`);\n  const images = imgs.map(img => {\n    return /*#__PURE__*/React.createElement(ImageCard, {\n      key: img.id,\n      image: img,\n      openBookmarkModal: modalIsOpen,\n      setOpenBookmarkModal: setModalIsOpen,\n      setPhotoId: setPhotoIdBookmarked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    });\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"Found Images: \", imgs.length), /*#__PURE__*/React.createElement(InfiniteScroll, {\n    dataLength: imgs.length,\n    next: fetchImages(props.query, setImgs),\n    hasMore: false,\n    loader: 'Loading...',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"image-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, images)), /*#__PURE__*/React.createElement(BookmarkModal, {\n    openModal: modalIsOpen,\n    onCloseModal: () => setModalIsOpen(false),\n    photoId: photoIdBookmarked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Feed;","map":{"version":3,"sources":["/home/cristian/Documents/projects/COMP3900_PhotoPro/capstone-project-comp3900-f11a-2mjec/photopro-app/src/components/feed/feed.jsx"],"names":["React","useState","axios","ImageCard","BookmarkModal","InfiniteScroll","ImageSearch","fetchImages","term","setImgs","method","url","params","query","batch_size","then","res","data","result","prevImgs","Feed","props","imgs","modalIsOpen","setModalIsOpen","photoIdBookmarked","setPhotoIdBookmarked","console","log","length","images","map","img","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,YAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,SAASC,WAAT,QAA4B,oBAA5B;;AAEA,MAAMC,WAAW,GAAG,CAACC,IAAD,EAAOC,OAAP,KAAmB;AACrCP,EAAAA,KAAK,CAAC;AACJQ,IAAAA,MAAM,EAAE,KADJ;AAEJC,IAAAA,GAAG,EAAE,iCAFD;AAGJC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,KAAK,EAAEL,IAAT;AAAeM,MAAAA,UAAU,EAAE;AAA3B,KAHJ,CAGqC;;AAHrC,GAAD,CAAL,CAIGC,IAJH,CAISC,GAAD,IAAS;AACf,QAAIA,GAAG,CAACC,IAAJ,CAASC,MAAT,IAAmB,IAAvB,EAA6B;AAC3BT,MAAAA,OAAO,CAAEU,QAAD,IAAc;AACpB,eAAO,CAAC,GAAGA,QAAJ,EAAc,GAAGH,GAAG,CAACC,IAAJ,CAASC,MAA1B,CAAP;AACD,OAFM,CAAP,CAD2B,CAI3B;AACD,KALD,MAKO;AACLT,MAAAA,OAAO,CAAEU,QAAD,IAAc;AACpB,eAAO,CAAC,GAAGA,QAAJ,CAAP;AACD,OAFM,CAAP;AAGD;AACF,GAfD;AAgBD,CAjBD;;AAmBA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACtB,QAAM,CAACC,IAAD,EAAOb,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACsB,WAAD,EAAcC,cAAd,IAAgCvB,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACwB,iBAAD,EAAoBC,oBAApB,IAA4CzB,QAAQ,CAAC,CAAD,CAA1D;AAEA0B,EAAAA,OAAO,CAACC,GAAR,CAAa,YAAWN,IAAI,CAACO,MAAO,EAApC;AAEA,QAAMC,MAAM,GAAGR,IAAI,CAACS,GAAL,CAAUC,GAAD,IAAS;AAC/B,wBACE,oBAAC,SAAD;AACE,MAAA,GAAG,EAAEA,GAAG,CAACC,EADX;AAEE,MAAA,KAAK,EAAED,GAFT;AAGE,MAAA,iBAAiB,EAAET,WAHrB;AAIE,MAAA,oBAAoB,EAAEC,cAJxB;AAKE,MAAA,UAAU,EAAEE,oBALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AASD,GAVc,CAAf;AAYA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAmBJ,IAAI,CAACO,MAAxB,CADF,eAEE,oBAAC,cAAD;AACE,IAAA,UAAU,EAAEP,IAAI,CAACO,MADnB;AAEE,IAAA,IAAI,EAAEtB,WAAW,CAACc,KAAK,CAACR,KAAP,EAAcJ,OAAd,CAFnB;AAGE,IAAA,OAAO,EAAE,KAHX;AAIE,IAAA,MAAM,EAAE,YAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BqB,MAA7B,CANF,CAFF,eAUE,oBAAC,aAAD;AACE,IAAA,SAAS,EAAEP,WADb;AAEE,IAAA,YAAY,EAAE,MAAMC,cAAc,CAAC,KAAD,CAFpC;AAGE,IAAA,OAAO,EAAEC,iBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF;AAkBD,CArCD;;AAuCA,eAAeL,IAAf","sourcesContent":["import React, { useState } from 'react';\nimport './feed.css';\nimport axios from 'axios';\nimport ImageCard from './ImageCard/ImageCard';\nimport BookmarkModal from '../modal/BookmarkModal';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { ImageSearch } from '@material-ui/icons';\n\nconst fetchImages = (term, setImgs) => {\n  axios({\n    method: 'GET',\n    url: 'http://localhost:5000/discovery',\n    params: { query: term, batch_size: 20 }, //user_id: 1\n  }).then((res) => {\n    if (res.data.result != null) {\n      setImgs((prevImgs) => {\n        return [...prevImgs, ...res.data.result];\n      });\n      // setImgs(imgs.concat(res.data.result));\n    } else {\n      setImgs((prevImgs) => {\n        return [...prevImgs];\n      });\n    }\n  });\n};\n\nconst Feed = (props) => {\n  const [imgs, setImgs] = useState([]);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [photoIdBookmarked, setPhotoIdBookmarked] = useState(0);\n\n  console.log(`LENGTH = ${imgs.length}`);\n\n  const images = imgs.map((img) => {\n    return (\n      <ImageCard\n        key={img.id}\n        image={img}\n        openBookmarkModal={modalIsOpen}\n        setOpenBookmarkModal={setModalIsOpen}\n        setPhotoId={setPhotoIdBookmarked}\n      />\n    );\n  });\n\n  return (\n    <React.Fragment>\n      <h2>Found Images: {imgs.length}</h2>\n      <InfiniteScroll\n        dataLength={imgs.length}\n        next={fetchImages(props.query, setImgs)}\n        hasMore={false}\n        loader={'Loading...'}\n      >\n        <div className=\"image-list\">{images}</div>\n      </InfiniteScroll>\n      <BookmarkModal\n        openModal={modalIsOpen}\n        onCloseModal={() => setModalIsOpen(false)}\n        photoId={photoIdBookmarked}\n      ></BookmarkModal>\n    </React.Fragment>\n  );\n};\n\nexport default Feed;\n"]},"metadata":{},"sourceType":"module"}