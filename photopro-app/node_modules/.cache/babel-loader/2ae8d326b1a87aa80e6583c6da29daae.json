{"ast":null,"code":"var _jsxFileName = \"/home/mimi/Desktop/COMP3900/capstone-project-comp3900-f11a-2mjec/photopro-app/src/pages/PostInfo/PostInfo.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./PostInfo.css\";\nimport Toolbar from \"../../components/toolbar/toolbar\";\nimport Likes from \"../../components/likes/Likes\";\nimport Comments from \"../../components/comments/Comments\";\nimport axios from \"axios\";\n\nconst PostInfo = props => {\n  const [comments, setComments] = useState([]);\n  const [commentUpdated, updateComments] = useState(\"\"); //const [replyUpdated, setReplyUpdated] = useState(\"\");\n\n  console.log(`NUMBER OF LIKES IS ${props.location.state.num_likes}`);\n  console.log(props);\n  useEffect(() => {\n    fetchComments(props.location.state.id);\n    console.log(\"update comment called\");\n  }, [commentUpdated]);\n\n  const fetchComments = id => {\n    axios({\n      method: \"GET\",\n      url: \"http://localhost:5000/get_comments_to_image\",\n      params: {\n        image_id: id,\n        batch_size: 20\n      }\n    }).then(res => {\n      // console.log(res);\n      // console.log(`in fetch comments with result = ${res.data.result}`);\n      if (res.data.result != false) {\n        // console.log('result was not false');\n        setComments(res.data.result);\n      } else {\n        setComments([]);\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"postWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"postInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \"@\", props.location.state.uploader), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"Follow\"), /*#__PURE__*/React.createElement(Likes, {\n    num_likes: props.location.state.num_likes,\n    image_id: props.location.state.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn bookmark-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    width: \"25\",\n    height: \"25\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17 3H7c-1.1 0-1.99.9-1.99 2L5 21l7-3 7 3V5c0-1.1-.9-2-2-2z\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"postImage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: `data:image/jpg;base64,${props.location.state.url}`,\n    alt: props.location.state.caption,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"recImages-nested\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"roboto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, \" Related Photos:\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"recImage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"recImage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"recImage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"postFeed-nested\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"postTags\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"roboto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, props.location.state.caption), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, \"Tags:\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"postPrice\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"roboto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, \"Price: $\", props.location.state.price), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, \"Add to Cart\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"postComments\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"roboto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, \"Comments:\"), /*#__PURE__*/React.createElement(Comments, {\n    image_id: props.location.state.id,\n    comments_list: comments,\n    updateComments: updateComments //updateReplies={setReplyUpdated}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default PostInfo;","map":{"version":3,"sources":["/home/mimi/Desktop/COMP3900/capstone-project-comp3900-f11a-2mjec/photopro-app/src/pages/PostInfo/PostInfo.jsx"],"names":["React","useState","useEffect","Toolbar","Likes","Comments","axios","PostInfo","props","comments","setComments","commentUpdated","updateComments","console","log","location","state","num_likes","fetchComments","id","method","url","params","image_id","batch_size","then","res","data","result","uploader","caption","price"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,gBAAP;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,cAAD,EAAiBC,cAAjB,IAAmCX,QAAQ,CAAC,EAAD,CAAjD,CAF0B,CAG1B;;AACAY,EAAAA,OAAO,CAACC,GAAR,CAAa,sBAAqBN,KAAK,CAACO,QAAN,CAAeC,KAAf,CAAqBC,SAAU,EAAjE;AAEAJ,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,aAAa,CAACV,KAAK,CAACO,QAAN,CAAeC,KAAf,CAAqBG,EAAtB,CAAb;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACD,GAHQ,EAGN,CAACH,cAAD,CAHM,CAAT;;AAKA,QAAMO,aAAa,GAAIC,EAAD,IAAQ;AAC5Bb,IAAAA,KAAK,CAAC;AACJc,MAAAA,MAAM,EAAE,KADJ;AAEJC,MAAAA,GAAG,EAAE,6CAFD;AAGJC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEJ,EAAZ;AAAgBK,QAAAA,UAAU,EAAE;AAA5B;AAHJ,KAAD,CAAL,CAIGC,IAJH,CAISC,GAAD,IAAS;AACf;AACA;AACA,UAAIA,GAAG,CAACC,IAAJ,CAASC,MAAT,IAAmB,KAAvB,EAA8B;AAC5B;AACAlB,QAAAA,WAAW,CAACgB,GAAG,CAACC,IAAJ,CAASC,MAAV,CAAX;AACD,OAHD,MAGO;AACLlB,QAAAA,WAAW,CAAC,EAAD,CAAX;AACD;AACF,KAbD;AAcD,GAfD;;AAiBA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAKF,KAAK,CAACO,QAAN,CAAeC,KAAf,CAAqBa,QAA1B,CADF,eAEE;AAAQ,IAAA,SAAS,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,oBAAC,KAAD;AACE,IAAA,SAAS,EAAErB,KAAK,CAACO,QAAN,CAAeC,KAAf,CAAqBC,SADlC;AAEE,IAAA,QAAQ,EAAET,KAAK,CAACO,QAAN,CAAeC,KAAf,CAAqBG,EAFjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAOE;AAAQ,IAAA,SAAS,EAAC,kBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,KAAK,EAAC,IAAX;AAAgB,IAAA,MAAM,EAAC,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,CAAC,EAAC,6DAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAPF,CADF,CADF,eAmBE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,GAAG,EAAG,yBAAwBX,KAAK,CAACO,QAAN,CAAeC,KAAf,CAAqBK,GAAI,EADzD;AAEE,IAAA,GAAG,EAAEb,KAAK,CAACO,QAAN,CAAeC,KAAf,CAAqBc,OAF5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAKE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CALF,CAnBF,eA+BE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBtB,KAAK,CAACO,QAAN,CAAeC,KAAf,CAAqBc,OAA7C,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,CADF,eAKE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAgCtB,KAAK,CAACO,QAAN,CAAeC,KAAf,CAAqBe,KAArD,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,CALF,eASE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAGE,oBAAC,QAAD;AACE,IAAA,QAAQ,EAAEvB,KAAK,CAACO,QAAN,CAAeC,KAAf,CAAqBG,EADjC;AAEE,IAAA,aAAa,EAAEV,QAFjB;AAGE,IAAA,cAAc,EAAEG,cAHlB,CAIE;AAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CATF,CA/BF,CAFF,CADF;AAyDD,CAvFD;;AAyFA,eAAeL,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./PostInfo.css\";\nimport Toolbar from \"../../components/toolbar/toolbar\";\nimport Likes from \"../../components/likes/Likes\";\nimport Comments from \"../../components/comments/Comments\";\nimport axios from \"axios\";\n\nconst PostInfo = (props) => {\n  const [comments, setComments] = useState([]);\n  const [commentUpdated, updateComments] = useState(\"\");\n  //const [replyUpdated, setReplyUpdated] = useState(\"\");\n  console.log(`NUMBER OF LIKES IS ${props.location.state.num_likes}`);\n\n  console.log(props);\n\n  useEffect(() => {\n    fetchComments(props.location.state.id);\n    console.log(\"update comment called\");\n  }, [commentUpdated]);\n\n  const fetchComments = (id) => {\n    axios({\n      method: \"GET\",\n      url: \"http://localhost:5000/get_comments_to_image\",\n      params: { image_id: id, batch_size: 20 },\n    }).then((res) => {\n      // console.log(res);\n      // console.log(`in fetch comments with result = ${res.data.result}`);\n      if (res.data.result != false) {\n        // console.log('result was not false');\n        setComments(res.data.result);\n      } else {\n        setComments([]);\n      }\n    });\n  };\n\n  return (\n    <React.Fragment>\n      <Toolbar />\n      <div className=\"postWrapper\">\n        <div className=\"postInfo\">\n          <div className=\"username\">\n            <p>@{props.location.state.uploader}</p>\n            <button className=\"btn\">Follow</button>\n            <Likes\n              num_likes={props.location.state.num_likes}\n              image_id={props.location.state.id}\n            />\n            <button className=\"btn bookmark-btn\">\n              <svg width=\"25\" height=\"25\">\n                <path d=\"M17 3H7c-1.1 0-1.99.9-1.99 2L5 21l7-3 7 3V5c0-1.1-.9-2-2-2z\"></path>\n              </svg>\n            </button>\n          </div>\n          {/* <div className=\"follow\"></div>\n          <div className=\"like\"></div>\n          <div className=\"bookmark\"></div> */}\n        </div>\n        <div className=\"postImage\">\n          <img\n            src={`data:image/jpg;base64,${props.location.state.url}`}\n            alt={props.location.state.caption}\n          />\n          <div className=\"recImages-nested\">\n            <h1 className=\"roboto\"> Related Photos:</h1>\n            <div className=\"recImage\"></div>\n            <div className=\"recImage\"></div>\n            <div className=\"recImage\"></div>\n          </div>\n        </div>\n        <div className=\"postFeed-nested\">\n          <div className=\"postTags\">\n            <h2 className=\"roboto\">{props.location.state.caption}</h2>\n            <h3>Tags:</h3>\n          </div>\n          <div className=\"postPrice\">\n            <h2 className=\"roboto\">Price: ${props.location.state.price}</h2>\n            <button>Add to Cart</button>\n          </div>\n          <div className=\"postComments\">\n            <h2 className=\"roboto\">Comments:</h2>\n            {/* <Comments className=\"comments\" /> */}\n            <Comments\n              image_id={props.location.state.id}\n              comments_list={comments}\n              updateComments={updateComments}\n              //updateReplies={setReplyUpdated}\n            />\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default PostInfo;\n"]},"metadata":{},"sourceType":"module"}