{"ast":null,"code":"var _jsxFileName = \"/home/cristian/Documents/projects/COMP3900_PhotoPro/capstone-project-comp3900-f11a-2mjec/photopro-app/src/components/Modals/EditPostModal/EditPostModal.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport ReactDom from 'react-dom';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport './EditPostModal.css';\nimport TitleField from './textfields/TitleField';\nimport CaptionField from './textfields/CaptionField';\nimport TagsField from './textfields/TagsField';\nimport PriceField from './textfields/PriceField';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: 'ch'\n    }\n  }\n}));\nexport default function EditPostPage(props) {\n  const [saveButtonClicked, setSaveButtonClicked] = useState(false);\n  const [titleValidated, setTitleValidated] = useState([false, props.title]);\n  const [captionValidated, setCaptionValidated] = useState([false, props.caption]);\n  const [priceValidated, setPriceValidated] = useState([false, props.price]);\n  const [tagsValidated, setTagsValidated] = useState([false, []]);\n  const [oldTags, setOldTags] = useState([]);\n  useEffect(() => {\n    axios({\n      url: 'http://localhost:5000/get_tags',\n      params: {\n        image_id: props.imageID\n      }\n    }).then(res => {\n      console.log(res);\n\n      if (res.data.result) {\n        setOldTags(res.data.result);\n      }\n    });\n  }, []); // const { match } = props;\n\n  const history = useHistory();\n  const classes = useStyles();\n\n  async function edit_post(event) {\n    // event.preventDefault();\n    var response = await axios.get('http://localhost:5000/edit_post', {\n      params: {\n        image_id: props.imageID,\n        title: titleValidated[1],\n        price: priceValidated[1],\n        caption: captionValidated[1],\n        tags: tagsValidated[1]\n      }\n    });\n    return response;\n  }\n\n  useEffect(() => {\n    console.log(titleValidated);\n    console.log(captionValidated);\n    console.log(priceValidated);\n    console.log(tagsValidated);\n    setTimeout(() => {\n      if (titleValidated[0] && captionValidated[0] && priceValidated[0] && tagsValidated[0]) {\n        console.log('APPROVED');\n        const response = edit_post();\n        response.then(res => {\n          console.log(res);\n\n          if (res.data.result) {\n            history.go(0);\n          }\n        });\n      }\n    }, 10000);\n  }, [titleValidated, captionValidated, priceValidated, tagsValidated]);\n\n  const handleSaveButton = () => {\n    setSaveButtonClicked(!saveButtonClicked);\n  };\n\n  if (!props.openModal) {\n    return null;\n  } else {\n    return ReactDom.createPortal( /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"overlayStyles\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"editPostModal\",\n      onClick: e => {\n        e.stopPropagation();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grid-container-editpost\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grid-item-image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: `data:image/jpg;base64,${props.url}`,\n      alt: props.caption,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"form\", {\n      className: classes.root,\n      noValidate: true,\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"edit-post-details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TitleField, {\n      saveButtonClicked: saveButtonClicked,\n      setTitleValidated: setTitleValidated,\n      oldTitle: props.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(CaptionField, {\n      saveButtonClicked: saveButtonClicked,\n      setCaptionValidated: setCaptionValidated,\n      oldCaption: props.caption,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TagsField, {\n      saveButtonClicked: saveButtonClicked,\n      setTagsValidated: setTagsValidated,\n      oldTags: oldTags,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(PriceField, {\n      saveButtonClicked: saveButtonClicked,\n      setPriceValidated: setPriceValidated,\n      oldPrice: props.price,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"large\",\n      onClick: handleSaveButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }, \"SAVE\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"large\",\n      onClick: () => {\n        props.setOpenModal(false);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }\n    }, \"Cancel\")))))), document.getElementById('editPostPortal'));\n  }\n}","map":{"version":3,"sources":["/home/cristian/Documents/projects/COMP3900_PhotoPro/capstone-project-comp3900-f11a-2mjec/photopro-app/src/components/Modals/EditPostModal/EditPostModal.jsx"],"names":["React","useState","useEffect","ReactDom","Button","axios","useHistory","TitleField","CaptionField","TagsField","PriceField","makeStyles","useStyles","theme","root","margin","spacing","width","EditPostPage","props","saveButtonClicked","setSaveButtonClicked","titleValidated","setTitleValidated","title","captionValidated","setCaptionValidated","caption","priceValidated","setPriceValidated","price","tagsValidated","setTagsValidated","oldTags","setOldTags","url","params","image_id","imageID","then","res","console","log","data","result","history","classes","edit_post","event","response","get","tags","setTimeout","go","handleSaveButton","openModal","createPortal","e","stopPropagation","setOpenModal","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactDom from 'react-dom';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport './EditPostModal.css';\n\nimport TitleField from './textfields/TitleField';\nimport CaptionField from './textfields/CaptionField';\nimport TagsField from './textfields/TagsField';\nimport PriceField from './textfields/PriceField';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: 'ch',\n    },\n  },\n}));\n\nexport default function EditPostPage(props) {\n  const [saveButtonClicked, setSaveButtonClicked] = useState(false);\n  const [titleValidated, setTitleValidated] = useState([false, props.title]);\n  const [captionValidated, setCaptionValidated] = useState([\n    false,\n    props.caption,\n  ]);\n  const [priceValidated, setPriceValidated] = useState([false, props.price]);\n  const [tagsValidated, setTagsValidated] = useState([false, []]);\n  const [oldTags, setOldTags] = useState([]);\n\n  useEffect(() => {\n    axios({\n      url: 'http://localhost:5000/get_tags',\n      params: { image_id: props.imageID },\n    }).then((res) => {\n      console.log(res);\n      if (res.data.result) {\n        setOldTags(res.data.result);\n      }\n    });\n  }, []);\n\n  // const { match } = props;\n  const history = useHistory();\n\n  const classes = useStyles();\n\n  async function edit_post(event) {\n    // event.preventDefault();\n\n    var response = await axios.get('http://localhost:5000/edit_post', {\n      params: {\n        image_id: props.imageID,\n        title: titleValidated[1],\n        price: priceValidated[1],\n        caption: captionValidated[1],\n        tags: tagsValidated[1],\n      },\n    });\n    return response;\n  }\n\n  useEffect(() => {\n    console.log(titleValidated);\n    console.log(captionValidated);\n    console.log(priceValidated);\n    console.log(tagsValidated);\n\n    setTimeout(() => {\n      if (\n        titleValidated[0] &&\n        captionValidated[0] &&\n        priceValidated[0] &&\n        tagsValidated[0]\n      ) {\n        console.log('APPROVED');\n        const response = edit_post();\n        response.then((res) => {\n          console.log(res);\n          if (res.data.result) {\n            history.go(0);\n          }\n        });\n      }\n    }, 10000);\n  }, [titleValidated, captionValidated, priceValidated, tagsValidated]);\n\n  const handleSaveButton = () => {\n    setSaveButtonClicked(!saveButtonClicked);\n  };\n\n  if (!props.openModal) {\n    return null;\n  } else {\n    return ReactDom.createPortal(\n      <React.Fragment>\n        <div className=\"overlayStyles\" />\n        <div\n          className=\"editPostModal\"\n          onClick={(e) => {\n            e.stopPropagation();\n          }}\n        >\n          <div className=\"grid-container-editpost\">\n            <div className=\"grid-item-image\">\n              <img\n                src={`data:image/jpg;base64,${props.url}`}\n                alt={props.caption}\n              />\n            </div>\n            <form className={classes.root} noValidate autoComplete=\"off\">\n              <div className=\"edit-post-details\">\n                <TitleField\n                  saveButtonClicked={saveButtonClicked}\n                  setTitleValidated={setTitleValidated}\n                  oldTitle={props.title}\n                />\n                <CaptionField\n                  saveButtonClicked={saveButtonClicked}\n                  setCaptionValidated={setCaptionValidated}\n                  oldCaption={props.caption}\n                />\n                <TagsField\n                  saveButtonClicked={saveButtonClicked}\n                  setTagsValidated={setTagsValidated}\n                  oldTags={oldTags}\n                />\n                <PriceField\n                  saveButtonClicked={saveButtonClicked}\n                  setPriceValidated={setPriceValidated}\n                  oldPrice={props.price}\n                />\n\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  size=\"large\"\n                  onClick={handleSaveButton}\n                >\n                  SAVE\n                </Button>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  size=\"large\"\n                  onClick={() => {\n                    props.setOpenModal(false);\n                  }}\n                >\n                  Cancel\n                </Button>\n              </div>\n            </form>\n            {/* <form className=\"grid-item-form\" onSubmit={edit_post}>\n              <FormGroup controlId=\"title\" bsSize=\"large\">\n                <div>\n                  <FormLabel>Title</FormLabel>\n                </div>\n\n                <FormControl\n                  Type=\"title\"\n                  value={title}\n                  onChange={(e) => set_title(e.target.value)}\n                  defaultValue={\"HELLLLOOOOO\"}\n                />\n              </FormGroup>\n\n              <FormGroup controlId=\"price\" bsSize=\"large\">\n                <div>\n                  <FormLabel>Price</FormLabel>\n                </div>\n\n                <FormControl\n                  Type=\"price\"\n                  value={price}\n                  onChange={(e) => set_price(e.target.value)}\n                />\n              </FormGroup>\n\n              <FormGroup controlId=\"caption\" bsSize=\"large\">\n                <div>\n                  <FormLabel>Caption</FormLabel>\n                </div>\n\n                <FormControl\n                  Type=\"caption\"\n                  value={caption}\n                  onChange={(e) => set_caption(e.target.value)}\n                />\n              </FormGroup>\n\n              <FormGroup controlId=\"tags\" bsSize=\"large\">\n                <div>\n                  <FormLabel>tags</FormLabel>\n                </div>\n\n                <FormControl\n                  Type=\"tags\"\n                  value={tags}\n                  onChange={(e) => set_tags(e.target.value)}\n                />\n              </FormGroup>\n\n              <div>\n                <Button\n                  variant=\"primary\"\n                  disabled={\n                    !validate_caption() ||\n                    !validate_title() ||\n                    !validate_price() ||\n                    !validate_tags()\n                  }\n                  type=\"submit\"\n                >\n                  Submit\n                </Button>\n              </div>\n\n              <Button\n                onClick={() => {\n                  history.push(\"/profile\");\n                }}\n              >\n                Cancel\n              </Button>\n            </form> */}\n            {/* <div className=\"grid-item-old-values\">\n              <h1>Current title: {props.title}</h1>\n              <h1>Current Caption: {props.caption}</h1>\n              <h1>Current Price: ${props.price}</h1>\n              <h1>Current Tags: ${props.tags}</h1>\n            </div> */}\n          </div>\n        </div>\n      </React.Fragment>,\n      document.getElementById('editPostPortal')\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}