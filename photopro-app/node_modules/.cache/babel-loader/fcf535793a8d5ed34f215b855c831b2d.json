{"ast":null,"code":"var _jsxFileName = \"/home/mimi/Desktop/COMP3900/project/photopro-app/src/components/ImageSquare/ImageSquare.js\";\nimport React, { Component } from \"react\";\n\nclass ImageSquare extends Component {\n  constructor(props) {\n    super(props); // CreateRef is used to access the DOM\n    // after accessing the DOM, we can get the height of each ImageSquare\n\n    this.setSpans = () => {\n      const height = this.imageRef.current.clientHeight; //const spansRows = Math.ceil(height / 150);\n\n      const spansRows = Math.ceil(height / 10);\n      this.setState({\n        spans: spansRows\n      });\n    };\n\n    this.imageRef = React.createRef();\n    this.state = {\n      spans: 0\n    };\n  }\n  /*componentDidMount() {\n    console.log(this.imageRef);\n    //console.log(this.imageRef.current.clientHeight);\n     setSpans = () => {\n      console.log(this.imageRef.current.clientHeight);\n    };\n  }*/\n\n\n  componentDidMount() {\n    this.imageRef.current.addEventListener(\"load\", this.setSpans); // console log the height of the images\n    // console.log(this.imageRef.current.clientHeight);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        gridRowEnd: `span ${this.state.spans}`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      ref: this.imageRef,\n      src: `data:image/jpg;base64,${this.props.image.img}`,\n      alt: this.props.image.caption,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default ImageSquare;","map":{"version":3,"sources":["/home/mimi/Desktop/COMP3900/project/photopro-app/src/components/ImageSquare/ImageSquare.js"],"names":["React","Component","ImageSquare","constructor","props","setSpans","height","imageRef","current","clientHeight","spansRows","Math","ceil","setState","spans","createRef","state","componentDidMount","addEventListener","render","gridRowEnd","image","img","caption"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,WAAN,SAA0BD,SAA1B,CAAoC;AAClCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN,EADiB,CAGjB;AACA;;AAJiB,SAwBnBC,QAxBmB,GAwBR,MAAM;AACf,YAAMC,MAAM,GAAG,KAAKC,QAAL,CAAcC,OAAd,CAAsBC,YAArC,CADe,CAEf;;AACA,YAAMC,SAAS,GAAGC,IAAI,CAACC,IAAL,CAAUN,MAAM,GAAG,EAAnB,CAAlB;AACA,WAAKO,QAAL,CAAc;AAAEC,QAAAA,KAAK,EAAEJ;AAAT,OAAd;AACD,KA7BkB;;AAMjB,SAAKH,QAAL,GAAgBP,KAAK,CAACe,SAAN,EAAhB;AACA,SAAKC,KAAL,GAAa;AAAEF,MAAAA,KAAK,EAAE;AAAT,KAAb;AACD;AAED;;;;;;;;;AAQAG,EAAAA,iBAAiB,GAAG;AAClB,SAAKV,QAAL,CAAcC,OAAd,CAAsBU,gBAAtB,CAAuC,MAAvC,EAA+C,KAAKb,QAApD,EADkB,CAElB;AACA;AACD;;AASDc,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAG,QAAO,KAAKJ,KAAL,CAAWF,KAAM;AAAvC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,GAAG,EAAE,KAAKP,QADZ;AAEE,MAAA,GAAG,EAAG,yBAAwB,KAAKH,KAAL,CAAWiB,KAAX,CAAiBC,GAAI,EAFrD;AAGE,MAAA,GAAG,EAAE,KAAKlB,KAAL,CAAWiB,KAAX,CAAiBE,OAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AASD;;AA1CiC;;AA6CpC,eAAerB,WAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass ImageSquare extends Component {\n  constructor(props) {\n    super(props);\n\n    // CreateRef is used to access the DOM\n    // after accessing the DOM, we can get the height of each ImageSquare\n\n    this.imageRef = React.createRef();\n    this.state = { spans: 0 };\n  }\n\n  /*componentDidMount() {\n    console.log(this.imageRef);\n    //console.log(this.imageRef.current.clientHeight);\n\n    setSpans = () => {\n      console.log(this.imageRef.current.clientHeight);\n    };\n  }*/\n  componentDidMount() {\n    this.imageRef.current.addEventListener(\"load\", this.setSpans);\n    // console log the height of the images\n    // console.log(this.imageRef.current.clientHeight);\n  }\n\n  setSpans = () => {\n    const height = this.imageRef.current.clientHeight;\n    //const spansRows = Math.ceil(height / 150);\n    const spansRows = Math.ceil(height / 10);\n    this.setState({ spans: spansRows });\n  };\n\n  render() {\n    return (\n      <div style={{ gridRowEnd: `span ${this.state.spans}` }}>\n        <img\n          ref={this.imageRef}\n          src={`data:image/jpg;base64,${this.props.image.img}`}\n          alt={this.props.image.caption}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ImageSquare;\n"]},"metadata":{},"sourceType":"module"}