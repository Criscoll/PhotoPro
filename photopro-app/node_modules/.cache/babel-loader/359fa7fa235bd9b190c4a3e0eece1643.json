{"ast":null,"code":"```\nimport React, { useState } from \"react\";\nimport \"./searchbar.css\";\nimport axios from \"axios\";\nimport Feed from \"../feed/feed\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nfunction SearchBar(props) {\n  const [imgs, setImgs] = useState([]);\n  const [searchVal, setSearchVal] = useState(\"\");\n  // const fetchImages = async function (term) {\n  //   const response = await axios.get(\"http://localhost:5000/discovery\", {\n  //     params: { query: term, batch_size: 20 }, //user_id: 1\n  //   });\n  //   console.log(response.data.result);\n  //   // getLikes(response);\n  //   console.log(response);\n  //   setImgs([...imgs, response.data.result]);\n  //   console.log(imgs);\n  //   return response;\n  // };\n  const fetchImages = (term) => {\n    axios\n      .get(\"http://localhost:5000/discovery\", {\n        params: { query: term, batch_size: 20 }, //user_id: 1\n      })\n      .then((res) => {\n        setImgs([...imgs, ...res.data.result]);\n        console.log(res);\n        console.log(imgs);\n      });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const images = fetchImages(searchVal);\n    //images.then((imageResults) => {\n    //console.log(imageResults);\n    // this means no images were found\n    //if (imageResults.data.result !== false) {\n    //setImgs(imageResults.data.result);\n    //}\n    //});\n  };\n  return (\n    <React.Fragment>\n      <form onSubmit={handleSubmit} className=\"flexContainer\">\n        <input\n          className=\"inputStyle\"\n          type=\"text\"\n          value={searchVal}\n          onChange={(event) => setSearchVal(event.target.value)}\n        />\n      </form>\n      <Feed foundImages={imgs} fetchImages={fetchImages} />\n    </React.Fragment>\n  );\n}\nexport default SearchBar;\n```;","map":{"version":3,"sources":["/home/mimi/Desktop/COMP3900/capstone-project-comp3900-f11a-2mjec/photopro-app/src/components/searchbar/searchbar.jsx"],"names":[],"mappings":"AAAC,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAyDD,EAzDF","sourcesContent":["```\nimport React, { useState } from \"react\";\nimport \"./searchbar.css\";\nimport axios from \"axios\";\nimport Feed from \"../feed/feed\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nfunction SearchBar(props) {\n  const [imgs, setImgs] = useState([]);\n  const [searchVal, setSearchVal] = useState(\"\");\n  // const fetchImages = async function (term) {\n  //   const response = await axios.get(\"http://localhost:5000/discovery\", {\n  //     params: { query: term, batch_size: 20 }, //user_id: 1\n  //   });\n  //   console.log(response.data.result);\n  //   // getLikes(response);\n  //   console.log(response);\n  //   setImgs([...imgs, response.data.result]);\n  //   console.log(imgs);\n  //   return response;\n  // };\n  const fetchImages = (term) => {\n    axios\n      .get(\"http://localhost:5000/discovery\", {\n        params: { query: term, batch_size: 20 }, //user_id: 1\n      })\n      .then((res) => {\n        setImgs([...imgs, ...res.data.result]);\n        console.log(res);\n        console.log(imgs);\n      });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const images = fetchImages(searchVal);\n    //images.then((imageResults) => {\n    //console.log(imageResults);\n    // this means no images were found\n    //if (imageResults.data.result !== false) {\n    //setImgs(imageResults.data.result);\n    //}\n    //});\n  };\n  return (\n    <React.Fragment>\n      <form onSubmit={handleSubmit} className=\"flexContainer\">\n        <input\n          className=\"inputStyle\"\n          type=\"text\"\n          value={searchVal}\n          onChange={(event) => setSearchVal(event.target.value)}\n        />\n      </form>\n      <Feed foundImages={imgs} fetchImages={fetchImages} />\n    </React.Fragment>\n  );\n}\nexport default SearchBar;\n```;\n"]},"metadata":{},"sourceType":"module"}