{"ast":null,"code":"var _jsxFileName = \"/home/mimi/Desktop/COMP3900/capstone-project-comp3900-f11a-2mjec/photopro-app/src/components/Modals/EditPostModal/EditPostModal.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport ReactDom from \"react-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./EditPostModal.css\";\nimport TitleField from \"./textfields/TitleField\";\nimport CaptionField from \"./textfields/CaptionField\";\nimport TagsField from \"./textfields/TagsField\";\nimport PriceField from \"./textfields/PriceField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: \"ch\"\n    }\n  }\n}));\nexport default function EditPostPage(props) {\n  const [caption, setCaption] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [tags, setTags] = useState(\"\");\n  const [saveButtonClicked, setSaveButtonClicked] = useState(false);\n  const [titleValidated, setTitleValidated] = useState(false);\n  const [captionValidated, setCaptionValidated] = useState(false);\n  const [priceValidated, setPriceValidated] = useState(false);\n  const [tagsValidated, setTagsValidated] = useState(false); // const { match } = props;\n\n  const history = useHistory();\n  const classes = useStyles();\n\n  async function edit_post(event) {\n    // event.preventDefault();\n    var response = await axios.get(\"http://localhost:5000/edit_post\", {\n      params: {\n        image_id: props.imageID,\n        title: title,\n        price: price,\n        caption: caption,\n        tags: tags\n      }\n    });\n    console.log(response); // if (response.data.result) {\n    //   history.goBack();\n    // }\n  }\n\n  useEffect(() => {\n    console.log(titleValidated);\n    console.log(captionValidated);\n    console.log(priceValidated);\n    console.log(tagsValidated);\n\n    if (titleValidated && captionValidated && priceValidated && tagsValidated && saveButtonClicked) {\n      console.log(\"APPROVED\");\n      edit_post();\n    }\n  }, [titleValidated, captionValidated, priceValidated, tagsValidated]);\n\n  const handleSaveButton = () => {// setSaveButtonClicked(!saveButtonClicked);\n  };\n\n  const handleCancelButton = () => {};\n\n  if (!props.openModal) {\n    return null;\n  } else {\n    return ReactDom.createPortal( /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"overlayStyles\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"editPostModal\",\n      onClick: e => {\n        e.stopPropagation();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grid-container-editpost\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grid-item-image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: `data:image/jpg;base64,${props.url}`,\n      alt: props.caption,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"form\", {\n      className: classes.root,\n      noValidate: true,\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"edit-post-details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TitleField, {\n      saveButtonClicked: saveButtonClicked,\n      setTitleValidated: setTitleValidated,\n      oldTitle: props.title,\n      setTitle: setTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(CaptionField, {\n      saveButtonClicked: saveButtonClicked,\n      setCaptionValidated: setCaptionValidated,\n      oldCaption: props.caption,\n      setCaption: setCaption,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TagsField, {\n      saveButtonClicked: saveButtonClicked,\n      setTagsValidated: setTagsValidated,\n      oldTags: \"EXAMPLE\",\n      setTags: setTags,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(PriceField, {\n      saveButtonClicked: saveButtonClicked,\n      setPriceValidated: setPriceValidated,\n      oldPrice: props.price,\n      setPrice: setPrice,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"large\",\n      onClick: handleSaveButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }, \"SAVE\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"large\",\n      onClick: handleCancelButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }, \"Cancel\")))))), document.getElementById(\"editPostPortal\"));\n  }\n}","map":{"version":3,"sources":["/home/mimi/Desktop/COMP3900/capstone-project-comp3900-f11a-2mjec/photopro-app/src/components/Modals/EditPostModal/EditPostModal.jsx"],"names":["React","useState","useEffect","ReactDom","Button","axios","useHistory","TitleField","CaptionField","TagsField","PriceField","makeStyles","useStyles","theme","root","margin","spacing","width","EditPostPage","props","caption","setCaption","title","setTitle","price","setPrice","tags","setTags","saveButtonClicked","setSaveButtonClicked","titleValidated","setTitleValidated","captionValidated","setCaptionValidated","priceValidated","setPriceValidated","tagsValidated","setTagsValidated","history","classes","edit_post","event","response","get","params","image_id","imageID","console","log","handleSaveButton","handleCancelButton","openModal","createPortal","e","stopPropagation","url","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ReactDom from \"react-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./EditPostModal.css\";\n\nimport TitleField from \"./textfields/TitleField\";\nimport CaptionField from \"./textfields/CaptionField\";\nimport TagsField from \"./textfields/TagsField\";\nimport PriceField from \"./textfields/PriceField\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: \"ch\",\n    },\n  },\n}));\n\nexport default function EditPostPage(props) {\n  const [caption, setCaption] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [tags, setTags] = useState(\"\");\n\n  const [saveButtonClicked, setSaveButtonClicked] = useState(false);\n  const [titleValidated, setTitleValidated] = useState(false);\n  const [captionValidated, setCaptionValidated] = useState(false);\n  const [priceValidated, setPriceValidated] = useState(false);\n  const [tagsValidated, setTagsValidated] = useState(false);\n\n  // const { match } = props;\n  const history = useHistory();\n\n  const classes = useStyles();\n\n  async function edit_post(event) {\n    // event.preventDefault();\n\n    var response = await axios.get(\"http://localhost:5000/edit_post\", {\n      params: {\n        image_id: props.imageID,\n        title: title,\n        price: price,\n        caption: caption,\n        tags: tags,\n      },\n    });\n    console.log(response);\n\n    // if (response.data.result) {\n    //   history.goBack();\n    // }\n  }\n\n  useEffect(() => {\n    console.log(titleValidated);\n    console.log(captionValidated);\n    console.log(priceValidated);\n    console.log(tagsValidated);\n    if (\n      titleValidated &&\n      captionValidated &&\n      priceValidated &&\n      tagsValidated &&\n      saveButtonClicked\n    ) {\n      console.log(\"APPROVED\");\n      edit_post();\n    }\n  }, [titleValidated, captionValidated, priceValidated, tagsValidated]);\n\n  const handleSaveButton = () => {\n    // setSaveButtonClicked(!saveButtonClicked);\n  };\n\n  const handleCancelButton = () => {};\n\n  if (!props.openModal) {\n    return null;\n  } else {\n    return ReactDom.createPortal(\n      <React.Fragment>\n        <div className=\"overlayStyles\" />\n        <div\n          className=\"editPostModal\"\n          onClick={(e) => {\n            e.stopPropagation();\n          }}\n        >\n          <div className=\"grid-container-editpost\">\n            <div className=\"grid-item-image\">\n              <img\n                src={`data:image/jpg;base64,${props.url}`}\n                alt={props.caption}\n              />\n            </div>\n            <form className={classes.root} noValidate autoComplete=\"off\">\n              <div className=\"edit-post-details\">\n                <TitleField\n                  saveButtonClicked={saveButtonClicked}\n                  setTitleValidated={setTitleValidated}\n                  oldTitle={props.title}\n                  setTitle={setTitle}\n                />\n                <CaptionField\n                  saveButtonClicked={saveButtonClicked}\n                  setCaptionValidated={setCaptionValidated}\n                  oldCaption={props.caption}\n                  setCaption={setCaption}\n                />\n                <TagsField\n                  saveButtonClicked={saveButtonClicked}\n                  setTagsValidated={setTagsValidated}\n                  oldTags={\"EXAMPLE\"}\n                  setTags={setTags}\n                />\n                <PriceField\n                  saveButtonClicked={saveButtonClicked}\n                  setPriceValidated={setPriceValidated}\n                  oldPrice={props.price}\n                  setPrice={setPrice}\n                />\n\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  size=\"large\"\n                  onClick={handleSaveButton}\n                >\n                  SAVE\n                </Button>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  size=\"large\"\n                  onClick={handleCancelButton}\n                >\n                  Cancel\n                </Button>\n              </div>\n            </form>\n            {/* <form className=\"grid-item-form\" onSubmit={edit_post}>\n              <FormGroup controlId=\"title\" bsSize=\"large\">\n                <div>\n                  <FormLabel>Title</FormLabel>\n                </div>\n\n                <FormControl\n                  Type=\"title\"\n                  value={title}\n                  onChange={(e) => set_title(e.target.value)}\n                  defaultValue={\"HELLLLOOOOO\"}\n                />\n              </FormGroup>\n\n              <FormGroup controlId=\"price\" bsSize=\"large\">\n                <div>\n                  <FormLabel>Price</FormLabel>\n                </div>\n\n                <FormControl\n                  Type=\"price\"\n                  value={price}\n                  onChange={(e) => set_price(e.target.value)}\n                />\n              </FormGroup>\n\n              <FormGroup controlId=\"caption\" bsSize=\"large\">\n                <div>\n                  <FormLabel>Caption</FormLabel>\n                </div>\n\n                <FormControl\n                  Type=\"caption\"\n                  value={caption}\n                  onChange={(e) => set_caption(e.target.value)}\n                />\n              </FormGroup>\n\n              <FormGroup controlId=\"tags\" bsSize=\"large\">\n                <div>\n                  <FormLabel>tags</FormLabel>\n                </div>\n\n                <FormControl\n                  Type=\"tags\"\n                  value={tags}\n                  onChange={(e) => set_tags(e.target.value)}\n                />\n              </FormGroup>\n\n              <div>\n                <Button\n                  variant=\"primary\"\n                  disabled={\n                    !validate_caption() ||\n                    !validate_title() ||\n                    !validate_price() ||\n                    !validate_tags()\n                  }\n                  type=\"submit\"\n                >\n                  Submit\n                </Button>\n              </div>\n\n              <Button\n                onClick={() => {\n                  history.push(\"/profile\");\n                }}\n              >\n                Cancel\n              </Button>\n            </form> */}\n            {/* <div className=\"grid-item-old-values\">\n              <h1>Current title: {props.title}</h1>\n              <h1>Current Caption: {props.caption}</h1>\n              <h1>Current Price: ${props.price}</h1>\n              <h1>Current Tags: ${props.tags}</h1>\n            </div> */}\n          </div>\n        </div>\n      </React.Fragment>,\n      document.getElementById(\"editPostPortal\")\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}