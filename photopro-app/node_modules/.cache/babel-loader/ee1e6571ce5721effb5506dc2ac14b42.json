{"ast":null,"code":"var _jsxFileName = \"/home/cristian/Documents/projects/COMP3900_PhotoPro/capstone-project-comp3900-f11a-2mjec/photopro-app/src/components/userPhotos/UserPhotos.jsx\";\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport './UserPhotos.css';\nimport axios from 'axios';\nimport ImageCard from '../feed/ImageCard/ImageCard';\nimport BookmarkModal from '../Modals/BookmarkModal/BookmarkModal';\n\nconst UserPhotos = props => {\n  const [username, setUsername] = useState(props.userID);\n  const [profileImgs, setProfileImgs] = useState([]);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [photoIdBookmarked, setPhotoIdBookmarked] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [hasPhotos, setHasPhotos] = useState(true);\n  const [hasMore, setHasMore] = useState(true);\n  const {\n    userID\n  } = props;\n  const displayMyProfile = localStorage.getItem('userID') == userID ? true : false;\n  const userLoggedIn = localStorage.getItem('userLoggedIn');\n  const [lastID, setLastID] = useState(null);\n  const fetchIsCancelled = useRef(false);\n  const cancelAxiosRequest = useRef();\n  const observer = useRef();\n  const lastImageRef = useCallback(node => {\n    if (loading) return;\n    if (observer.current) observer.current.disconnect();\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && hasMore) {\n        setLoading(true);\n        setTimeout(() => {\n          fetchProfilePhotos(lastID);\n        }, 1000);\n      }\n    });\n    if (node) observer.current.observe(node);\n  }, [loading, hasMore]);\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    axios({\n      url: 'http://localhost:5000/get_user_username',\n      params: {\n        user_id: userID\n      }\n    }).then(response => {\n      if (response.data.result) {\n        setUsername(response.data.result);\n      }\n    });\n  }, []);\n  useEffect(() => {\n    setTimeout(() => {\n      // temp fix to api call the clashes with another and which both modify file = \"image.jpg\"\n      fetchProfilePhotos();\n    }, 700);\n    return () => {\n      if (cancelAxiosRequest.current != null) cancelAxiosRequest.current();\n      fetchIsCancelled.current = true;\n      setProfileImgs([]);\n      setHasMore(true);\n    };\n  }, [userID]);\n\n  const fetchProfilePhotos = last_id => {\n    setLoading(true);\n    axios({\n      method: 'GET',\n      url: 'http://localhost:5000/profile_photos',\n      params: {\n        user_id: userID,\n        batch_size: 10,\n        last_id: last_id\n      },\n      cancelToken: new axios.CancelToken(c => cancelAxiosRequest.current = c)\n    }).then(res => {\n      console.log(res);\n\n      if (res.data.result !== false && !fetchIsCancelled.current) {\n        setLastID(res.data.last_id);\n        setLoading(false);\n        setProfileImgs(prevImgs => {\n          return [...prevImgs, ...res.data.result];\n        });\n      } else if (!fetchIsCancelled.current) {\n        setLoading(false);\n        setHasPhotos(false);\n      }\n    }).catch(e => {\n      if (axios.isCancel(e)) {\n        return;\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, displayMyProfile ? /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      marginTop: '10%',\n      marginLeft: '9%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, \"Uploaded Images: \", profileImgs.length) : /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      marginTop: '10%',\n      marginLeft: '9%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, \"Uploads: \", profileImgs.length), hasPhotos ? null : /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, \"You haven't uploaded any photos!\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"image-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, profileImgs.map((image, index) => {\n    if (image === null) {\n      return null;\n    }\n\n    if (imgs.length === index + 1) {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(ImageCard, {\n        key: image.id,\n        image: image,\n        setOpenBookmarkModal: setModalIsOpen,\n        setPhotoId: setPhotoIdBookmarked,\n        userLoggedIn: userLoggedIn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        ref: lastImageRef,\n        style: {\n          position: 'relative',\n          bottom: '200px',\n          // border: '3px solid red',\n          height: '0%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }\n      }));\n    } else {\n      return /*#__PURE__*/React.createElement(ImageCard, {\n        key: image.id,\n        image: image,\n        setOpenBookmarkModal: setModalIsOpen,\n        setPhotoId: setPhotoIdBookmarked,\n        userLoggedIn: userLoggedIn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 15\n        }\n      });\n    }\n  })), /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }\n  }, loading && 'Loading...'), modalIsOpen ? /*#__PURE__*/React.createElement(BookmarkModal, {\n    openModal: modalIsOpen,\n    setOpenModal: setModalIsOpen,\n    photoId: photoIdBookmarked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }) : null);\n};\n\nexport default UserPhotos;","map":{"version":3,"sources":["/home/cristian/Documents/projects/COMP3900_PhotoPro/capstone-project-comp3900-f11a-2mjec/photopro-app/src/components/userPhotos/UserPhotos.jsx"],"names":["React","useState","useEffect","useCallback","useRef","axios","ImageCard","BookmarkModal","UserPhotos","props","username","setUsername","userID","profileImgs","setProfileImgs","modalIsOpen","setModalIsOpen","photoIdBookmarked","setPhotoIdBookmarked","loading","setLoading","hasPhotos","setHasPhotos","hasMore","setHasMore","displayMyProfile","localStorage","getItem","userLoggedIn","lastID","setLastID","fetchIsCancelled","cancelAxiosRequest","observer","lastImageRef","node","current","disconnect","IntersectionObserver","entries","isIntersecting","setTimeout","fetchProfilePhotos","observe","window","scrollTo","url","params","user_id","then","response","data","result","last_id","method","batch_size","cancelToken","CancelToken","c","res","console","log","prevImgs","catch","e","isCancel","marginTop","marginLeft","length","textAlign","map","image","index","imgs","id","position","bottom","height"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport './UserPhotos.css';\nimport axios from 'axios';\nimport ImageCard from '../feed/ImageCard/ImageCard';\nimport BookmarkModal from '../Modals/BookmarkModal/BookmarkModal';\n\nconst UserPhotos = (props) => {\n  const [username, setUsername] = useState(props.userID);\n  const [profileImgs, setProfileImgs] = useState([]);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [photoIdBookmarked, setPhotoIdBookmarked] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [hasPhotos, setHasPhotos] = useState(true);\n  const [hasMore, setHasMore] = useState(true);\n\n  const { userID } = props;\n  const displayMyProfile =\n    localStorage.getItem('userID') == userID ? true : false;\n\n  const userLoggedIn = localStorage.getItem('userLoggedIn');\n  const [lastID, setLastID] = useState(null);\n  const fetchIsCancelled = useRef(false);\n  const cancelAxiosRequest = useRef();\n  const observer = useRef();\n  const lastImageRef = useCallback(\n    (node) => {\n      if (loading) return;\n      if (observer.current) observer.current.disconnect();\n      observer.current = new IntersectionObserver((entries) => {\n        if (entries[0].isIntersecting && hasMore) {\n          setLoading(true);\n          setTimeout(() => {\n            fetchProfilePhotos(lastID);\n          }, 1000);\n        }\n      });\n\n      if (node) observer.current.observe(node);\n    },\n    [loading, hasMore]\n  );\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n\n    axios({\n      url: 'http://localhost:5000/get_user_username',\n      params: { user_id: userID },\n    }).then((response) => {\n      if (response.data.result) {\n        setUsername(response.data.result);\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    setTimeout(() => {\n      // temp fix to api call the clashes with another and which both modify file = \"image.jpg\"\n      fetchProfilePhotos();\n    }, 700);\n\n    return () => {\n      if (cancelAxiosRequest.current != null) cancelAxiosRequest.current();\n\n      fetchIsCancelled.current = true;\n      setProfileImgs([]);\n      setHasMore(true);\n    };\n  }, [userID]);\n\n  const fetchProfilePhotos = (last_id) => {\n    setLoading(true);\n\n    axios({\n      method: 'GET',\n      url: 'http://localhost:5000/profile_photos',\n      params: { user_id: userID, batch_size: 10, last_id: last_id },\n      cancelToken: new axios.CancelToken(\n        (c) => (cancelAxiosRequest.current = c)\n      ),\n    })\n      .then((res) => {\n        console.log(res);\n        if (res.data.result !== false && !fetchIsCancelled.current) {\n          setLastID(res.data.last_id);\n          setLoading(false);\n          setProfileImgs((prevImgs) => {\n            return [...prevImgs, ...res.data.result];\n          });\n        } else if (!fetchIsCancelled.current) {\n          setLoading(false);\n          setHasPhotos(false);\n        }\n      })\n      .catch((e) => {\n        if (axios.isCancel(e)) {\n          return;\n        }\n      });\n  };\n\n  return (\n    <React.Fragment>\n      {displayMyProfile ? (\n        <h2 style={{ marginTop: '10%', marginLeft: '9%' }}>\n          Uploaded Images: {profileImgs.length}\n        </h2>\n      ) : (\n        <h2 style={{ marginTop: '10%', marginLeft: '9%' }}>\n          Uploads: {profileImgs.length}\n        </h2>\n      )}\n      {hasPhotos ? null : (\n        <h2 style={{ textAlign: 'center' }}>\n          You haven't uploaded any photos!\n        </h2>\n      )}\n\n      <div className=\"image-grid\">\n        {profileImgs.map((image, index) => {\n          if (image === null) {\n            return null;\n          }\n\n          if (imgs.length === index + 1) {\n            return (\n              <React.Fragment key={index}>\n                <ImageCard\n                  key={image.id}\n                  image={image}\n                  setOpenBookmarkModal={setModalIsOpen}\n                  setPhotoId={setPhotoIdBookmarked}\n                  userLoggedIn={userLoggedIn}\n                />\n                <div\n                  key={index}\n                  ref={lastImageRef}\n                  style={{\n                    position: 'relative',\n                    bottom: '200px',\n                    // border: '3px solid red',\n                    height: '0%',\n                  }}\n                ></div>\n              </React.Fragment>\n            );\n          } else {\n            return (\n              <ImageCard\n                key={image.id}\n                image={image}\n                setOpenBookmarkModal={setModalIsOpen}\n                setPhotoId={setPhotoIdBookmarked}\n                userLoggedIn={userLoggedIn}\n              />\n            );\n          }\n        })}\n      </div>\n      <h2 style={{ textAlign: 'center' }}>{loading && 'Loading...'}</h2>\n\n      {modalIsOpen ? (\n        <BookmarkModal\n          openModal={modalIsOpen}\n          setOpenModal={setModalIsOpen}\n          photoId={photoIdBookmarked}\n        ></BookmarkModal>\n      ) : null}\n    </React.Fragment>\n  );\n};\n\nexport default UserPhotos;\n"]},"metadata":{},"sourceType":"module"}