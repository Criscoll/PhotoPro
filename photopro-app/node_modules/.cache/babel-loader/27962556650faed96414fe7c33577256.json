{"ast":null,"code":"var _jsxFileName = \"/home/matthew/Projects/capstone-project-comp3900-f11a-2mjec/photopro-app/src/pages/UploadPhotoPage/Textfields/TitleField.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport TextField from '@material-ui/core/TextField';\nexport default function Title(props) {\n  const [text, setText] = useState('');\n  const [errorText, setErrorText] = useState('');\n  const [errorValue, setErrorValue] = useState(false);\n  const [firstRender, setFirstRender] = useState(true);\n  const {\n    uploadButtonClicked\n  } = props;\n  useEffect(() => {\n    setFirstRender(false);\n  }, []);\n  useEffect(() => {\n    if (firstRender === false) {\n      const result = handleTitleInput(text);\n      props.setTitleValidated([result, text]);\n    }\n  }, [uploadButtonClicked]);\n\n  const handleTitleInput = text => {\n    if (text.length > 0) {\n      setErrorValue(false);\n      setErrorText('');\n      return true;\n    } else {\n      setErrorText('Title must be included');\n      setErrorValue(true);\n      return false;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    error: errorValue,\n    helperText: errorText,\n    onChange: e => {\n      setText(e.target.value);\n      handleTitleInput(e.target.value);\n    },\n    label: \"Title\",\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/matthew/Projects/capstone-project-comp3900-f11a-2mjec/photopro-app/src/pages/UploadPhotoPage/Textfields/TitleField.jsx"],"names":["React","useState","useEffect","TextField","Title","props","text","setText","errorText","setErrorText","errorValue","setErrorValue","firstRender","setFirstRender","uploadButtonClicked","result","handleTitleInput","setTitleValidated","length","e","target","value","shrink"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACnC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,IAAD,CAA9C;AAEA,QAAM;AAAEa,IAAAA;AAAF,MAA0BT,KAAhC;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,cAAc,CAAC,KAAD,CAAd;AACD,GAFQ,EAEN,EAFM,CAAT;AAIAX,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,WAAW,KAAK,KAApB,EAA2B;AACzB,YAAMG,MAAM,GAAGC,gBAAgB,CAACV,IAAD,CAA/B;AACAD,MAAAA,KAAK,CAACY,iBAAN,CAAwB,CAACF,MAAD,EAAST,IAAT,CAAxB;AACD;AACF,GALQ,EAKN,CAACQ,mBAAD,CALM,CAAT;;AAOA,QAAME,gBAAgB,GAAIV,IAAD,IAAU;AACjC,QAAIA,IAAI,CAACY,MAAL,GAAc,CAAlB,EAAqB;AACnBP,MAAAA,aAAa,CAAC,KAAD,CAAb;AACAF,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACA,aAAO,IAAP;AACD,KAJD,MAIO;AACLA,MAAAA,YAAY,CAAC,wBAAD,CAAZ;AACAE,MAAAA,aAAa,CAAC,IAAD,CAAb;AACA,aAAO,KAAP;AACD;AACF,GAVD;;AAYA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,SAAD;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,KAAK,EAAED,UAFT;AAGE,IAAA,UAAU,EAAEF,SAHd;AAIE,IAAA,QAAQ,EAAGW,CAAD,IAAO;AACfZ,MAAAA,OAAO,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACAL,MAAAA,gBAAgB,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAhB;AACD,KAPH;AAQE,IAAA,KAAK,EAAC,OARR;AASE,IAAA,eAAe,EAAE;AACfC,MAAAA,MAAM,EAAE;AADO,KATnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAkBD","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nexport default function Title(props) {\n  const [text, setText] = useState('');\n  const [errorText, setErrorText] = useState('');\n  const [errorValue, setErrorValue] = useState(false);\n  const [firstRender, setFirstRender] = useState(true);\n\n  const { uploadButtonClicked } = props;\n\n  useEffect(() => {\n    setFirstRender(false);\n  }, []);\n\n  useEffect(() => {\n    if (firstRender === false) {\n      const result = handleTitleInput(text);\n      props.setTitleValidated([result, text]);\n    }\n  }, [uploadButtonClicked]);\n\n  const handleTitleInput = (text) => {\n    if (text.length > 0) {\n      setErrorValue(false);\n      setErrorText('');\n      return true;\n    } else {\n      setErrorText('Title must be included');\n      setErrorValue(true);\n      return false;\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <h1></h1>\n      <TextField\n        required\n        error={errorValue}\n        helperText={errorText}\n        onChange={(e) => {\n          setText(e.target.value);\n          handleTitleInput(e.target.value);\n        }}\n        label=\"Title\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n      />\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}