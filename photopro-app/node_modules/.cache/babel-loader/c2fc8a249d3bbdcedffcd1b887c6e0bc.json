{"ast":null,"code":"var _jsxFileName = \"/home/cristian/Documents/projects/COMP3900_PhotoPro/capstone-project-comp3900-f11a-2mjec/photopro-app/src/components/Modals/ForgotPasswordModal/ForgotPasswordModal.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport ReactDom from \"react-dom\";\nimport \"./ForgotPasswordModal.css\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: \"ch\"\n    }\n  }\n}));\nexport default function ForgotPassword(props) {\n  const classes = useStyles();\n  const [email, setEmail] = useState(\"\");\n  const [errorText, setErrorText] = useState(\"\");\n  const [hashValue, setHashValue] = useState(\"\");\n  const [errorValue, setErrorValue] = useState(false);\n  const [enterEmailToVerifyOpen, setEnterEmailToVerifyOpen] = useState(true);\n  const [verifyOpen, setVerifyOpen] = useState(false);\n  const [newPasswordFormOpen, setNewPasswordFormOpen] = useState(false);\n  const [successfulPasswordUpdate, setSuccessfulPasswordUpdate] = useState(false);\n  const [codeVerified, setCodeVerified] = useState(null);\n  const [enteredCode, setEnteredCode] = useState(\"\");\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [enteredNewPassword, setEnteredNewPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  const handleEmailInput = text => {\n    if (text.length > 10 && text.length < 50 && text.includes(\"@\") && text.includes(\".com\")) {\n      setErrorValue(false);\n      setErrorText(\"\");\n      return true;\n    } else {\n      setErrorText(\"Email must be entered and include an @ and .com\");\n      setErrorValue(true);\n      return false;\n    }\n  };\n\n  const forgotPasswordGetLink = () => {\n    setLoading(true);\n    axios({\n      method: \"POST\",\n      url: \"http://localhost:5000/forgot_password_get_change_password_link\",\n      params: {\n        email: email\n      }\n    }).then(response => {\n      if (response.data.result !== false) {\n        console.log(response);\n        setHashValue(response.data.result);\n        setEnterEmailToVerifyOpen(false);\n        setVerifyOpen(true);\n      }\n\n      setLoading(false);\n    });\n  };\n\n  const handleSendEmailClicked = () => {\n    forgotPasswordGetLink();\n  };\n\n  const forgotPasswordCodeSubmit = () => {\n    axios({\n      method: \"POST\",\n      url: \"http://localhost:5000/reset_password\",\n      params: {\n        email: enteredEmail,\n        new_password: enteredNewPassword\n      }\n    }).then(response => {\n      if (response.data.result !== false) {\n        console.log(response);\n        setNewPasswordFormOpen(false);\n        setSuccessfulPasswordUpdate(true);\n      }\n    });\n  };\n\n  const handleCodeSubmitEntered = e => {\n    e.stopPropagation(); // compare the user's code with our code\n\n    if (enteredCode === hashValue) {\n      console.log(\"code is the same!\");\n      setCodeVerified(true);\n      setVerifyOpen(false);\n      setNewPasswordFormOpen(true);\n    } else {\n      console.log(\"code is the same!\");\n      setCodeVerified(false);\n    }\n  };\n\n  const handNewPasswordSubmitted = () => {\n    forgotPasswordCodeSubmit();\n  };\n\n  if (!props.openForgotPasswordModal) {\n    return null;\n  } else {\n    return ReactDom.createPortal( /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"overlayStyles\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"forgotPasswordModal\",\n      onClick: e => {\n        e.stopPropagation();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }\n    }, enterEmailToVerifyOpen ? /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 15\n      }\n    }, \"Forgot Password\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 15\n      }\n    }, \"If you forgot your password, you can reset it here.\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 15\n      }\n    }, \"Please enter your email and you will receive an email with further instructions.\"), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 15\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      error: errorValue,\n      helperText: errorText,\n      onChange: e => {\n        setEmail(e.target.value);\n        handleEmailInput(e.target.value);\n      },\n      id: \"outlined-required\",\n      label: \"Required\",\n      defaultValue: props.oldTitle,\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 15\n      }\n    }, loading && \"Loading...\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"large\",\n      onClick: handleSendEmailClicked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }\n    }, \"SEND EMAIL\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"default\",\n      size: \"large\",\n      onClick: () => {\n        props.setOpenForgotPasswordModal(false);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }\n    }, \"Cancel\"))) : null, verifyOpen ? /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 15\n      }\n    }, \"Verify that it's you\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 15\n      }\n    }, \"An email with a verification code was just sent to \", email), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 15\n      }\n    }, \"Enter code\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true // error={errorValue}\n      // helperText={errorText}\n      ,\n      onChange: e => {\n        setEnteredCode(e.target.value); // handleCodeInput(e.target.value);\n      },\n      id: \"outlined-required\",\n      label: \"Required\",\n      defaultValue: props.oldTitle,\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"large\",\n      onClick: handleCodeSubmitEntered,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }\n    }, \"Submit\"))) : null, newPasswordFormOpen ? /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 15\n      }\n    }, \"Code is verified!\"), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 15\n      }\n    }, \"Now, enter your new password\"), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 15\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true // error={errorValue}\n      // helperText={errorText}\n      ,\n      onChange: e => {\n        setEnteredEmail(e.target.value);\n        handleEmailInput(e.target.value);\n      },\n      id: \"outlined-required\",\n      label: \"Required\",\n      defaultValue: props.oldTitle,\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 15\n      }\n    }, \"New Password\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      type: \"password\",\n      onChange: e => {\n        setEnteredNewPassword(e.target.value); // handleCodeInput(e.target.value);\n      },\n      id: \"outlined-required\",\n      label: \"Required\",\n      defaultValue: props.oldTitle,\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      type: \"password\",\n      color: \"primary\",\n      size: \"large\",\n      onClick: handNewPasswordSubmitted,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 17\n      }\n    }, \"Submit\"))) : null, successfulPasswordUpdate ? /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        color: \"grey\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 15\n      }\n    }, \"Your password is successfully updated!\"), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 15\n      }\n    }, \"You can now log in with your new password\")) : null, codeVerified === false ? /*#__PURE__*/React.createElement(\"h2\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 13\n      }\n    }, \"Incorrect Code\") : null)), document.getElementById(\"toolbarPortal\"));\n  }\n}","map":{"version":3,"sources":["/home/cristian/Documents/projects/COMP3900_PhotoPro/capstone-project-comp3900-f11a-2mjec/photopro-app/src/components/Modals/ForgotPasswordModal/ForgotPasswordModal.jsx"],"names":["React","useState","useEffect","ReactDom","axios","useHistory","TextField","Button","makeStyles","useStyles","theme","root","margin","spacing","width","ForgotPassword","props","classes","email","setEmail","errorText","setErrorText","hashValue","setHashValue","errorValue","setErrorValue","enterEmailToVerifyOpen","setEnterEmailToVerifyOpen","verifyOpen","setVerifyOpen","newPasswordFormOpen","setNewPasswordFormOpen","successfulPasswordUpdate","setSuccessfulPasswordUpdate","codeVerified","setCodeVerified","enteredCode","setEnteredCode","enteredEmail","setEnteredEmail","enteredNewPassword","setEnteredNewPassword","loading","setLoading","history","handleEmailInput","text","length","includes","forgotPasswordGetLink","method","url","params","then","response","data","result","console","log","handleSendEmailClicked","forgotPasswordCodeSubmit","new_password","handleCodeSubmitEntered","e","stopPropagation","handNewPasswordSubmitted","openForgotPasswordModal","createPortal","target","value","oldTitle","setOpenForgotPasswordModal","color","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ReactDom from \"react-dom\";\nimport \"./ForgotPasswordModal.css\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\n\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: \"ch\",\n    },\n  },\n}));\n\nexport default function ForgotPassword(props) {\n  const classes = useStyles();\n  const [email, setEmail] = useState(\"\");\n  const [errorText, setErrorText] = useState(\"\");\n  const [hashValue, setHashValue] = useState(\"\");\n  const [errorValue, setErrorValue] = useState(false);\n  const [enterEmailToVerifyOpen, setEnterEmailToVerifyOpen] = useState(true);\n  const [verifyOpen, setVerifyOpen] = useState(false);\n  const [newPasswordFormOpen, setNewPasswordFormOpen] = useState(false);\n\n  const [successfulPasswordUpdate, setSuccessfulPasswordUpdate] = useState(\n    false\n  );\n\n  const [codeVerified, setCodeVerified] = useState(null);\n\n  const [enteredCode, setEnteredCode] = useState(\"\");\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [enteredNewPassword, setEnteredNewPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const history = useHistory();\n\n  const handleEmailInput = (text) => {\n    if (\n      text.length > 10 &&\n      text.length < 50 &&\n      text.includes(\"@\") &&\n      text.includes(\".com\")\n    ) {\n      setErrorValue(false);\n      setErrorText(\"\");\n      return true;\n    } else {\n      setErrorText(\"Email must be entered and include an @ and .com\");\n      setErrorValue(true);\n      return false;\n    }\n  };\n\n  const forgotPasswordGetLink = () => {\n    setLoading(true);\n    axios({\n      method: \"POST\",\n      url: \"http://localhost:5000/forgot_password_get_change_password_link\",\n      params: {\n        email: email,\n      },\n    }).then((response) => {\n      if (response.data.result !== false) {\n        console.log(response);\n        setHashValue(response.data.result);\n        setEnterEmailToVerifyOpen(false);\n        setVerifyOpen(true);\n      }\n      setLoading(false);\n    });\n  };\n\n  const handleSendEmailClicked = () => {\n    forgotPasswordGetLink();\n  };\n\n  const forgotPasswordCodeSubmit = () => {\n    axios({\n      method: \"POST\",\n      url: \"http://localhost:5000/reset_password\",\n      params: {\n        email: enteredEmail,\n        new_password: enteredNewPassword,\n      },\n    }).then((response) => {\n      if (response.data.result !== false) {\n        console.log(response);\n        setNewPasswordFormOpen(false);\n        setSuccessfulPasswordUpdate(true);\n      }\n    });\n  };\n\n  const handleCodeSubmitEntered = (e) => {\n    e.stopPropagation();\n    // compare the user's code with our code\n    if (enteredCode === hashValue) {\n      console.log(\"code is the same!\");\n      setCodeVerified(true);\n      setVerifyOpen(false);\n      setNewPasswordFormOpen(true);\n    } else {\n      console.log(\"code is the same!\");\n      setCodeVerified(false);\n    }\n  };\n\n  const handNewPasswordSubmitted = () => {\n    forgotPasswordCodeSubmit();\n  };\n\n  if (!props.openForgotPasswordModal) {\n    return null;\n  } else {\n    return ReactDom.createPortal(\n      <React.Fragment>\n        <div className=\"overlayStyles\" />\n        <div\n          className=\"forgotPasswordModal\"\n          onClick={(e) => {\n            e.stopPropagation();\n          }}\n        >\n          {enterEmailToVerifyOpen ? (\n            <React.Fragment>\n              <h1>Forgot Password</h1>\n              <h3>If you forgot your password, you can reset it here.</h3>\n              <h3>\n                Please enter your email and you will receive an email with\n                further instructions.\n              </h3>\n\n              <h2>Email</h2>\n              <div>\n                <TextField\n                  required\n                  error={errorValue}\n                  helperText={errorText}\n                  onChange={(e) => {\n                    setEmail(e.target.value);\n                    handleEmailInput(e.target.value);\n                  }}\n                  id=\"outlined-required\"\n                  label=\"Required\"\n                  defaultValue={props.oldTitle}\n                  variant=\"outlined\"\n                />\n              </div>\n              <h3>{loading && \"Loading...\"}</h3>\n              <div>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  size=\"large\"\n                  onClick={handleSendEmailClicked}\n                >\n                  SEND EMAIL\n                </Button>\n              </div>\n              <div>\n                <Button\n                  variant=\"contained\"\n                  color=\"default\"\n                  size=\"large\"\n                  onClick={() => {\n                    props.setOpenForgotPasswordModal(false);\n                  }}\n                >\n                  Cancel\n                </Button>\n              </div>\n            </React.Fragment>\n          ) : null}\n\n          {verifyOpen ? (\n            <React.Fragment>\n              <h1>Verify that it's you</h1>\n              <h3>\n                An email with a verification code was just sent to {email}\n              </h3>\n              <h2>Enter code</h2>\n              <div>\n                <TextField\n                  required\n                  // error={errorValue}\n                  // helperText={errorText}\n                  onChange={(e) => {\n                    setEnteredCode(e.target.value);\n                    // handleCodeInput(e.target.value);\n                  }}\n                  id=\"outlined-required\"\n                  label=\"Required\"\n                  defaultValue={props.oldTitle}\n                  variant=\"outlined\"\n                />\n              </div>\n\n              <div>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  size=\"large\"\n                  onClick={handleCodeSubmitEntered}\n                >\n                  Submit\n                </Button>\n              </div>\n            </React.Fragment>\n          ) : null}\n\n          {newPasswordFormOpen ? (\n            <React.Fragment>\n              <h1>Code is verified!</h1>\n              <h2>Now, enter your new password</h2>\n              <h2>Email</h2>\n              <div>\n                <TextField\n                  required\n                  // error={errorValue}\n                  // helperText={errorText}\n                  onChange={(e) => {\n                    setEnteredEmail(e.target.value);\n                    handleEmailInput(e.target.value);\n                  }}\n                  id=\"outlined-required\"\n                  label=\"Required\"\n                  defaultValue={props.oldTitle}\n                  variant=\"outlined\"\n                />\n              </div>\n\n              <h2>New Password</h2>\n              <div>\n                <TextField\n                  required\n                  type=\"password\"\n                  onChange={(e) => {\n                    setEnteredNewPassword(e.target.value);\n                    // handleCodeInput(e.target.value);\n                  }}\n                  id=\"outlined-required\"\n                  label=\"Required\"\n                  defaultValue={props.oldTitle}\n                  variant=\"outlined\"\n                />\n              </div>\n\n              <div>\n                <Button\n                  variant=\"contained\"\n                  type=\"password\"\n                  color=\"primary\"\n                  size=\"large\"\n                  onClick={handNewPasswordSubmitted}\n                >\n                  Submit\n                </Button>\n              </div>\n            </React.Fragment>\n          ) : null}\n          {successfulPasswordUpdate ? (\n            <React.Fragment>\n              <h1 style={{ color: \"grey\" }}>\n                Your password is successfully updated!\n              </h1>\n              <h2>You can now log in with your new password</h2>\n            </React.Fragment>\n          ) : null}\n\n          {codeVerified === false ? (\n            <h2 style={{ color: \"red\" }}>Incorrect Code</h2>\n          ) : null}\n        </div>\n      </React.Fragment>,\n      document.getElementById(\"toolbarPortal\")\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}