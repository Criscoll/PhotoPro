{"ast":null,"code":"var _jsxFileName = \"/home/cristian/Documents/projects/COMP3900_PhotoPro/capstone-project-comp3900-f11a-2mjec/photopro-app/src/pages/ProfilePage.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport Toolbar from '../components/toolbar/toolbar';\nimport UserPhotos from '../components/userPhotos/UserPhotos';\nimport Collections from '../components/collections/collections';\nimport Button from '@material-ui/core/Button';\nimport './ProfilePage.css';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\n\nfunction ProfilePage(props) {\n  const [profileImg, setProfileImg] = useState(null);\n  const history = useHistory();\n\n  const handleUploadPhotoClicked = () => {\n    history.push('/upload-profile-photo');\n  };\n\n  const getProfilePhoto = ID => {\n    axios({\n      method: 'GET',\n      url: 'http://localhost:5000/get_profile_photo',\n      params: {\n        user_id: ID\n      }\n    }).then(response => {\n      console.log(response);\n\n      if (response.data.result) {\n        setProfileImg(response.data.result);\n      } else {\n        setProfileImg(null);\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (localStorage.getItem('userID') === props.location.state.uploaderID) {\n      getProfilePhoto(localStorage.getItem('userID'));\n    } else {\n      getProfilePhoto(props.location.state.uploaderID);\n    }\n  }, []);\n\n  if (props.location.state === undefined) {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Toolbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, \"Nothing found\"));\n  } else {\n    // This variable helps certain components decide what information they should display.\n    const displayMyProfile = localStorage.getItem('userID') === props.location.state.uploaderID ? true : false; // Tries to move the page to the top when the profile page is rendered\n\n    document.body.style.overflow = 'unset';\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Toolbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }), displayMyProfile ? /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"users-profile-pic\",\n      style: {\n        marginTop: '20%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dp-photo-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }\n    }, profileImg !== null ? /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dp-photo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: `data:image/jpg;base64,${profileImg}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 23\n      }\n    }))) : null), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"upload-dp-button\",\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      onClick: handleUploadPhotoClicked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, \"Update Profile Photo\")))) : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profile-wrapper\",\n      style: {\n        marginTop: '5%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, displayMyProfile ? null : /*#__PURE__*/React.createElement(Collections, {\n      userID: props.location.state.uploaderID,\n      displayMyProfile: displayMyProfile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(UserPhotos, {\n      userID: props.location.state.uploaderID,\n      userLoggedIn: localStorage.getItem('userLoggedIn'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    })));\n  }\n}\n\nexport default ProfilePage;","map":{"version":3,"sources":["/home/cristian/Documents/projects/COMP3900_PhotoPro/capstone-project-comp3900-f11a-2mjec/photopro-app/src/pages/ProfilePage.jsx"],"names":["React","useState","useEffect","Toolbar","UserPhotos","Collections","Button","useHistory","axios","ProfilePage","props","profileImg","setProfileImg","history","handleUploadPhotoClicked","push","getProfilePhoto","ID","method","url","params","user_id","then","response","console","log","data","result","localStorage","getItem","location","state","uploaderID","undefined","displayMyProfile","document","body","style","overflow","marginTop","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Toolbar from '../components/toolbar/toolbar';\nimport UserPhotos from '../components/userPhotos/UserPhotos';\nimport Collections from '../components/collections/collections';\nimport Button from '@material-ui/core/Button';\nimport './ProfilePage.css';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\n\nfunction ProfilePage(props) {\n  const [profileImg, setProfileImg] = useState(null);\n\n  const history = useHistory();\n  const handleUploadPhotoClicked = () => {\n    history.push('/upload-profile-photo');\n  };\n\n  const getProfilePhoto = (ID) => {\n    axios({\n      method: 'GET',\n      url: 'http://localhost:5000/get_profile_photo',\n      params: {\n        user_id: ID,\n      },\n    }).then((response) => {\n      console.log(response);\n      if (response.data.result) {\n        setProfileImg(response.data.result);\n      } else {\n        setProfileImg(null);\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (localStorage.getItem('userID') === props.location.state.uploaderID) {\n      getProfilePhoto(localStorage.getItem('userID'));\n    } else {\n      getProfilePhoto(props.location.state.uploaderID);\n    }\n  }, []);\n\n  if (props.location.state === undefined) {\n    return (\n      <React.Fragment>\n        <Toolbar />\n        <h1>Nothing found</h1>\n      </React.Fragment>\n    );\n  } else {\n    // This variable helps certain components decide what information they should display.\n    const displayMyProfile =\n      localStorage.getItem('userID') === props.location.state.uploaderID\n        ? true\n        : false;\n\n    // Tries to move the page to the top when the profile page is rendered\n    document.body.style.overflow = 'unset';\n    return (\n      <React.Fragment>\n        <Toolbar />\n\n        {displayMyProfile ? (\n          <React.Fragment>\n            <div className=\"users-profile-pic\" style={{ marginTop: '20%' }}>\n              <div className=\"dp-photo-wrapper\">\n                {profileImg !== null ? (\n                  <React.Fragment>\n                    <div className=\"dp-photo\">\n                      <img src={`data:image/jpg;base64,${profileImg}`} />\n                    </div>\n                  </React.Fragment>\n                ) : null}\n              </div>\n\n              <div className=\"upload-dp-button\" style={{ textAlign: 'center' }}>\n                <Button variant=\"outlined\" onClick={handleUploadPhotoClicked}>\n                  Update Profile Photo\n                </Button>\n              </div>\n            </div>\n          </React.Fragment>\n        ) : null}\n\n        <div className=\"profile-wrapper\" style={{ marginTop: '5%' }}>\n          {displayMyProfile ? null : (\n            <Collections\n              userID={props.location.state.uploaderID}\n              displayMyProfile={displayMyProfile}\n            />\n          )}\n          <UserPhotos\n            userID={props.location.state.uploaderID}\n            userLoggedIn={localStorage.getItem('userLoggedIn')}\n          />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ProfilePage;\n"]},"metadata":{},"sourceType":"module"}