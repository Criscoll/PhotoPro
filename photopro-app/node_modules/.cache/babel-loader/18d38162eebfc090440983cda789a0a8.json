{"ast":null,"code":"var _jsxFileName = \"/home/cristian/Documents/projects/COMP3900_PhotoPro/capstone-project-comp3900-f11a-2mjec/photopro-app/src/components/Modals/BookmarkModal/BookmarkModal.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport ReactDom from 'react-dom';\nimport './BookmarkModal.css';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport axios from 'axios';\nimport CollectionFolder from './collectionFolder/CollectionFolder';\nimport BookmarkConfirmationModalOpen from './BookmarkConfirmationModal/BookmarkConfirmationModal';\nexport default function BookmarkModal(props) {\n  const [bookmarkConfirmationModalOpen, setBookmarkConfirmationModalOpen] = useState(false);\n  const [addedCollectionName, setAddedCollectionName] = useState(null);\n  const [enteredCollection, setEnteredCollection] = useState('');\n  const [usersCollections, setUsersCollections] = useState(null);\n  const [showCreateCollectionButton, setShowCreateCollectionButton] = useState(true);\n  useEffect(() => {\n    getUsersCollections();\n  }, []);\n  const [privateCollection, setPrivateCollection] = useState(0);\n\n  const getUsersCollections = () => {\n    const userID = localStorage.getItem('userID');\n    axios({\n      method: 'GET',\n      url: 'http://localhost:5000/get_users_collection',\n      params: {\n        user_id: userID,\n        batch_size: 20\n      }\n    }).then(response => {\n      if (response.data.result !== false) {\n        setUsersCollections(response.data.result);\n      }\n    });\n  };\n\n  const addPhotoToCollections = col_id => {\n    axios({\n      method: 'POST',\n      url: 'http://localhost:5000/add_photo_to_collection',\n      params: {\n        collection_id: col_id,\n        image_id: props.photoId\n      }\n    }).then(response => {\n      console.log(response.data.result);\n\n      if (response.data.result) {\n        for (let i = 0; i < usersCollections.length; i++) {\n          console.log(usersCollections[i]);\n          console.log(`col_id = ${col_id}, collection_id = ${usersCollections[i].collection_id}`);\n\n          if (col_id === usersCollections[i].collection_id) {\n            setBookmarkConfirmationModalOpen(true);\n            setAddedCollectionName(usersCollections[i].collection_name);\n            break;\n          }\n        }\n      }\n    });\n  };\n\n  let collectionFolders = null;\n\n  if (usersCollections != null) {\n    collectionFolders = usersCollections.map(collection => {\n      return /*#__PURE__*/React.createElement(CollectionFolder, {\n        key: collection.collection_id,\n        collectionInfo: collection,\n        photoId: props.photoId,\n        addPhotoToCollections: addPhotoToCollections,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }\n      });\n    });\n  }\n\n  const handleEnteredCollection = e => {\n    e.preventDefault();\n    createCollections();\n  };\n\n  const createCollections = () => {\n    axios({\n      method: 'POST',\n      url: 'http://localhost:5000/create_collection',\n      params: {\n        collection_name: enteredCollection,\n        private: privateCollection\n      }\n    }).then(response => {\n      if (response.data.result) {\n        addPhotoToCollections(response.data.result);\n      }\n    });\n  };\n\n  if (!props.openModal) {\n    return null;\n  } else {\n    return ReactDom.createPortal( /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"overlayStyles\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bookmarkModal\",\n      onClick: e => {\n        e.stopPropagation();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }\n    }, \"Add to Collection\"), showCreateCollectionButton ? /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: () => {\n        setShowCreateCollectionButton(false);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }, \"Create a new collection\") : null, showCreateCollectionButton ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"collectionFolders\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }\n    }, collectionFolders) : null, !showCreateCollectionButton ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"enteredCollection\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleEnteredCollection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"reply\",\n      onChange: e => setEnteredCollection(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }\n    }, \"Create collection\")), /*#__PURE__*/React.createElement(FormControlLabel, {\n      control: /*#__PURE__*/React.createElement(Checkbox, {\n        checked: privateCollection,\n        onChange: () => {\n          if (privateCollection == true) {\n            setPrivateCollection(0);\n          } else {\n            setPrivateCollection(1);\n          }\n        },\n        name: \"privateCheckbox\",\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 19\n        }\n      }),\n      label: \"Private\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => {\n        setShowCreateCollectionButton(true);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 15\n      }\n    }, \"Cancel\")) : null), bookmarkConfirmationModalOpen ? /*#__PURE__*/React.createElement(BookmarkConfirmationModalOpen, {\n      openModal: true,\n      photoID: props.photoId,\n      collectionName: addedCollectionName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }\n    }) : null), document.getElementById('portal'));\n  }\n}","map":{"version":3,"sources":["/home/cristian/Documents/projects/COMP3900_PhotoPro/capstone-project-comp3900-f11a-2mjec/photopro-app/src/components/Modals/BookmarkModal/BookmarkModal.jsx"],"names":["React","useState","useEffect","ReactDom","Button","Checkbox","FormControlLabel","axios","CollectionFolder","BookmarkConfirmationModalOpen","BookmarkModal","props","bookmarkConfirmationModalOpen","setBookmarkConfirmationModalOpen","addedCollectionName","setAddedCollectionName","enteredCollection","setEnteredCollection","usersCollections","setUsersCollections","showCreateCollectionButton","setShowCreateCollectionButton","getUsersCollections","privateCollection","setPrivateCollection","userID","localStorage","getItem","method","url","params","user_id","batch_size","then","response","data","result","addPhotoToCollections","col_id","collection_id","image_id","photoId","console","log","i","length","collection_name","collectionFolders","map","collection","handleEnteredCollection","e","preventDefault","createCollections","private","openModal","createPortal","stopPropagation","target","value","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactDom from 'react-dom';\nimport './BookmarkModal.css';\n\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nimport axios from 'axios';\n\nimport CollectionFolder from './collectionFolder/CollectionFolder';\nimport BookmarkConfirmationModalOpen from './BookmarkConfirmationModal/BookmarkConfirmationModal';\n\nexport default function BookmarkModal(props) {\n  const [\n    bookmarkConfirmationModalOpen,\n    setBookmarkConfirmationModalOpen,\n  ] = useState(false);\n  const [addedCollectionName, setAddedCollectionName] = useState(null);\n  const [enteredCollection, setEnteredCollection] = useState('');\n\n  const [usersCollections, setUsersCollections] = useState(null);\n\n  const [showCreateCollectionButton, setShowCreateCollectionButton] = useState(\n    true\n  );\n\n  useEffect(() => {\n    getUsersCollections();\n  }, []);\n\n  const [privateCollection, setPrivateCollection] = useState(0);\n\n  const getUsersCollections = () => {\n    const userID = localStorage.getItem('userID');\n    axios({\n      method: 'GET',\n      url: 'http://localhost:5000/get_users_collection',\n      params: {\n        user_id: userID,\n        batch_size: 20,\n      },\n    }).then((response) => {\n      if (response.data.result !== false) {\n        setUsersCollections(response.data.result);\n      }\n    });\n  };\n\n  const addPhotoToCollections = (col_id) => {\n    axios({\n      method: 'POST',\n      url: 'http://localhost:5000/add_photo_to_collection',\n      params: {\n        collection_id: col_id,\n        image_id: props.photoId,\n      },\n    }).then((response) => {\n      console.log(response.data.result);\n      if (response.data.result) {\n        for (let i = 0; i < usersCollections.length; i++) {\n          console.log(usersCollections[i]);\n          console.log(\n            `col_id = ${col_id}, collection_id = ${usersCollections[i].collection_id}`\n          );\n\n          if (col_id === usersCollections[i].collection_id) {\n            setBookmarkConfirmationModalOpen(true);\n            setAddedCollectionName(usersCollections[i].collection_name);\n            break;\n          }\n        }\n      }\n    });\n  };\n\n  let collectionFolders = null;\n  if (usersCollections != null) {\n    collectionFolders = usersCollections.map((collection) => {\n      return (\n        <CollectionFolder\n          key={collection.collection_id}\n          collectionInfo={collection}\n          photoId={props.photoId}\n          addPhotoToCollections={addPhotoToCollections}\n        />\n      );\n    });\n  }\n\n  const handleEnteredCollection = (e) => {\n    e.preventDefault();\n\n    createCollections();\n  };\n\n  const createCollections = () => {\n    axios({\n      method: 'POST',\n      url: 'http://localhost:5000/create_collection',\n      params: {\n        collection_name: enteredCollection,\n        private: privateCollection,\n      },\n    }).then((response) => {\n      if (response.data.result) {\n        addPhotoToCollections(response.data.result);\n      }\n    });\n  };\n\n  if (!props.openModal) {\n    return null;\n  } else {\n    return ReactDom.createPortal(\n      <React.Fragment>\n        <div className=\"overlayStyles\" />\n        <div\n          className=\"bookmarkModal\"\n          onClick={(e) => {\n            e.stopPropagation();\n          }}\n        >\n          <h2>Add to Collection</h2>\n\n          {showCreateCollectionButton ? (\n            <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              onClick={() => {\n                setShowCreateCollectionButton(false);\n              }}\n            >\n              Create a new collection\n            </Button>\n          ) : null}\n\n          {showCreateCollectionButton ? (\n            <div className=\"collectionFolders\">{collectionFolders}</div>\n          ) : null}\n\n          {!showCreateCollectionButton ? (\n            <div className=\"enteredCollection\">\n              <form onSubmit={handleEnteredCollection}>\n                <div>\n                  <input\n                    type=\"reply\"\n                    onChange={(e) => setEnteredCollection(e.target.value)}\n                  />\n                </div>\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                  Create collection\n                </Button>\n              </form>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={privateCollection}\n                    onChange={() => {\n                      if (privateCollection == true) {\n                        setPrivateCollection(0);\n                      } else {\n                        setPrivateCollection(1);\n                      }\n                    }}\n                    name=\"privateCheckbox\"\n                    color=\"primary\"\n                  />\n                }\n                label=\"Private\"\n              />\n\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => {\n                  setShowCreateCollectionButton(true);\n                }}\n              >\n                Cancel\n              </Button>\n            </div>\n          ) : null}\n        </div>\n\n        {bookmarkConfirmationModalOpen ? (\n          <BookmarkConfirmationModalOpen\n            openModal={true}\n            photoID={props.photoId}\n            collectionName={addedCollectionName}\n          />\n        ) : null}\n      </React.Fragment>,\n      document.getElementById('portal')\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}