{"ast":null,"code":"var _jsxFileName = \"/home/mimi/Desktop/COMP3900/capstone-project-comp3900-f11a-2mjec/photopro-app/src/components/likes/Likes.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport './Likes.css';\nimport axios from 'axios';\nimport IconButton from '@material-ui/core/IconButton';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles({\n  root: {\n    width: '2rem',\n    height: '2rem'\n  },\n  liked: {\n    color: 'rgba(255, 255, 255, 1)',\n    backgroundColor: 'rgba(213, 48, 48, 1)'\n  },\n  unliked: {}\n});\n\nfunction Likes(props) {\n  const [num_likes, set_num_likes] = useState(props.num_likes);\n  const [postLiked, setPostLiked] = useState(false);\n  const classes = useStyles();\n  const {\n    image_id: imageID\n  } = props;\n  let userID = localStorage.getItem('userID');\n  useEffect(() => {\n    console.log('check if liked called');\n\n    const checkIfLiked = () => {\n      axios({\n        method: 'GET',\n        url: 'http://localhost:5000/get_likers_of_image',\n        params: {\n          image_id: imageID,\n          batch_size: 50\n        }\n      }).then(response => {\n        console.log(response);\n\n        if (response.data.result.length > 0) {\n          for (let i = 0; i < response.data.result.length; i++) {\n            if (parseInt(userID) === response.data.result[i].user_id) {\n              setPostLiked(true);\n              console.log('This image has been liked before :o');\n            }\n          }\n        } else {\n          console.log('no likers found');\n        }\n      });\n    };\n\n    checkIfLiked();\n  }, [userID, imageID]);\n\n  const handleLikeClicked = () => {\n    if (userID != null) {\n      if (!postLiked) {\n        post_likes(props.image_id);\n      } else {\n        delete_likes(props.image_id);\n      }\n    } else {\n      console.log('user is not logged in yet');\n    }\n  };\n\n  const sendLikeNotification = () => {\n    axios({\n      url: 'http://localhost:5000/send_notification',\n      params: {\n        uploader_id: props.uploader_id,\n        notification: 'like',\n        image_id: props.image_id\n      }\n    }).then(response => {\n      console.log(response);\n    });\n  };\n\n  const post_likes = img_id => {\n    axios({\n      method: 'GET',\n      url: 'http://localhost:5000/post_like_to_image',\n      params: {\n        image_id: img_id\n      }\n    }).then(response => {\n      console.log(`post_like api response is ${response.data.result}`);\n      console.log(response);\n\n      if (response.data.result) {\n        set_num_likes(prevState => parseInt(prevState) + 1);\n        setPostLiked(true);\n        sendLikeNotification();\n      }\n\n      return response.data.result;\n    });\n  };\n\n  const delete_likes = img_id => {\n    axios({\n      method: 'POST',\n      url: 'http://localhost:5000/delete_like_from_image',\n      params: {\n        image_id: img_id\n      }\n    }).then(response => {\n      console.log(`delete_likes api response is ${response.data.result}`);\n\n      if (response.data.result) {\n        set_num_likes(prevState => parseInt(prevState) - 1);\n        setPostLiked(false);\n      }\n\n      return response.data.result;\n    });\n  };\n\n  let buttonClass;\n\n  if (postLiked) {\n    buttonClass = classes.liked;\n  } else {\n    buttonClass = classes.unliked;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"like\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    classes: {\n      root: `${classes.root} ${buttonClass}`\n    },\n    onClick: handleLikeClicked,\n    disabled: localStorage.getItem('userLoggedIn') ? false : true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FavoriteIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, num_likes)));\n}\n\nexport default Likes;","map":{"version":3,"sources":["/home/mimi/Desktop/COMP3900/capstone-project-comp3900-f11a-2mjec/photopro-app/src/components/likes/Likes.jsx"],"names":["React","useState","useEffect","axios","IconButton","FavoriteIcon","makeStyles","useStyles","root","width","height","liked","color","backgroundColor","unliked","Likes","props","num_likes","set_num_likes","postLiked","setPostLiked","classes","image_id","imageID","userID","localStorage","getItem","console","log","checkIfLiked","method","url","params","batch_size","then","response","data","result","length","i","parseInt","user_id","handleLikeClicked","post_likes","delete_likes","sendLikeNotification","uploader_id","notification","img_id","prevState","buttonClass","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Likes.css';\nimport axios from 'axios';\nimport IconButton from '@material-ui/core/IconButton';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  root: {\n    width: '2rem',\n    height: '2rem',\n  },\n  liked: {\n    color: 'rgba(255, 255, 255, 1)',\n    backgroundColor: 'rgba(213, 48, 48, 1)',\n  },\n\n  unliked: {},\n});\n\nfunction Likes(props) {\n  const [num_likes, set_num_likes] = useState(props.num_likes);\n  const [postLiked, setPostLiked] = useState(false);\n  const classes = useStyles();\n\n  const { image_id: imageID } = props;\n  let userID = localStorage.getItem('userID');\n\n  useEffect(() => {\n    console.log('check if liked called');\n    const checkIfLiked = () => {\n      axios({\n        method: 'GET',\n        url: 'http://localhost:5000/get_likers_of_image',\n        params: { image_id: imageID, batch_size: 50 },\n      }).then((response) => {\n        console.log(response);\n        if (response.data.result.length > 0) {\n          for (let i = 0; i < response.data.result.length; i++) {\n            if (parseInt(userID) === response.data.result[i].user_id) {\n              setPostLiked(true);\n              console.log('This image has been liked before :o');\n            }\n          }\n        } else {\n          console.log('no likers found');\n        }\n      });\n    };\n    checkIfLiked();\n  }, [userID, imageID]);\n\n  const handleLikeClicked = () => {\n    if (userID != null) {\n      if (!postLiked) {\n        post_likes(props.image_id);\n      } else {\n        delete_likes(props.image_id);\n      }\n    } else {\n      console.log('user is not logged in yet');\n    }\n  };\n\n  const sendLikeNotification = () => {\n    axios({\n      url: 'http://localhost:5000/send_notification',\n      params: {\n        uploader_id: props.uploader_id,\n        notification: 'like',\n        image_id: props.image_id,\n      },\n    }).then((response) => {\n      console.log(response);\n    });\n  };\n\n  const post_likes = (img_id) => {\n    axios({\n      method: 'GET',\n      url: 'http://localhost:5000/post_like_to_image',\n      params: { image_id: img_id },\n    }).then((response) => {\n      console.log(`post_like api response is ${response.data.result}`);\n      console.log(response);\n\n      if (response.data.result) {\n        set_num_likes((prevState) => parseInt(prevState) + 1);\n        setPostLiked(true);\n        sendLikeNotification();\n      }\n\n      return response.data.result;\n    });\n  };\n\n  const delete_likes = (img_id) => {\n    axios({\n      method: 'POST',\n      url: 'http://localhost:5000/delete_like_from_image',\n      params: { image_id: img_id },\n    }).then((response) => {\n      console.log(`delete_likes api response is ${response.data.result}`);\n\n      if (response.data.result) {\n        set_num_likes((prevState) => parseInt(prevState) - 1);\n        setPostLiked(false);\n      }\n      return response.data.result;\n    });\n  };\n\n  let buttonClass;\n  if (postLiked) {\n    buttonClass = classes.liked;\n  } else {\n    buttonClass = classes.unliked;\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"like\">\n        <div style={{ textAlign: 'center' }}>\n          <IconButton\n            classes={{ root: `${classes.root} ${buttonClass}` }}\n            onClick={handleLikeClicked}\n            disabled={localStorage.getItem('userLoggedIn') ? false : true}\n          >\n            <FavoriteIcon />\n          </IconButton>\n        </div>\n\n        <p>{num_likes}</p>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default Likes;\n"]},"metadata":{},"sourceType":"module"}