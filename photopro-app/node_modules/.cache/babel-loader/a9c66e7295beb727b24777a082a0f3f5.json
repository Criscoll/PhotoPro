{"ast":null,"code":"var _jsxFileName = \"/home/cristian/Documents/projects/COMP3900_PhotoPro/capstone-project-comp3900-f11a-2mjec/photopro-app/src/components/feed/RecommendationFeed/RecommendationFeed.jsx\";\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport '../feed.css';\nimport axios from 'axios';\nimport ImageCard from '../ImageCard/ImageCard';\nimport BookmarkModal from '../../Modals/BookmarkModal/BookmarkModal';\n\nconst RecommendationFeed = () => {\n  const [imgs, setImgs] = useState([]);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [photoIdBookmarked, setPhotoIdBookmarked] = useState(0);\n  const [hasMore, setHasMore] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const userLoggedIn = localStorage.getItem('userLoggedIn');\n  const fetchIsCancelled = useRef(false);\n  const cancelAxiosRequest = useRef();\n  const observer = useRef();\n  const lastImageRef = useCallback(node => {\n    if (loading) return;\n    if (observer.current) observer.current.disconnect();\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && hasMore) {\n        setLoading(true);\n        fetchRecommendations();\n      }\n    });\n    if (node) observer.current.observe(node);\n  }, [loading, hasMore]);\n  useEffect(() => {\n    fetchIsCancelled.current = false;\n    setLoading(true);\n    setTimeout(() => {\n      fetchRecommendations();\n    }, 150);\n    return () => {\n      if (cancelAxiosRequest.current != null) cancelAxiosRequest.current();\n      fetchIsCancelled.current = true;\n      setImgs([]);\n      setHasMore(true);\n    };\n  }, []);\n\n  const fetchRecommendations = () => {\n    axios({\n      method: 'GET',\n      url: 'http://localhost:5000/get_recommended_images',\n      params: {\n        batch_size: 10\n      },\n      cancelToken: new axios.CancelToken(c => cancelAxiosRequest.current = c)\n    }).then(res => {\n      console.log(res);\n\n      if (res.data.result !== false && !fetchIsCancelled.current) {\n        setHasMore(true);\n        setLoading(false);\n        setImgs(prevImgs => {\n          return [...prevImgs, ...res.data.result];\n        });\n      } else if (!fetchIsCancelled.current) {\n        console.log('no more images to return');\n        setLoading(false);\n        setHasMore(false);\n      }\n    }).catch(e => {\n      if (axios.isCancel(e)) {\n        console.log(`previous search request cancelled for - ${term}`);\n        return;\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"image-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, imgs.map((image, index) => {\n    if (image === null) {\n      return null;\n    }\n\n    if (imgs.length === index + 1) {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(ImageCard, {\n        key: image.id,\n        image: image,\n        setOpenBookmarkModal: setModalIsOpen,\n        setPhotoId: setPhotoIdBookmarked,\n        userLoggedIn: userLoggedIn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        ref: lastImageRef,\n        style: {\n          position: 'relative',\n          bottom: '200px',\n          // border: '3px solid red',\n          height: '0%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }\n      }));\n    } else {\n      return /*#__PURE__*/React.createElement(ImageCard, {\n        key: image.id,\n        image: image,\n        setOpenBookmarkModal: setModalIsOpen,\n        setPhotoId: setPhotoIdBookmarked,\n        userLoggedIn: userLoggedIn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }\n      });\n    }\n  })), /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, loading && 'Loading...'), /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, !hasMore && 'No more images to display'), modalIsOpen ? /*#__PURE__*/React.createElement(BookmarkModal, {\n    openModal: true,\n    setOpenModal: setModalIsOpen,\n    photoId: photoIdBookmarked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }) : null);\n};\n\nexport default RecommendationFeed;","map":{"version":3,"sources":["/home/cristian/Documents/projects/COMP3900_PhotoPro/capstone-project-comp3900-f11a-2mjec/photopro-app/src/components/feed/RecommendationFeed/RecommendationFeed.jsx"],"names":["React","useState","useEffect","useRef","useCallback","axios","ImageCard","BookmarkModal","RecommendationFeed","imgs","setImgs","modalIsOpen","setModalIsOpen","photoIdBookmarked","setPhotoIdBookmarked","hasMore","setHasMore","loading","setLoading","userLoggedIn","localStorage","getItem","fetchIsCancelled","cancelAxiosRequest","observer","lastImageRef","node","current","disconnect","IntersectionObserver","entries","isIntersecting","fetchRecommendations","observe","setTimeout","method","url","params","batch_size","cancelToken","CancelToken","c","then","res","console","log","data","result","prevImgs","catch","e","isCancel","term","map","image","index","length","id","position","bottom","height","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport '../feed.css';\nimport axios from 'axios';\nimport ImageCard from '../ImageCard/ImageCard';\nimport BookmarkModal from '../../Modals/BookmarkModal/BookmarkModal';\n\nconst RecommendationFeed = () => {\n  const [imgs, setImgs] = useState([]);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [photoIdBookmarked, setPhotoIdBookmarked] = useState(0);\n  const [hasMore, setHasMore] = useState(true);\n  const [loading, setLoading] = useState(false);\n\n  const userLoggedIn = localStorage.getItem('userLoggedIn');\n  const fetchIsCancelled = useRef(false);\n  const cancelAxiosRequest = useRef();\n  const observer = useRef();\n  const lastImageRef = useCallback(\n    (node) => {\n      if (loading) return;\n      if (observer.current) observer.current.disconnect();\n      observer.current = new IntersectionObserver((entries) => {\n        if (entries[0].isIntersecting && hasMore) {\n          setLoading(true);\n          fetchRecommendations();\n        }\n      });\n\n      if (node) observer.current.observe(node);\n    },\n    [loading, hasMore]\n  );\n\n  useEffect(() => {\n    fetchIsCancelled.current = false;\n    setLoading(true);\n\n    setTimeout(() => {\n      fetchRecommendations();\n    }, 150);\n\n    return () => {\n      if (cancelAxiosRequest.current != null) cancelAxiosRequest.current();\n\n      fetchIsCancelled.current = true;\n      setImgs([]);\n      setHasMore(true);\n    };\n  }, []);\n\n  const fetchRecommendations = () => {\n    axios({\n      method: 'GET',\n      url: 'http://localhost:5000/get_recommended_images',\n      params: { batch_size: 10 },\n      cancelToken: new axios.CancelToken(\n        (c) => (cancelAxiosRequest.current = c)\n      ),\n    })\n      .then((res) => {\n        console.log(res);\n        if (res.data.result !== false && !fetchIsCancelled.current) {\n          setHasMore(true);\n          setLoading(false);\n          setImgs((prevImgs) => {\n            return [...prevImgs, ...res.data.result];\n          });\n        } else if (!fetchIsCancelled.current) {\n          console.log('no more images to return');\n          setLoading(false);\n          setHasMore(false);\n        }\n      })\n      .catch((e) => {\n        if (axios.isCancel(e)) {\n          console.log(`previous search request cancelled for - ${term}`);\n          return;\n        }\n      });\n  };\n\n  return (\n    <React.Fragment>\n      {/* <h2>Found Images: {imgs.length}</h2> */}\n\n      <div className=\"image-grid\">\n        {imgs.map((image, index) => {\n          if (image === null) {\n            return null;\n          }\n\n          if (imgs.length === index + 1) {\n            return (\n              <React.Fragment key={index}>\n                <ImageCard\n                  key={image.id}\n                  image={image}\n                  setOpenBookmarkModal={setModalIsOpen}\n                  setPhotoId={setPhotoIdBookmarked}\n                  userLoggedIn={userLoggedIn}\n                />\n                <div\n                  key={index}\n                  ref={lastImageRef}\n                  style={{\n                    position: 'relative',\n                    bottom: '200px',\n                    // border: '3px solid red',\n                    height: '0%',\n                  }}\n                ></div>\n              </React.Fragment>\n            );\n          } else {\n            return (\n              <ImageCard\n                key={image.id}\n                image={image}\n                setOpenBookmarkModal={setModalIsOpen}\n                setPhotoId={setPhotoIdBookmarked}\n                userLoggedIn={userLoggedIn}\n              />\n            );\n          }\n        })}\n      </div>\n      <h2 style={{ textAlign: 'center' }}>{loading && 'Loading...'}</h2>\n      <h2 style={{ textAlign: 'center' }}>\n        {!hasMore && 'No more images to display'}\n      </h2>\n\n      {modalIsOpen ? (\n        <BookmarkModal\n          openModal={true}\n          setOpenModal={setModalIsOpen}\n          photoId={photoIdBookmarked}\n        ></BookmarkModal>\n      ) : null}\n    </React.Fragment>\n  );\n};\n\nexport default RecommendationFeed;\n"]},"metadata":{},"sourceType":"module"}