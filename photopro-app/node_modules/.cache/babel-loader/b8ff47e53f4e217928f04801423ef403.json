{"ast":null,"code":"var _jsxFileName = \"/home/mimi/Desktop/COMP3900/capstone-project-comp3900-f11a-2mjec/photopro-app/src/components/Modals/SignupModal/SignupModal.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport ReactDom from \"react-dom\";\nimport \"./SignupModal.css\";\nimport { Button, FormGroup, FormControl, FormLabel } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport Email from \"./Textfields/Email\";\nimport FirstName from \"./Textfields/FirstName\";\nimport LastName from \"./Textfields/LastName\";\nimport Password from \"./Textfields/Password\";\nimport Username from \"./Textfields/Username\";\nexport default function RegistrationPage(props) {\n  const [submitFormClicked, setSubmitFormClicked] = useState(false);\n  const [firstNameValidated, setFirstNameValidated] = useState([false, \"\"]);\n  const [lastNameValidated, setLastNamedValidated] = useState([false, \"\"]);\n  const [emailValidated, setEmailValidated] = useState([false, \"\"]);\n  const [passwordValidated, setPasswordValidated] = useState([false, \"\"]);\n  const [usernameValidated, setUsernameValidated] = useState([false, \"\"]);\n  const [firstButtonClicked, setFirstButtonClicked] = useState(null);\n  const [showEmailInstructions, setShowEmailInstructions] = useState(false);\n  const [emailVerified, setEmailVerified] = useState(true);\n  const history = useHistory();\n\n  const verifyUser = () => {\n    axios({\n      method: \"POST\",\n      url: \"http://localhost:5000/verify_email\",\n      params: {\n        email: emailValidated[1]\n      }\n    }).then(response => {\n      console.log(response); // if (response.data.result) {\n      //   registerUser();\n      // }\n    });\n  };\n\n  useEffect(() => {\n    const registerUser = () => {\n      axios({\n        method: \"POST\",\n        url: \"http://localhost:5000/create_user\",\n        params: {\n          email: emailValidated[1],\n          password: passwordValidated[1],\n          first: firstNameValidated[1],\n          last: lastNameValidated[1],\n          username: usernameValidated[1]\n        }\n      }).then(response => {\n        console.log(response); // if (response.data.result) {\n        //   history.push(\"/\");\n        //   history.go(0);\n        // }\n      });\n    };\n\n    if (firstNameValidated[0] && lastNameValidated[0] && emailValidated[0] && passwordValidated[0] && usernameValidated[0] && emailVerified) {\n      verifyUser();\n    }\n  }, [firstNameValidated, lastNameValidated, emailValidated, passwordValidated, usernameValidated]);\n  console.log(emailValidated[1]);\n\n  const verifyEmail = () => {\n    console.log(emailValidated[1]);\n\n    if (emailValidated[1] !== null) {\n      axios({\n        method: \"POST\",\n        url: \"http://localhost:5000/verify_email\",\n        params: {\n          email: emailValidated[1]\n        }\n      }).then(response => {\n        console.log(response);\n\n        if (response.data.result) {\n          console.log(response);\n        }\n      });\n    }\n  };\n\n  const handleRegisterClicked = () => {\n    if (firstButtonClicked === null) {\n      setFirstButtonClicked(false); // verifyEmail();\n      // setFirstButtonClicked(false);\n    } // } else {\n    //   verifyEmail();\n    //   setSubmitFormClicked(!submitFormClicked);\n    //   setShowEmailInstructions(true);\n    // }\n\n  };\n\n  const handleVerifyClicked = () => {};\n\n  if (!props.openSignupModal) {\n    return null;\n  } else {\n    return ReactDom.createPortal( /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"overlayStyles\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"signupModal\",\n      onClick: e => {\n        e.stopPropagation();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }\n    }, \"Join PhotoPro\"), /*#__PURE__*/React.createElement(FirstName, {\n      submitFormClicked: submitFormClicked,\n      setFirstNameValidated: setFirstNameValidated,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(LastName, {\n      submitFormClicked: submitFormClicked,\n      setLastNameValidated: setLastNamedValidated,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Email, {\n      submitFormClicked: submitFormClicked,\n      setEmailValidated: setEmailValidated,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Username, {\n      submitFormClicked: submitFormClicked,\n      setUsernameValidated: setUsernameValidated,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Password, {\n      submitFormClicked: submitFormClicked,\n      setPasswordValidated: setPasswordValidated,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }\n    }), firstButtonClicked === null ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"register-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      block: true,\n      bsSize: \"large\",\n      onClick: handleRegisterClicked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 15\n      }\n    }, \"Confirm Details\")) : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"register-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      block: true,\n      bsSize: \"large\",\n      onClick: handleRegisterClicked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }\n    }, \"Confirm Details\")))), document.getElementById(\"toolbarPortal\"));\n  }\n}","map":{"version":3,"sources":["/home/mimi/Desktop/COMP3900/capstone-project-comp3900-f11a-2mjec/photopro-app/src/components/Modals/SignupModal/SignupModal.jsx"],"names":["React","useState","useEffect","ReactDom","Button","FormGroup","FormControl","FormLabel","axios","useHistory","Email","FirstName","LastName","Password","Username","RegistrationPage","props","submitFormClicked","setSubmitFormClicked","firstNameValidated","setFirstNameValidated","lastNameValidated","setLastNamedValidated","emailValidated","setEmailValidated","passwordValidated","setPasswordValidated","usernameValidated","setUsernameValidated","firstButtonClicked","setFirstButtonClicked","showEmailInstructions","setShowEmailInstructions","emailVerified","setEmailVerified","history","verifyUser","method","url","params","email","then","response","console","log","registerUser","password","first","last","username","verifyEmail","data","result","handleRegisterClicked","handleVerifyClicked","openSignupModal","createPortal","e","stopPropagation","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ReactDom from \"react-dom\";\nimport \"./SignupModal.css\";\nimport { Button, FormGroup, FormControl, FormLabel } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport Email from \"./Textfields/Email\";\nimport FirstName from \"./Textfields/FirstName\";\nimport LastName from \"./Textfields/LastName\";\nimport Password from \"./Textfields/Password\";\nimport Username from \"./Textfields/Username\";\n\nexport default function RegistrationPage(props) {\n  const [submitFormClicked, setSubmitFormClicked] = useState(false);\n\n  const [firstNameValidated, setFirstNameValidated] = useState([false, \"\"]);\n  const [lastNameValidated, setLastNamedValidated] = useState([false, \"\"]);\n  const [emailValidated, setEmailValidated] = useState([false, \"\"]);\n  const [passwordValidated, setPasswordValidated] = useState([false, \"\"]);\n  const [usernameValidated, setUsernameValidated] = useState([false, \"\"]);\n\n  const [firstButtonClicked, setFirstButtonClicked] = useState(null);\n\n  const [showEmailInstructions, setShowEmailInstructions] = useState(false);\n\n  const [emailVerified, setEmailVerified] = useState(true);\n  const history = useHistory();\n\n  const verifyUser = () => {\n    axios({\n      method: \"POST\",\n      url: \"http://localhost:5000/verify_email\",\n      params: {\n        email: emailValidated[1],\n      },\n    }).then((response) => {\n      console.log(response);\n      // if (response.data.result) {\n      //   registerUser();\n      // }\n    });\n  };\n\n  useEffect(() => {\n    const registerUser = () => {\n      axios({\n        method: \"POST\",\n        url: \"http://localhost:5000/create_user\",\n        params: {\n          email: emailValidated[1],\n          password: passwordValidated[1],\n          first: firstNameValidated[1],\n          last: lastNameValidated[1],\n          username: usernameValidated[1],\n        },\n      }).then((response) => {\n        console.log(response);\n        // if (response.data.result) {\n        //   history.push(\"/\");\n        //   history.go(0);\n        // }\n      });\n    };\n\n    if (\n      firstNameValidated[0] &&\n      lastNameValidated[0] &&\n      emailValidated[0] &&\n      passwordValidated[0] &&\n      usernameValidated[0] &&\n      emailVerified\n    ) {\n      verifyUser();\n    }\n  }, [\n    firstNameValidated,\n    lastNameValidated,\n    emailValidated,\n    passwordValidated,\n    usernameValidated,\n  ]);\n\n  console.log(emailValidated[1]);\n\n  const verifyEmail = () => {\n    console.log(emailValidated[1]);\n    if (emailValidated[1] !== null) {\n      axios({\n        method: \"POST\",\n        url: \"http://localhost:5000/verify_email\",\n        params: {\n          email: emailValidated[1],\n        },\n      }).then((response) => {\n        console.log(response);\n        if (response.data.result) {\n          console.log(response);\n        }\n      });\n    }\n  };\n  const handleRegisterClicked = () => {\n    if (firstButtonClicked === null) {\n      setFirstButtonClicked(false);\n      // verifyEmail();\n      // setFirstButtonClicked(false);\n    }\n    // } else {\n    //   verifyEmail();\n    //   setSubmitFormClicked(!submitFormClicked);\n    //   setShowEmailInstructions(true);\n    // }\n  };\n\n  const handleVerifyClicked = () => {};\n\n  if (!props.openSignupModal) {\n    return null;\n  } else {\n    return ReactDom.createPortal(\n      <React.Fragment>\n        <div className=\"overlayStyles\" />\n        <div\n          className=\"signupModal\"\n          onClick={(e) => {\n            e.stopPropagation();\n          }}\n        >\n          <h1>Join PhotoPro</h1>\n\n          <FirstName\n            submitFormClicked={submitFormClicked}\n            setFirstNameValidated={setFirstNameValidated}\n          />\n          <LastName\n            submitFormClicked={submitFormClicked}\n            setLastNameValidated={setLastNamedValidated}\n          />\n          <Email\n            submitFormClicked={submitFormClicked}\n            setEmailValidated={setEmailValidated}\n          />\n          <Username\n            submitFormClicked={submitFormClicked}\n            setUsernameValidated={setUsernameValidated}\n          />\n          <Password\n            submitFormClicked={submitFormClicked}\n            setPasswordValidated={setPasswordValidated}\n          />\n\n          {firstButtonClicked === null ? (\n            <div className=\"register-button\">\n              <Button block bsSize=\"large\" onClick={handleRegisterClicked}>\n                Confirm Details\n              </Button>\n            </div>\n          ) : null}\n\n          {/* {firstButtonClicked === false ? (\n            <React.Fragment>\n              <h1>A code is sent to your account in order to verify it.</h1>\n              <div className=\"register-button\">\n                <Button block bsSize=\"large\" onClick={handleVerifyClicked}>\n                  Verify my Email\n                </Button>\n              </div>{\" \"}\n            </React.Fragment>\n          ) : null} */}\n          <div className=\"register-button\">\n            <Button block bsSize=\"large\" onClick={handleRegisterClicked}>\n              Confirm Details\n            </Button>\n          </div>\n\n          {/* <div className=\"register-button\">\n            <Button block bsSize=\"large\" onClick={handleRegisterClicked}>\n              Register\n            </Button>\n          </div> */}\n\n          {/* {showEmailInstructions ? (\n            <React.Fragment>\n              <h2>A code has been sent to your email address.</h2>\n              <h2>Please, verify it by typing the code below:</h2>\n            </React.Fragment>\n          ) : null} */}\n        </div>\n      </React.Fragment>,\n      document.getElementById(\"toolbarPortal\")\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}