{"ast":null,"code":"var _jsxFileName = \"/home/cristian/Documents/projects/COMP3900_PhotoPro/capstone-project-comp3900-f11a-2mjec/photopro-app/src/pages/checkoutPage/CheckoutPage.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport './CheckoutPage.css';\nimport ToolBar from '../../components/toolbar/toolbar';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport CheckoutItem from './checkoutItem/CheckoutItem';\nimport { useHistory } from 'react-router-dom';\nimport ConfirmationModal from './ConfirmationModal/ConfirmationModal';\nimport CardName from './textfields/CardName';\nimport CardNum from './textfields/CardNum';\nimport CardMonth from './textfields/CardMonth';\nimport CardYear from './textfields/CardYear';\nimport CardCvv from './textfields/CardCvv';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: 'ch'\n    }\n  }\n}));\nexport default function CheckoutPage(props) {\n  const [shoppingCartItems, setShoppingCartItems] = useState([]);\n  const [placeOrderClicked, setPlaceOrderClicked] = useState(false);\n  const [cardNumValidated, setCardNumValidated] = useState(false);\n  const [cardNameValidated, setCardNameValidated] = useState(false);\n  const [cardMonthValidated, setCardMonthValidated] = useState(false);\n  const [cardYearValidated, setCardYearValidated] = useState(false);\n  const [cardCvvValidated, setCardCvvValidated] = useState(false);\n  const [confirmationModalOpen, setConfirmationModalOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const classes = useStyles();\n  const history = useHistory();\n  useEffect(() => {\n    const getUserNotPurchasedItems = () => {\n      axios({\n        method: 'GET',\n        url: 'http://localhost:5000/get_user_purchases',\n        params: {\n          save_for_later: 0,\n          purchased: 0\n        }\n      }).then(response => {\n        if (response.data.result !== false) {\n          console.log(response);\n          setShoppingCartItems(response.data.result);\n        }\n      });\n    };\n\n    getUserNotPurchasedItems();\n  }, []);\n  useEffect(() => {\n    const updatePurchase = img_id => {\n      axios({\n        method: 'POST',\n        url: 'http://localhost:5000/update_user_purchases_details',\n        params: {\n          save_for_later: 0,\n          purchased: 1,\n          image_id: img_id\n        }\n      }).then(response => {\n        console.log(response);\n        setConfirmationModalOpen(true);\n      });\n    };\n\n    console.log('CALLED');\n\n    if (cardNumValidated && cardYearValidated && cardMonthValidated && cardNameValidated && cardCvvValidated) {\n      console.log('APPROVED');\n      shoppingCartItems.map(item => {\n        console.log(item.image_id);\n        updatePurchase(item.image_id);\n      });\n    }\n\n    setLoading(false);\n  }, [cardNumValidated, cardNameValidated, cardYearValidated, cardMonthValidated, cardCvvValidated]);\n\n  const handlePlaceOrderButton = () => {\n    setLoading(true);\n    setPlaceOrderClicked(!placeOrderClicked);\n  };\n\n  const handleEditButton = () => {\n    history.push('/shopping-cart');\n  };\n\n  const checkoutItemsComponents = shoppingCartItems.map(item => {\n    //console.log(item);\n    return /*#__PURE__*/React.createElement(CheckoutItem, {\n      key: item.image_id,\n      image_id: item.image_id,\n      img: item.img,\n      price: item.price,\n      title: item.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }\n    });\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ToolBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"checkout-wrapper\",\n    style: {\n      marginTop: '15%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, \"Checkout\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"checkout-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"payment-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cart-details-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CardNum, {\n    placeOrderClicked: placeOrderClicked,\n    setCardNumValidated: setCardNumValidated,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CardName, {\n    placeOrderClicked: placeOrderClicked,\n    setCardNameValidated: setCardNameValidated,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CardMonth, {\n    placeOrderClicked: placeOrderClicked,\n    setCardMonthValidated: setCardMonthValidated,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CardYear, {\n    placeOrderClicked: placeOrderClicked,\n    setCardYearValidated: setCardYearValidated,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CardCvv, {\n    placeOrderClicked: placeOrderClicked,\n    setCardCvvValidated: setCardCvvValidated,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    onClick: handlePlaceOrderButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }, \"PLACE ORDER\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }\n  }, loading && 'Purchase in progress, please wait...')))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"purchase-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: handleEditButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }, \"Total number of item(s): \", shoppingCartItems.length), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, \"TOTAL TO PAY: $\", props.location.state.totalPrice), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"purchased-items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, checkoutItemsComponents)))), confirmationModalOpen ? /*#__PURE__*/React.createElement(ConfirmationModal, {\n    isOpen: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 32\n    }\n  }) : null);\n}","map":{"version":3,"sources":["/home/cristian/Documents/projects/COMP3900_PhotoPro/capstone-project-comp3900-f11a-2mjec/photopro-app/src/pages/checkoutPage/CheckoutPage.jsx"],"names":["React","useState","useEffect","ToolBar","Button","axios","CheckoutItem","useHistory","ConfirmationModal","CardName","CardNum","CardMonth","CardYear","CardCvv","makeStyles","useStyles","theme","root","margin","spacing","width","CheckoutPage","props","shoppingCartItems","setShoppingCartItems","placeOrderClicked","setPlaceOrderClicked","cardNumValidated","setCardNumValidated","cardNameValidated","setCardNameValidated","cardMonthValidated","setCardMonthValidated","cardYearValidated","setCardYearValidated","cardCvvValidated","setCardCvvValidated","confirmationModalOpen","setConfirmationModalOpen","loading","setLoading","classes","history","getUserNotPurchasedItems","method","url","params","save_for_later","purchased","then","response","data","result","console","log","updatePurchase","img_id","image_id","map","item","handlePlaceOrderButton","handleEditButton","push","checkoutItemsComponents","img","price","title","marginTop","length","location","state","totalPrice"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './CheckoutPage.css';\nimport ToolBar from '../../components/toolbar/toolbar';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport CheckoutItem from './checkoutItem/CheckoutItem';\nimport { useHistory } from 'react-router-dom';\nimport ConfirmationModal from './ConfirmationModal/ConfirmationModal';\n\nimport CardName from './textfields/CardName';\nimport CardNum from './textfields/CardNum';\nimport CardMonth from './textfields/CardMonth';\nimport CardYear from './textfields/CardYear';\nimport CardCvv from './textfields/CardCvv';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: 'ch',\n    },\n  },\n}));\n\nexport default function CheckoutPage(props) {\n  const [shoppingCartItems, setShoppingCartItems] = useState([]);\n  const [placeOrderClicked, setPlaceOrderClicked] = useState(false);\n  const [cardNumValidated, setCardNumValidated] = useState(false);\n  const [cardNameValidated, setCardNameValidated] = useState(false);\n  const [cardMonthValidated, setCardMonthValidated] = useState(false);\n  const [cardYearValidated, setCardYearValidated] = useState(false);\n  const [cardCvvValidated, setCardCvvValidated] = useState(false);\n  const [confirmationModalOpen, setConfirmationModalOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const classes = useStyles();\n  const history = useHistory();\n\n  useEffect(() => {\n    const getUserNotPurchasedItems = () => {\n      axios({\n        method: 'GET',\n        url: 'http://localhost:5000/get_user_purchases',\n        params: {\n          save_for_later: 0,\n          purchased: 0,\n        },\n      }).then((response) => {\n        if (response.data.result !== false) {\n          console.log(response);\n          setShoppingCartItems(response.data.result);\n        }\n      });\n    };\n    getUserNotPurchasedItems();\n  }, []);\n\n  useEffect(() => {\n    const updatePurchase = (img_id) => {\n      axios({\n        method: 'POST',\n        url: 'http://localhost:5000/update_user_purchases_details',\n        params: {\n          save_for_later: 0,\n          purchased: 1,\n          image_id: img_id,\n        },\n      }).then((response) => {\n        console.log(response);\n        setConfirmationModalOpen(true);\n      });\n    };\n\n    console.log('CALLED');\n    if (\n      cardNumValidated &&\n      cardYearValidated &&\n      cardMonthValidated &&\n      cardNameValidated &&\n      cardCvvValidated\n    ) {\n      console.log('APPROVED');\n      shoppingCartItems.map((item) => {\n        console.log(item.image_id);\n        updatePurchase(item.image_id);\n      });\n    }\n    setLoading(false);\n  }, [\n    cardNumValidated,\n    cardNameValidated,\n    cardYearValidated,\n    cardMonthValidated,\n    cardCvvValidated,\n  ]);\n\n  const handlePlaceOrderButton = () => {\n    setLoading(true);\n    setPlaceOrderClicked(!placeOrderClicked);\n  };\n\n  const handleEditButton = () => {\n    history.push('/shopping-cart');\n  };\n\n  const checkoutItemsComponents = shoppingCartItems.map((item) => {\n    //console.log(item);\n    return (\n      <CheckoutItem\n        key={item.image_id}\n        image_id={item.image_id}\n        img={item.img}\n        price={item.price}\n        title={item.title}\n      />\n    );\n  });\n\n  return (\n    <React.Fragment>\n      <ToolBar />\n      <div className=\"checkout-wrapper\" style={{ marginTop: '15%' }}>\n        <h1>Checkout</h1>\n        <div className=\"checkout-grid\">\n          <div className=\"payment-info\">\n            {/* <h2>Fill payment info:</h2> */}\n            <form className={classes.root} noValidate autoComplete=\"off\">\n              <div className=\"cart-details-grid\">\n                <CardNum\n                  placeOrderClicked={placeOrderClicked}\n                  setCardNumValidated={setCardNumValidated}\n                />\n                <CardName\n                  placeOrderClicked={placeOrderClicked}\n                  setCardNameValidated={setCardNameValidated}\n                />\n                <CardMonth\n                  placeOrderClicked={placeOrderClicked}\n                  setCardMonthValidated={setCardMonthValidated}\n                />\n                <CardYear\n                  placeOrderClicked={placeOrderClicked}\n                  setCardYearValidated={setCardYearValidated}\n                />\n                <CardCvv\n                  placeOrderClicked={placeOrderClicked}\n                  setCardCvvValidated={setCardCvvValidated}\n                />\n\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  size=\"large\"\n                  onClick={handlePlaceOrderButton}\n                >\n                  PLACE ORDER\n                </Button>\n                <h2>{loading && 'Purchase in progress, please wait...'}</h2>\n              </div>\n            </form>\n          </div>\n          <div className=\"purchase-info\">\n            <Button color=\"primary\" onClick={handleEditButton}>\n              Edit\n            </Button>\n            <h2>Total number of item(s): {shoppingCartItems.length}</h2>\n\n            <h2>TOTAL TO PAY: ${props.location.state.totalPrice}</h2>\n            <div className=\"purchased-items\">{checkoutItemsComponents}</div>\n          </div>\n        </div>\n      </div>\n\n      {confirmationModalOpen ? <ConfirmationModal isOpen={true} /> : null}\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}