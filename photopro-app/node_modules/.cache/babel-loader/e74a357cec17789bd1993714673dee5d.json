{"ast":null,"code":"var _jsxFileName = \"/home/matthew/Projects/capstone-project-comp3900-f11a-2mjec/photopro-app/src/components/modal/BookmarkModal.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport ReactDom from \"react-dom\";\nimport \"./BookmarkModal.css\";\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport axios from \"axios\";\nimport CollectionFolder from \"./collectionFolder/CollectionFolder\";\nexport default function BookmarkModal({\n  openModal,\n  setOpenModal,\n  photoId\n}) {\n  const [enteredCollection, setEnteredCollection] = useState(\"\");\n  const [newCollectionEntered, setNewCollectionEntered] = useState(\"\");\n  const [usersCollections, setUsersCollections] = useState(null);\n  const [showCreateCollectionButton, setShowCreateCollectionButton] = useState(true);\n  const [privateCollection, setPrivateCollection] = useState(0);\n  console.log(\"TESTT\");\n\n  const getUsersCollections = () => {\n    const userID = localStorage.getItem('userID');\n    axios({\n      method: \"GET\",\n      url: \"http://localhost:5000/get_users_collection\",\n      params: {\n        user_id: userID,\n        batch_size: 20\n      }\n    }).then(response => {\n      console.log(response);\n\n      if (response.data.result !== false) {\n        console.log(\"not false\");\n        setUsersCollections(response.data.result);\n      }\n    });\n  };\n\n  useEffect(() => {\n    console.log(\"GETTING USERS COLLECTION\");\n    getUsersCollections();\n  }, []);\n  useEffect(() => {\n    console.log(`collection button state changed to ${showCreateCollectionButton}`);\n  }, [showCreateCollectionButton]);\n\n  if (!openModal) {\n    return null;\n  }\n\n  let collectionFolders = null;\n\n  if (usersCollections != null) {\n    collectionFolders = usersCollections.map(collection => {\n      return /*#__PURE__*/React.createElement(CollectionFolder, {\n        key: collection.collection_id,\n        collectionInfo: collection,\n        photoId: photoId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }\n      });\n    });\n  } //console.log(collectionFolders);\n\n\n  const handleEnteredCollection = e => {\n    e.preventDefault(); //getUsersCollections();\n\n    console.log(enteredCollection);\n    createCollections(); //setNewCollectionEntered(enteredCollection);\n    //addPhotoToCollections();\n  };\n\n  const createCollections = () => {\n    axios({\n      method: \"POST\",\n      url: \"http://localhost:5000/create_collection\",\n      params: {\n        collection_name: enteredCollection,\n        private: privateCollection\n      }\n    }).then(response => {\n      console.log(response);\n      console.log(`colection created should return collection_id ${response}`);\n\n      if (response.data.result) {\n        addPhotoToCollections(response.data.result);\n      }\n    });\n  };\n\n  const addPhotoToCollections = col_id => {\n    axios({\n      method: \"POST\",\n      url: \"http://localhost:5000/add_photo_to_collection\",\n      params: {\n        collection_id: col_id,\n        image_id: photoId\n      }\n    }).then(response => {\n      console.log(response);\n    });\n  };\n\n  console.log(`collectionButton = ${showCreateCollectionButton}`);\n  return ReactDom.createPortal( /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlayStyles\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bookmarkModal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"closeButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    variant: \"contained\",\n    onClick: () => {\n      setShowCreateCollectionButton(true);\n      setOpenModal(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(HighlightOffIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, \"Add to Collection\"), showCreateCollectionButton ? /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: () => {\n      setShowCreateCollectionButton(false);\n      console.log(\"create collection button clicked\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, \"Create a new collection\") : null, showCreateCollectionButton ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"collectionFolders\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }, collectionFolders) : null, !showCreateCollectionButton ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"enteredCollection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleEnteredCollection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"reply\",\n    onChange: e => setEnteredCollection(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 15\n    }\n  }, \"Create collection\")), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: privateCollection,\n      onChange: () => {\n        if (privateCollection == true) {\n          setPrivateCollection(0);\n        } else {\n          setPrivateCollection(1);\n        }\n      },\n      name: \"privateCheckbox\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }\n    }),\n    label: \"Private\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: () => {\n      setShowCreateCollectionButton(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }, \"Cancel\")) : null)), document.getElementById(\"portal\"));\n}","map":{"version":3,"sources":["/home/matthew/Projects/capstone-project-comp3900-f11a-2mjec/photopro-app/src/components/modal/BookmarkModal.jsx"],"names":["React","useState","useEffect","ReactDom","HighlightOffIcon","IconButton","Button","Checkbox","FormControlLabel","axios","CollectionFolder","BookmarkModal","openModal","setOpenModal","photoId","enteredCollection","setEnteredCollection","newCollectionEntered","setNewCollectionEntered","usersCollections","setUsersCollections","showCreateCollectionButton","setShowCreateCollectionButton","privateCollection","setPrivateCollection","console","log","getUsersCollections","userID","localStorage","getItem","method","url","params","user_id","batch_size","then","response","data","result","collectionFolders","map","collection","collection_id","handleEnteredCollection","e","preventDefault","createCollections","collection_name","private","addPhotoToCollections","col_id","image_id","createPortal","target","value","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ReactDom from \"react-dom\";\nimport \"./BookmarkModal.css\";\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\n\nimport axios from \"axios\";\n\nimport CollectionFolder from \"./collectionFolder/CollectionFolder\";\n\nexport default function BookmarkModal({ openModal, setOpenModal, photoId }) {\n  const [enteredCollection, setEnteredCollection] = useState(\"\");\n  const [newCollectionEntered, setNewCollectionEntered] = useState(\"\");\n\n  const [usersCollections, setUsersCollections] = useState(null);\n\n  const [showCreateCollectionButton, setShowCreateCollectionButton] = useState(\n    true\n  );\n\n  const [privateCollection, setPrivateCollection] = useState(0);\n\n  console.log(\"TESTT\");\n\n  const getUsersCollections = () => {\n    const userID = localStorage.getItem('userID');\n    axios({\n      method: \"GET\",\n      url: \"http://localhost:5000/get_users_collection\",\n      params: {\n        user_id: userID,\n        batch_size: 20,\n      },\n    }).then((response) => {\n      console.log(response);\n      if (response.data.result !== false) {\n        console.log(\"not false\");\n        setUsersCollections(response.data.result);\n      }\n    });\n  };\n\n  useEffect(() => {\n    console.log(\"GETTING USERS COLLECTION\");\n    getUsersCollections();\n  }, []);\n\n  useEffect(() => {\n    console.log(\n      `collection button state changed to ${showCreateCollectionButton}`\n    );\n  }, [showCreateCollectionButton]);\n\n  if (!openModal) {\n    return null;\n  }\n\n  let collectionFolders = null;\n  if (usersCollections != null) {\n    collectionFolders = usersCollections.map((collection) => {\n      return (\n        <CollectionFolder\n          key={collection.collection_id}\n          collectionInfo={collection}\n          photoId={photoId}\n        />\n      );\n    });\n  }\n\n  //console.log(collectionFolders);\n\n  const handleEnteredCollection = (e) => {\n    e.preventDefault();\n    //getUsersCollections();\n    console.log(enteredCollection);\n\n    createCollections();\n\n    //setNewCollectionEntered(enteredCollection);\n    //addPhotoToCollections();\n  };\n\n  const createCollections = () => {\n    axios({\n      method: \"POST\",\n      url: \"http://localhost:5000/create_collection\",\n      params: {\n        collection_name: enteredCollection,\n        private: privateCollection,\n      },\n    }).then((response) => {\n      console.log(response);\n      console.log(`colection created should return collection_id ${response}`);\n      if (response.data.result) {\n        addPhotoToCollections(response.data.result);\n      }\n    });\n  };\n\n  const addPhotoToCollections = (col_id) => {\n    axios({\n      method: \"POST\",\n      url: \"http://localhost:5000/add_photo_to_collection\",\n      params: {\n        collection_id: col_id,\n        image_id: photoId,\n      },\n    }).then((response) => {\n      console.log(response);\n    });\n  };\n\n  console.log(`collectionButton = ${showCreateCollectionButton}`);\n\n  return ReactDom.createPortal(\n    <React.Fragment>\n      <div className=\"overlayStyles\" />\n      <div className=\"bookmarkModal\">\n        <div className=\"closeButton\">\n          <IconButton\n            variant=\"contained\"\n            onClick={() => {\n              setShowCreateCollectionButton(true);\n              setOpenModal(false);\n            }}\n          >\n            <HighlightOffIcon />\n          </IconButton>\n        </div>\n        <h2>Add to Collection</h2>\n\n        {showCreateCollectionButton ? (\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            onClick={() => {\n              setShowCreateCollectionButton(false);\n              console.log(\"create collection button clicked\");\n            }}\n          >\n            Create a new collection\n          </Button>\n        ) : null}\n\n        {showCreateCollectionButton ? (\n          <div className=\"collectionFolders\">{collectionFolders}</div>\n        ) : null}\n\n        {!showCreateCollectionButton ? (\n          <div className=\"enteredCollection\">\n            <form onSubmit={handleEnteredCollection}>\n              <div>\n                <input\n                  type=\"reply\"\n                  onChange={(e) => setEnteredCollection(e.target.value)}\n                />\n              </div>\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                Create collection\n              </Button>\n            </form>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={privateCollection}\n                  onChange={() => {\n                    if (privateCollection == true) {\n                      setPrivateCollection(0);\n                    } else {\n                      setPrivateCollection(1);\n                    }\n                  }}\n                  name=\"privateCheckbox\"\n                  color=\"primary\"\n                />\n              }\n              label=\"Private\"\n            />\n\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => {\n                setShowCreateCollectionButton(true);\n              }}\n            >\n              Cancel\n            </Button>\n          </div>\n        ) : null}\n      </div>\n    </React.Fragment>,\n    document.getElementById(\"portal\")\n  );\n}\n"]},"metadata":{},"sourceType":"module"}