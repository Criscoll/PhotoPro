{"ast":null,"code":"var _jsxFileName = \"/home/matthew/Projects/capstone-project-comp3900-f11a-2mjec/photopro-app/src/components/Modals/BookmarkModal/BookmarkModal.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport ReactDom from 'react-dom';\nimport './BookmarkModal.css';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport axios from 'axios';\nimport CollectionFolder from './collectionFolder/CollectionFolder';\nimport BookmarkConfirmationModal from './BookmarkConfirmationModal/BookmarkConfirmationModal';\nexport default function BookmarkModal(props) {\n  const [bookmarkConfirmationModalOpen, setBookmarkConfirmationModalOpen] = useState(false);\n  const [modalCollectionName, setModalCollectionName] = useState(null);\n  const [enteredCollection, setEnteredCollection] = useState('');\n  const [usersCollections, setUsersCollections] = useState([]);\n  const [showCreateCollectionButton, setShowCreateCollectionButton] = useState(true);\n  const [privateCollection, setPrivateCollection] = useState(0);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const getUsersCollections = () => {\n      const userID = localStorage.getItem('userID');\n      axios({\n        method: 'GET',\n        url: 'http://localhost:5000/get_users_collection',\n        params: {\n          user_id: userID,\n          batch_size: 20\n        }\n      }).then(response => {\n        if (response.data.result !== false) {\n          setUsersCollections(response.data.result);\n          setLoading(false);\n        }\n      });\n    };\n\n    getUsersCollections();\n  }, []);\n\n  const addPhotoToCollections = col_id => {\n    axios({\n      method: 'POST',\n      url: 'http://localhost:5000/add_photo_to_collection',\n      params: {\n        collection_id: col_id,\n        image_id: props.photoId\n      }\n    }).then(response => {\n      console.log(response.data.result);\n\n      if (response.data.result) {\n        const collection = usersCollections.filter(collection => collection.collection_id === col_id);\n        setModalCollectionName(collection.collection_name);\n        setBookmarkConfirmationModalOpen(true);\n      }\n    });\n  };\n\n  const handleEnteredCollection = e => {\n    e.preventDefault();\n\n    const createCollections = () => {\n      axios({\n        method: 'POST',\n        url: 'http://localhost:5000/create_collection',\n        params: {\n          collection_name: enteredCollection,\n          private: privateCollection\n        }\n      }).then(response => {\n        if (response.data.result) {\n          addPhotoToCollections(response.data.result);\n        }\n      });\n    };\n\n    createCollections();\n  };\n\n  if (!props.openModal) {\n    return null;\n  } else {\n    return ReactDom.createPortal( /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"overlayStyles\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bookmarkModal\",\n      onClick: e => {\n        e.stopPropagation();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }, \"Add to Collection\"), showCreateCollectionButton ? /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: () => {\n        setShowCreateCollectionButton(false);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, \"Create a new collection\") : null, showCreateCollectionButton ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"collection-folders\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, loading && 'Loading...', usersCollections.map(collection => {\n      return /*#__PURE__*/React.createElement(CollectionFolder, {\n        key: collection.collection_id,\n        collectionInfo: collection,\n        photoId: props.photoId,\n        addPhotoToCollections: addPhotoToCollections,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 19\n        }\n      });\n    })) : null, !showCreateCollectionButton ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"enteredCollection\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleEnteredCollection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"reply\",\n      onChange: e => setEnteredCollection(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormControlLabel, {\n      control: /*#__PURE__*/React.createElement(Checkbox, {\n        checked: privateCollection,\n        onChange: () => {\n          if (privateCollection == true) {\n            setPrivateCollection(0);\n          } else {\n            setPrivateCollection(1);\n          }\n        },\n        name: \"privateCheckbox\",\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 23\n        }\n      }),\n      label: \"Private\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }\n    }, \"Create collection\")), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => {\n        setShowCreateCollectionButton(true);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 15\n      }\n    }, \"Cancel\")) : null), /*#__PURE__*/React.createElement(\"div\", {\n      onClick: () => {\n        setBookmarkConfirmationModalOpen(false);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }\n    }, bookmarkConfirmationModalOpen ? /*#__PURE__*/React.createElement(BookmarkConfirmationModal, {\n      openModal: true,\n      photoID: props.photoId,\n      modalCollectionName: modalCollectionName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 13\n      }\n    }) : null)), document.getElementById('confirmationPortal'));\n  }\n}","map":{"version":3,"sources":["/home/matthew/Projects/capstone-project-comp3900-f11a-2mjec/photopro-app/src/components/Modals/BookmarkModal/BookmarkModal.jsx"],"names":["React","useState","useEffect","ReactDom","Button","Checkbox","FormControlLabel","axios","CollectionFolder","BookmarkConfirmationModal","BookmarkModal","props","bookmarkConfirmationModalOpen","setBookmarkConfirmationModalOpen","modalCollectionName","setModalCollectionName","enteredCollection","setEnteredCollection","usersCollections","setUsersCollections","showCreateCollectionButton","setShowCreateCollectionButton","privateCollection","setPrivateCollection","loading","setLoading","getUsersCollections","userID","localStorage","getItem","method","url","params","user_id","batch_size","then","response","data","result","addPhotoToCollections","col_id","collection_id","image_id","photoId","console","log","collection","filter","collection_name","handleEnteredCollection","e","preventDefault","createCollections","private","openModal","createPortal","stopPropagation","map","target","value","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactDom from 'react-dom';\nimport './BookmarkModal.css';\n\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nimport axios from 'axios';\n\nimport CollectionFolder from './collectionFolder/CollectionFolder';\nimport BookmarkConfirmationModal from './BookmarkConfirmationModal/BookmarkConfirmationModal';\n\nexport default function BookmarkModal(props) {\n  const [\n    bookmarkConfirmationModalOpen,\n    setBookmarkConfirmationModalOpen,\n  ] = useState(false);\n  const [modalCollectionName, setModalCollectionName] = useState(null);\n  const [enteredCollection, setEnteredCollection] = useState('');\n\n  const [usersCollections, setUsersCollections] = useState([]);\n\n  const [showCreateCollectionButton, setShowCreateCollectionButton] = useState(\n    true\n  );\n  const [privateCollection, setPrivateCollection] = useState(0);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const getUsersCollections = () => {\n      const userID = localStorage.getItem('userID');\n      axios({\n        method: 'GET',\n        url: 'http://localhost:5000/get_users_collection',\n        params: {\n          user_id: userID,\n          batch_size: 20,\n        },\n      }).then((response) => {\n        if (response.data.result !== false) {\n          setUsersCollections(response.data.result);\n          setLoading(false);\n        }\n      });\n    };\n    getUsersCollections();\n  }, []);\n\n  const addPhotoToCollections = (col_id) => {\n    axios({\n      method: 'POST',\n      url: 'http://localhost:5000/add_photo_to_collection',\n      params: {\n        collection_id: col_id,\n        image_id: props.photoId,\n      },\n    }).then((response) => {\n      console.log(response.data.result);\n      if (response.data.result) {\n        const collection = usersCollections.filter(\n          (collection) => collection.collection_id === col_id\n        );\n\n        setModalCollectionName(collection.collection_name);\n        setBookmarkConfirmationModalOpen(true);\n      }\n    });\n  };\n\n  const handleEnteredCollection = (e) => {\n    e.preventDefault();\n    const createCollections = () => {\n      axios({\n        method: 'POST',\n        url: 'http://localhost:5000/create_collection',\n        params: {\n          collection_name: enteredCollection,\n          private: privateCollection,\n        },\n      }).then((response) => {\n        if (response.data.result) {\n          addPhotoToCollections(response.data.result);\n        }\n      });\n    };\n    createCollections();\n  };\n\n  if (!props.openModal) {\n    return null;\n  } else {\n    return ReactDom.createPortal(\n      <React.Fragment>\n        <div className=\"overlayStyles\" />\n        <div\n          className=\"bookmarkModal\"\n          onClick={(e) => {\n            e.stopPropagation();\n          }}\n        >\n          <h2>Add to Collection</h2>\n\n          {showCreateCollectionButton ? (\n            <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              onClick={() => {\n                setShowCreateCollectionButton(false);\n              }}\n            >\n              Create a new collection\n            </Button>\n          ) : null}\n\n          {showCreateCollectionButton ? (\n            <div className=\"collection-folders\">\n              {loading && 'Loading...'}\n              {usersCollections.map((collection) => {\n                return (\n                  <CollectionFolder\n                    key={collection.collection_id}\n                    collectionInfo={collection}\n                    photoId={props.photoId}\n                    addPhotoToCollections={addPhotoToCollections}\n                  />\n                );\n              })}\n            </div>\n          ) : null}\n\n          {!showCreateCollectionButton ? (\n            <div className=\"enteredCollection\">\n              <form onSubmit={handleEnteredCollection}>\n                <div>\n                  <input\n                    type=\"reply\"\n                    onChange={(e) => setEnteredCollection(e.target.value)}\n                  />\n                </div>\n                <div>\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={privateCollection}\n                        onChange={() => {\n                          if (privateCollection == true) {\n                            setPrivateCollection(0);\n                          } else {\n                            setPrivateCollection(1);\n                          }\n                        }}\n                        name=\"privateCheckbox\"\n                        color=\"primary\"\n                      />\n                    }\n                    label=\"Private\"\n                  />\n                </div>\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                  Create collection\n                </Button>\n              </form>\n\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => {\n                  setShowCreateCollectionButton(true);\n                }}\n              >\n                Cancel\n              </Button>\n            </div>\n          ) : null}\n        </div>\n\n        <div\n          onClick={() => {\n            setBookmarkConfirmationModalOpen(false);\n          }}\n        >\n          {bookmarkConfirmationModalOpen ? (\n            <BookmarkConfirmationModal\n              openModal={true}\n              photoID={props.photoId}\n              modalCollectionName={modalCollectionName}\n            />\n          ) : null}\n        </div>\n      </React.Fragment>,\n      document.getElementById('confirmationPortal')\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}