{"ast":null,"code":"import { Platform, UnavailabilityError } from '@unimodules/core';\nimport mapValues from 'lodash/mapValues';\nimport * as React from 'react';\nimport { findNodeHandle } from 'react-native';\nimport { PermissionStatus } from './Camera.types';\nimport ExponentCamera from './ExponentCamera';\nimport CameraManager from './ExponentCameraManager';\nconst EventThrottleMs = 500;\nconst _PICTURE_SAVED_CALLBACKS = {};\nlet _GLOBAL_PICTURE_ID = 1;\n\nfunction ensurePictureOptions(options) {\n  const pictureOptions = !options || typeof options !== 'object' ? {} : options;\n\n  if (!pictureOptions.quality) {\n    pictureOptions.quality = 1;\n  }\n\n  if (pictureOptions.onPictureSaved) {\n    const id = _GLOBAL_PICTURE_ID++;\n    _PICTURE_SAVED_CALLBACKS[id] = pictureOptions.onPictureSaved;\n    pictureOptions.id = id;\n    pictureOptions.fastMode = true;\n  }\n\n  return pictureOptions;\n}\n\nfunction ensureRecordingOptions(options) {\n  let recordingOptions = options || {};\n\n  if (!recordingOptions || typeof recordingOptions !== 'object') {\n    recordingOptions = {};\n  } else if (typeof recordingOptions.quality === 'string') {\n    recordingOptions.quality = Camera.Constants.VideoQuality[recordingOptions.quality];\n  }\n\n  return recordingOptions;\n}\n\nfunction ensureNativeProps(options) {\n  let props = options || {};\n\n  if (!props || typeof props !== 'object') {\n    props = {};\n  }\n\n  const newProps = mapValues(props, convertProp);\n  const propsKeys = Object.keys(newProps); // barCodeTypes is deprecated\n\n  if (!propsKeys.includes('barCodeScannerSettings') && propsKeys.includes('barCodeTypes')) {\n    if (__DEV__) {\n      console.warn(`The \"barCodeTypes\" prop for Camera is deprecated and will be removed in SDK 34. Use \"barCodeScannerSettings\" instead.`);\n    }\n\n    newProps.barCodeScannerSettings = {\n      // @ts-ignore\n      barCodeTypes: newProps.barCodeTypes\n    };\n  }\n\n  if (props.onBarCodeScanned) {\n    newProps.barCodeScannerEnabled = true;\n  }\n\n  if (props.onFacesDetected) {\n    newProps.faceDetectorEnabled = true;\n  }\n\n  if (Platform.OS !== 'android') {\n    delete newProps.ratio;\n    delete newProps.useCamera2Api;\n  }\n\n  return newProps;\n}\n\nfunction convertProp(value, key) {\n  if (typeof value === 'string' && Camera.ConversionTables[key]) {\n    return Camera.ConversionTables[key][value];\n  }\n\n  return value;\n}\n\nfunction _onPictureSaved({\n  nativeEvent\n}) {\n  const {\n    id,\n    data\n  } = nativeEvent;\n  const callback = _PICTURE_SAVED_CALLBACKS[id];\n\n  if (callback) {\n    callback(data);\n    delete _PICTURE_SAVED_CALLBACKS[id];\n  }\n}\n\nlet Camera =\n/** @class */\n(() => {\n  class Camera extends React.Component {\n    constructor() {\n      super(...arguments);\n      this._lastEvents = {};\n      this._lastEventsTimes = {};\n\n      this._onCameraReady = () => {\n        if (this.props.onCameraReady) {\n          this.props.onCameraReady();\n        }\n      };\n\n      this._onMountError = ({\n        nativeEvent\n      }) => {\n        if (this.props.onMountError) {\n          this.props.onMountError(nativeEvent);\n        }\n      };\n\n      this._onObjectDetected = callback => ({\n        nativeEvent\n      }) => {\n        const {\n          type\n        } = nativeEvent;\n\n        if (this._lastEvents[type] && this._lastEventsTimes[type] && JSON.stringify(nativeEvent) === this._lastEvents[type] && new Date().getTime() - this._lastEventsTimes[type].getTime() < EventThrottleMs) {\n          return;\n        }\n\n        if (callback) {\n          callback(nativeEvent);\n          this._lastEventsTimes[type] = new Date();\n          this._lastEvents[type] = JSON.stringify(nativeEvent);\n        }\n      };\n\n      this._setReference = ref => {\n        if (ref) {\n          this._cameraRef = ref; // TODO(Bacon): Unify these - perhaps with hooks?\n\n          if (Platform.OS === 'web') {\n            this._cameraHandle = ref;\n          } else {\n            this._cameraHandle = findNodeHandle(ref);\n          }\n        } else {\n          this._cameraRef = null;\n          this._cameraHandle = null;\n        }\n      };\n    }\n\n    static async isAvailableAsync() {\n      if (!CameraManager.isAvailableAsync) {\n        throw new UnavailabilityError('expo-camera', 'isAvailableAsync');\n      }\n\n      return await CameraManager.isAvailableAsync();\n    }\n\n    static async getAvailableCameraTypesAsync() {\n      if (!CameraManager.getAvailableCameraTypesAsync) {\n        throw new UnavailabilityError('expo-camera', 'getAvailableCameraTypesAsync');\n      }\n\n      return await CameraManager.getAvailableCameraTypesAsync();\n    }\n\n    static async getPermissionsAsync() {\n      return CameraManager.getPermissionsAsync();\n    }\n\n    static async requestPermissionsAsync() {\n      return CameraManager.requestPermissionsAsync();\n    }\n\n    async takePictureAsync(options) {\n      const pictureOptions = ensurePictureOptions(options);\n      return await CameraManager.takePicture(pictureOptions, this._cameraHandle);\n    }\n\n    async getSupportedRatiosAsync() {\n      if (!CameraManager.getSupportedRatios) {\n        throw new UnavailabilityError('Camera', 'getSupportedRatiosAsync');\n      }\n\n      return await CameraManager.getSupportedRatios(this._cameraHandle);\n    }\n\n    async getAvailablePictureSizesAsync(ratio) {\n      if (!CameraManager.getAvailablePictureSizes) {\n        throw new UnavailabilityError('Camera', 'getAvailablePictureSizesAsync');\n      }\n\n      return await CameraManager.getAvailablePictureSizes(ratio, this._cameraHandle);\n    }\n\n    async recordAsync(options) {\n      if (!CameraManager.record) {\n        throw new UnavailabilityError('Camera', 'recordAsync');\n      }\n\n      const recordingOptions = ensureRecordingOptions(options);\n      return await CameraManager.record(recordingOptions, this._cameraHandle);\n    }\n\n    stopRecording() {\n      if (!CameraManager.stopRecording) {\n        throw new UnavailabilityError('Camera', 'stopRecording');\n      }\n\n      CameraManager.stopRecording(this._cameraHandle);\n    }\n\n    pausePreview() {\n      if (!CameraManager.pausePreview) {\n        throw new UnavailabilityError('Camera', 'pausePreview');\n      }\n\n      CameraManager.pausePreview(this._cameraHandle);\n    }\n\n    resumePreview() {\n      if (!CameraManager.resumePreview) {\n        throw new UnavailabilityError('Camera', 'resumePreview');\n      }\n\n      CameraManager.resumePreview(this._cameraHandle);\n    }\n\n    render() {\n      const nativeProps = ensureNativeProps(this.props);\n      const onBarCodeScanned = this.props.onBarCodeScanned ? this._onObjectDetected(this.props.onBarCodeScanned) : undefined;\n\n      const onFacesDetected = this._onObjectDetected(this.props.onFacesDetected);\n\n      return React.createElement(ExponentCamera, Object.assign({}, nativeProps, {\n        ref: this._setReference,\n        onCameraReady: this._onCameraReady,\n        onMountError: this._onMountError,\n        onBarCodeScanned: onBarCodeScanned,\n        onFacesDetected: onFacesDetected,\n        onPictureSaved: _onPictureSaved\n      }));\n    }\n\n  }\n\n  Camera.Constants = {\n    Type: CameraManager.Type,\n    FlashMode: CameraManager.FlashMode,\n    AutoFocus: CameraManager.AutoFocus,\n    WhiteBalance: CameraManager.WhiteBalance,\n    VideoQuality: CameraManager.VideoQuality,\n    VideoStabilization: CameraManager.VideoStabilization || {}\n  }; // Values under keys from this object will be transformed to native options\n\n  Camera.ConversionTables = {\n    type: CameraManager.Type,\n    flashMode: CameraManager.FlashMode,\n    autoFocus: CameraManager.AutoFocus,\n    whiteBalance: CameraManager.WhiteBalance\n  };\n  Camera.defaultProps = {\n    zoom: 0,\n    ratio: '4:3',\n    focusDepth: 0,\n    faceDetectorSettings: {},\n    type: CameraManager.Type.back,\n    autoFocus: CameraManager.AutoFocus.on,\n    flashMode: CameraManager.FlashMode.off,\n    whiteBalance: CameraManager.WhiteBalance.auto\n  };\n  return Camera;\n})();\n\nexport default Camera;\nexport const {\n  Constants,\n  getPermissionsAsync,\n  requestPermissionsAsync\n} = Camera;\nexport { PermissionStatus };","map":{"version":3,"sources":["../src/Camera.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Platform, UnavailabilityError } from '@unimodules/core';\nimport mapValues from 'lodash/mapValues';\nimport * as React from 'react';\nimport { findNodeHandle } from 'react-native';\n\nimport {\n  BarCodeScanningResult,\n  CameraCapturedPicture,\n  CameraMountError,\n  CameraNativeProps,\n  CameraPictureOptions,\n  CameraProps,\n  CameraRecordingOptions,\n  FaceDetectionResult,\n  PermissionExpiration,\n  PermissionResponse,\n  PermissionStatus,\n} from './Camera.types';\nimport ExponentCamera from './ExponentCamera';\nimport CameraManager from './ExponentCameraManager';\n\nconst EventThrottleMs = 500;\n\nconst _PICTURE_SAVED_CALLBACKS = {};\n\nlet _GLOBAL_PICTURE_ID = 1;\n\nfunction ensurePictureOptions(options?: CameraPictureOptions): CameraPictureOptions {\n  const pictureOptions: CameraPictureOptions =\n    !options || typeof options !== 'object' ? {} : options;\n\n  if (!pictureOptions.quality) {\n    pictureOptions.quality = 1;\n  }\n  if (pictureOptions.onPictureSaved) {\n    const id = _GLOBAL_PICTURE_ID++;\n    _PICTURE_SAVED_CALLBACKS[id] = pictureOptions.onPictureSaved;\n    pictureOptions.id = id;\n    pictureOptions.fastMode = true;\n  }\n  return pictureOptions;\n}\n\nfunction ensureRecordingOptions(options?: CameraRecordingOptions): CameraRecordingOptions {\n  let recordingOptions = options || {};\n\n  if (!recordingOptions || typeof recordingOptions !== 'object') {\n    recordingOptions = {};\n  } else if (typeof recordingOptions.quality === 'string') {\n    recordingOptions.quality = Camera.Constants.VideoQuality[recordingOptions.quality];\n  }\n\n  return recordingOptions;\n}\n\nfunction ensureNativeProps(options?: CameraProps): CameraNativeProps {\n  let props = options || {};\n\n  if (!props || typeof props !== 'object') {\n    props = {};\n  }\n\n  const newProps: CameraNativeProps = mapValues(props, convertProp);\n\n  const propsKeys = Object.keys(newProps);\n  // barCodeTypes is deprecated\n  if (!propsKeys.includes('barCodeScannerSettings') && propsKeys.includes('barCodeTypes')) {\n    if (__DEV__) {\n      console.warn(\n        `The \"barCodeTypes\" prop for Camera is deprecated and will be removed in SDK 34. Use \"barCodeScannerSettings\" instead.`\n      );\n    }\n    newProps.barCodeScannerSettings = {\n      // @ts-ignore\n      barCodeTypes: newProps.barCodeTypes,\n    };\n  }\n\n  if (props.onBarCodeScanned) {\n    newProps.barCodeScannerEnabled = true;\n  }\n\n  if (props.onFacesDetected) {\n    newProps.faceDetectorEnabled = true;\n  }\n\n  if (Platform.OS !== 'android') {\n    delete newProps.ratio;\n    delete newProps.useCamera2Api;\n  }\n\n  return newProps;\n}\n\nfunction convertProp(value: any, key: string): any {\n  if (typeof value === 'string' && Camera.ConversionTables[key]) {\n    return Camera.ConversionTables[key][value];\n  }\n\n  return value;\n}\n\nfunction _onPictureSaved({\n  nativeEvent,\n}: {\n  nativeEvent: { data: CameraCapturedPicture; id: number };\n}) {\n  const { id, data } = nativeEvent;\n  const callback = _PICTURE_SAVED_CALLBACKS[id];\n  if (callback) {\n    callback(data);\n    delete _PICTURE_SAVED_CALLBACKS[id];\n  }\n}\n\nexport default class Camera extends React.Component<CameraProps> {\n  static async isAvailableAsync(): Promise<boolean> {\n    if (!CameraManager.isAvailableAsync) {\n      throw new UnavailabilityError('expo-camera', 'isAvailableAsync');\n    }\n\n    return await CameraManager.isAvailableAsync();\n  }\n\n  static async getAvailableCameraTypesAsync(): Promise<('front' | 'back')[]> {\n    if (!CameraManager.getAvailableCameraTypesAsync) {\n      throw new UnavailabilityError('expo-camera', 'getAvailableCameraTypesAsync');\n    }\n\n    return await CameraManager.getAvailableCameraTypesAsync();\n  }\n\n  static Constants = {\n    Type: CameraManager.Type,\n    FlashMode: CameraManager.FlashMode,\n    AutoFocus: CameraManager.AutoFocus,\n    WhiteBalance: CameraManager.WhiteBalance,\n    VideoQuality: CameraManager.VideoQuality,\n    VideoStabilization: CameraManager.VideoStabilization || {},\n  };\n\n  // Values under keys from this object will be transformed to native options\n  static ConversionTables = {\n    type: CameraManager.Type,\n    flashMode: CameraManager.FlashMode,\n    autoFocus: CameraManager.AutoFocus,\n    whiteBalance: CameraManager.WhiteBalance,\n  };\n\n  static defaultProps: CameraProps = {\n    zoom: 0,\n    ratio: '4:3',\n    focusDepth: 0,\n    faceDetectorSettings: {},\n    type: CameraManager.Type.back,\n    autoFocus: CameraManager.AutoFocus.on,\n    flashMode: CameraManager.FlashMode.off,\n    whiteBalance: CameraManager.WhiteBalance.auto,\n  };\n\n  static async getPermissionsAsync(): Promise<PermissionResponse> {\n    return CameraManager.getPermissionsAsync();\n  }\n\n  static async requestPermissionsAsync(): Promise<PermissionResponse> {\n    return CameraManager.requestPermissionsAsync();\n  }\n\n  _cameraHandle?: number | null;\n  _cameraRef?: React.Component | null;\n  _lastEvents: { [eventName: string]: string } = {};\n  _lastEventsTimes: { [eventName: string]: Date } = {};\n\n  async takePictureAsync(options?: CameraPictureOptions): Promise<CameraCapturedPicture> {\n    const pictureOptions = ensurePictureOptions(options);\n\n    return await CameraManager.takePicture(pictureOptions, this._cameraHandle);\n  }\n\n  async getSupportedRatiosAsync(): Promise<string[]> {\n    if (!CameraManager.getSupportedRatios) {\n      throw new UnavailabilityError('Camera', 'getSupportedRatiosAsync');\n    }\n\n    return await CameraManager.getSupportedRatios(this._cameraHandle);\n  }\n\n  async getAvailablePictureSizesAsync(ratio?: string): Promise<string[]> {\n    if (!CameraManager.getAvailablePictureSizes) {\n      throw new UnavailabilityError('Camera', 'getAvailablePictureSizesAsync');\n    }\n    return await CameraManager.getAvailablePictureSizes(ratio, this._cameraHandle);\n  }\n\n  async recordAsync(options?: CameraRecordingOptions): Promise<{ uri: string }> {\n    if (!CameraManager.record) {\n      throw new UnavailabilityError('Camera', 'recordAsync');\n    }\n\n    const recordingOptions = ensureRecordingOptions(options);\n\n    return await CameraManager.record(recordingOptions, this._cameraHandle);\n  }\n\n  stopRecording() {\n    if (!CameraManager.stopRecording) {\n      throw new UnavailabilityError('Camera', 'stopRecording');\n    }\n\n    CameraManager.stopRecording(this._cameraHandle);\n  }\n\n  pausePreview() {\n    if (!CameraManager.pausePreview) {\n      throw new UnavailabilityError('Camera', 'pausePreview');\n    }\n\n    CameraManager.pausePreview(this._cameraHandle);\n  }\n\n  resumePreview() {\n    if (!CameraManager.resumePreview) {\n      throw new UnavailabilityError('Camera', 'resumePreview');\n    }\n\n    CameraManager.resumePreview(this._cameraHandle);\n  }\n\n  _onCameraReady = () => {\n    if (this.props.onCameraReady) {\n      this.props.onCameraReady();\n    }\n  };\n\n  _onMountError = ({ nativeEvent }: { nativeEvent: { message: string } }) => {\n    if (this.props.onMountError) {\n      this.props.onMountError(nativeEvent);\n    }\n  };\n\n  _onObjectDetected = (callback?: Function) => ({ nativeEvent }: { nativeEvent: any }) => {\n    const { type } = nativeEvent;\n    if (\n      this._lastEvents[type] &&\n      this._lastEventsTimes[type] &&\n      JSON.stringify(nativeEvent) === this._lastEvents[type] &&\n      new Date().getTime() - this._lastEventsTimes[type].getTime() < EventThrottleMs\n    ) {\n      return;\n    }\n\n    if (callback) {\n      callback(nativeEvent);\n      this._lastEventsTimes[type] = new Date();\n      this._lastEvents[type] = JSON.stringify(nativeEvent);\n    }\n  };\n\n  _setReference = (ref?: React.Component) => {\n    if (ref) {\n      this._cameraRef = ref;\n      // TODO(Bacon): Unify these - perhaps with hooks?\n      if (Platform.OS === 'web') {\n        this._cameraHandle = ref as any;\n      } else {\n        this._cameraHandle = findNodeHandle(ref);\n      }\n    } else {\n      this._cameraRef = null;\n      this._cameraHandle = null;\n    }\n  };\n\n  render() {\n    const nativeProps = ensureNativeProps(this.props);\n\n    const onBarCodeScanned = this.props.onBarCodeScanned\n      ? this._onObjectDetected(this.props.onBarCodeScanned)\n      : undefined;\n    const onFacesDetected = this._onObjectDetected(this.props.onFacesDetected);\n\n    return (\n      <ExponentCamera\n        {...nativeProps}\n        ref={this._setReference}\n        onCameraReady={this._onCameraReady}\n        onMountError={this._onMountError}\n        onBarCodeScanned={onBarCodeScanned}\n        onFacesDetected={onFacesDetected}\n        onPictureSaved={_onPictureSaved}\n      />\n    );\n  }\n}\n\nexport const { Constants, getPermissionsAsync, requestPermissionsAsync } = Camera;\n\nexport {\n  CameraCapturedPicture,\n  CameraNativeProps,\n  CameraPictureOptions,\n  CameraProps,\n  CameraRecordingOptions,\n  PermissionResponse,\n  PermissionStatus,\n  PermissionExpiration,\n  BarCodeScanningResult,\n  FaceDetectionResult,\n  CameraMountError,\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}