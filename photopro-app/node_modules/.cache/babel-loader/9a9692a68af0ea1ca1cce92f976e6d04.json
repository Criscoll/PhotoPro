{"ast":null,"code":"var _jsxFileName = \"/home/mimi/Desktop/COMP3900/capstone-project-comp3900-f11a-2mjec/photopro-app/src/components/searchbar/searchbar.jsx\";\nimport React, { useState } from \"react\";\nimport \"./searchbar.css\";\nimport axios from \"axios\";\nimport Feed from \"../feed/feed\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nfunction SearchBar(props) {\n  const [imgs, setImgs] = useState([]);\n  const [searchVal, setSearchVal] = useState(\"\"); // const onSearchSubmit = async function (term) {\n  //   const response = await axios.get(\"http://localhost:5000/discovery\", {\n  //     params: { query: term, batch_size: 30 }, //user_id: 1\n  //   });\n  //   console.log(response.data.result);\n  //   // getLikes(response);\n  //   console.log(response);\n  //   return response;\n  // };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const images = onSearchSubmit(searchVal);\n    images.then(imageResults => {\n      console.log(imageResults); // this means no images were found\n\n      if (imageResults.data.result !== false) {\n        setImgs(imageResults.data.result);\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"flexContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"inputStyle\",\n    type: \"text\",\n    value: searchVal,\n    onChange: event => setSearchVal(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default SearchBar;","map":{"version":3,"sources":["/home/mimi/Desktop/COMP3900/capstone-project-comp3900-f11a-2mjec/photopro-app/src/components/searchbar/searchbar.jsx"],"names":["React","useState","axios","Feed","InfiniteScroll","SearchBar","props","imgs","setImgs","searchVal","setSearchVal","handleSubmit","e","preventDefault","images","onSearchSubmit","then","imageResults","console","log","data","result","event","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,iBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C,CAFwB,CAIxB;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;;AAEA,QAAMU,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,MAAM,GAAGC,cAAc,CAACN,SAAD,CAA7B;AACAK,IAAAA,MAAM,CAACE,IAAP,CAAaC,YAAD,IAAkB;AAC5BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ,EAD4B,CAE5B;;AACA,UAAIA,YAAY,CAACG,IAAb,CAAkBC,MAAlB,KAA6B,KAAjC,EAAwC;AACtCb,QAAAA,OAAO,CAACS,YAAY,CAACG,IAAb,CAAkBC,MAAnB,CAAP;AACD;AACF,KAND;AAOD,GAVD;;AAYA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,QAAQ,EAAEV,YAAhB;AAA8B,IAAA,SAAS,EAAC,eAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,YADZ;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,KAAK,EAAEF,SAHT;AAIE,IAAA,QAAQ,EAAGa,KAAD,IAAWZ,YAAY,CAACY,KAAK,CAACC,MAAN,CAAaC,KAAd,CAJnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAaD;;AAED,eAAenB,SAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./searchbar.css\";\nimport axios from \"axios\";\nimport Feed from \"../feed/feed\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nfunction SearchBar(props) {\n  const [imgs, setImgs] = useState([]);\n  const [searchVal, setSearchVal] = useState(\"\");\n\n  // const onSearchSubmit = async function (term) {\n  //   const response = await axios.get(\"http://localhost:5000/discovery\", {\n  //     params: { query: term, batch_size: 30 }, //user_id: 1\n  //   });\n\n  //   console.log(response.data.result);\n  //   // getLikes(response);\n\n  //   console.log(response);\n\n  //   return response;\n  // };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const images = onSearchSubmit(searchVal);\n    images.then((imageResults) => {\n      console.log(imageResults);\n      // this means no images were found\n      if (imageResults.data.result !== false) {\n        setImgs(imageResults.data.result);\n      }\n    });\n  };\n\n  return (\n    <React.Fragment>\n      <form onSubmit={handleSubmit} className=\"flexContainer\">\n        <input\n          className=\"inputStyle\"\n          type=\"text\"\n          value={searchVal}\n          onChange={(event) => setSearchVal(event.target.value)}\n        />\n      </form>\n      {/* <Feed foundImages={imgs} /> */}\n    </React.Fragment>\n  );\n}\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}